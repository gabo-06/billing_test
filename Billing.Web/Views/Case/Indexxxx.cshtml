<link href="@Url.Content("~/Content/select2.min.css")" rel="stylesheet"  type="text/css" media="all" />

<script src="@Url.Content("~/scripts/js/plugins/dataTables/datatables.min.js")" async="async"></script>
<script src="@Url.Content("~/scripts/select2.min.js")" async="async"></script>


<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">        
        <div class="col-lg-12" id="divCaso">
            <div class="ibox float-e-margins">
                <div class="ibox-title header_formulario">
                    <h5>SEARCH CASE INFORMATION</h5>
                </div> 
                <div class="ibox-content">
                  <form method="get" class="form-horizontal" id="frmBusquedaCaso">
                    <div class="form-group text-center">
                            <label class="col-sm-4 control-label">Search Case Information</label>
                            <div class="col-sm-5">
                                <input type="text" class="form-control ui-autocomplete-input" id="txtBuscaCaso" autocomplete="off">                                        
                                
                    </div>
                    </div>
                  </form> 
                </div>
                <div class="ibox-content" id="EnvolturatblCasos">
                    <div class="form-group" >  
                    </div>
                </div>

        </div>
    </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                    <div class="ibox-title header_formulario">
                    <h5>CASE INFORMATION</h5>
                    </div>
                    <div class="ibox-content" id="detalleCase">
                      <form role="form" method="get"  class="form-horizontal">
                                                     <div class="row">
    <h3 class="m-t-none m-b titulo_linea" >Sign in</h3>
  </div>
                        <div class="row">
                            
                            <div class="col-sm-6 b-r">
                                @*<h3 class="m-t-none m-b">Sign in</h3>      *@                          
                                <input type="hidden" id="hdCodigoCaso" />
                                <div class="form-group">
                                        <label class="col-lg-3 control-label">Patient´s Name<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <input type="hidden" id="hdCodigoPaciente" value ="0"/>
                                    <div class="col-lg-7">
                                        @*<input type="text" class="form-control" id="txtPaciente" />*@                                                                                
                                        <select class="form-control" id="cmbPaciente">
                                        </select>
                                    </div>
                                    <div class="col-lg-2">
                                      <button id="btnRegistrarPaciente" class="btn btn-primary" data-toggle="modal" data-target="#myModalPatient" type="button"  data-placement="top" title="Register a new patient">
                                         <i class="fa fa-plus"></i>
                                      </button>
                                      <button id="btnEditarPaciente" class="btn btn-primary hidden" data-toggle="modal" data-target="#myModalPatient" type="button"  data-placement="top" title="Edit patient">
                                         <i class="fa fa-pencil"></i>
                                      </button>
                                      <button id="btnModalPacienteHom" class="btn btn-primary" type="button" data-toggle="modal" data-target="#myModalPatientHom" style="display:none;"></button>
                                </div>
                                </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">SS Number</label>
                                         <div class="col-lg-5">
                                             <input type="text" class="form-control" id="txtNumeroSeguroSocial" readonly>
                                        </div>

                                         <label class="col-lg-1 control-label">DOB</label>
                                         <div class="col-lg-3">
                                             <input type="text" class="form-control" id="txtFechaNacimiento" readonly>
                                         </div>
                                    </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">Street</label> 
                                         <div class="col-lg-9">
                                         <input type="text" class="form-control" id="txtDireccion" readonly/>     
                        </div>
                            </div>
                                   <div class="form-group">
                                         <label class="col-lg-3 control-label">City</label> 
                                         <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtCiudad" readonly />                                        
                            </div>
                        </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">State</label> 
                                         <div class="col-lg-9">
                                         <input type="text" class="form-control" id="txtEstadoPais" readonly/>     
                            </div>
                        </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">Zip Code</label> 
                                         <div class="col-lg-5">
                                            <input type="text" class="form-control" id="txtCodigoPostal" readonly />                                        
                                        </div>

                                        <label class="col-lg-1 control-label">Ext</label> 
                                         <div class="col-lg-3">
                                <input type="text" class="form-control" id="txtExtensionCodigoPostal" readonly />                                        
                            </div>
                        </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">Phone</label> 
                                         <div class="col-lg-9">
                                         <input type="text" class="form-control" id="txtTelefono" readonly/>     
                            </div>
                        </div>
                                    <div class="form-group">
                                         <label class="col-lg-3 control-label">Alternative Phone</label> 
                                         <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtTelefonoAlternativo" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">SEX</label>
                            <div class="col-lg-9">
                                <input type="radio" name="Sexo" class="OpcionSexo" id="rdbMasculino" disabled="disabled" style="cursor: pointer;" /> &nbsp Male
                                <input type="radio" name="Sexo" class="OpcionSexo" id="rdbFemenino" disabled="disabled"  style="cursor: pointer;" /> &nbsp Female
                                &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
                                <!--<button id="btnActualizarSexo" class="btn btn-primary" data-toggle="modal" data-target="#myModalSex" disabled="disabled" type="button">
                                <i class="fa fa-pencil"></i>
                                </button> Se usaba antes-->
                                <button id="btnActualizarSexo" class="btn btn-primary"  disabled="disabled" type="button">
                                    <i class="fa fa-save"></i> Update
                                </button>
                            </div>
                        </div>

                        <div class="form-group" >
                                    <label class="col-lg-3 control-label">DOI<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-lg-8 input-group">
                                         &nbsp;&nbsp;<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                         <input type="text" class="form-control" id="txtFechaAccidente" value="" />                                        
                            </div>
                        </div>
                        <div class="form-group" >
                                        <label class="col-lg-3 control-label">Injury</label>
                                     <div class="col-lg-9">
                                         <textarea class="form-control" id="txtDaño" style="height: 157px;"></textarea>
                            </div>
                        </div>

                                
                            </div>
                       <div class="col-sm-6">
                          @* <h3 class="m-t-none m-b">Sign in</h3>*@

                        <div class="form-group" >
                             <label class="col-lg-3 control-label">Status<span style="color:red; font-size:15px;"> (*)</span></label>
                             <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtStatus" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Claim#</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtClaim"  />                                        
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Adjuster<span style="color:red; font-size:15px;"> (*)</span></label>
                            <div class="col-lg-7">
                                <input type="hidden" id="hdCodigoAjustador" value="0" />
                                @*<input type="text" class="form-control" id="txtAjustador" />*@                                        
                                <select class="form-control" id="cmbAjustador">
                                </select>
                            </div>
                            <div class="col-lg-2">
                                <button id="btnRegistrarAdjuster" class="btn btn-primary" disabled="disabled" data-toggle="modal" data-target="#myModalAdjuster" type="button" data-placement="top" title="Register a new patient">
                                    <i class="fa fa-plus"></i>
                                </button>
                                
                                <button style="display:none;" data-target="#myModalAdjusterHom" data-toggle="modal" id="btnModalAdjusterHom" class="btn btn-primary" type="button"></button>
                            </div>
                        </div>

                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Phone</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtAdjusterPhone" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Ext</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtAdjusterPhoneExt" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-lg-3 control-label">Insurer<span style="color:red; font-size:15px;"> (*)</span></label>
                            <div class="col-lg-7">
                                <input type="hidden" id="hdCodigoAseguradora" value="0" />
                                @*<input type="text" class="form-control" id="txtAseguradora" />*@                                        
                                <select class="form-control" id="cmbAseguradora">
                                </select>
                            </div>
                            <div class="col-lg-2">
                                <button id="btnRegistrarInsurer" class="btn btn-primary" data-toggle="modal" disabled ="disabled" data-target="#myModalInsurer" type="button" data-placement="top" title="Register a new insurer">
                                    <i class="fa fa-plus"></i>
                                </button>
                                <button type="button" class="btn btn-primary"  id="btnModalInsurerHom" data-toggle="modal" data-target="#myModalInsurerHom" style="display:none;"></button>
                                
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-lg-3 control-label">Street</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtDireccionAseguradora" readonly="">                                        
                            </div>
                        </div>
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">City</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtCiudadAseguradora" readonly />                                        
                            </div>
                        </div>
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">State</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtEstadoAseguradora" readonly />                                        
                            </div>
                        </div>
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Zip Code</label>
                            <div class="col-lg-4">
                                <input type="text" class="form-control" id="txtCodigoPostalAseguradora" readonly />                                        
                            </div>
                             <label class="col-lg-2 control-label">Ext</label>
                            <div class="col-lg-3">
                                <input type="text" class="form-control" id="txtExtensionCodigoPostalAseguradora" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group" >
                             <label class="col-lg-3 control-label">Phone</label>
                            <div class="col-lg-4">
                                <input type="text" class="form-control" id="txtTelefonoAseguradora" readonly />                                        
                            </div>
                             <label class="col-lg-2 control-label">Ext</label>
                            <div class="col-lg-3">
                                <input type="text" class="form-control" id="txtExtensionTelefonoAseguradora" readonly />                                        
                            </div>
                        </div>

                       
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Fax</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtFaxAseguradora" readonly />                                        
                            </div>
                        </div>

                        <div class="form-group" >
                            <label class="col-lg-3 control-label">CC</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtContacto1" />                                        
                            </div>
                        </div>
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">CC</label>
                            <div class="col-lg-9">
                                <input type="text" class="form-control" id="txtContacto2" />                                        
                            </div>
                        </div>                        


                        </div>                        
                  </div> <!--// fin row-->

<div class="row">
    <h3 class="m-t-none m-b titulo_linea">DETAILS</h3>
</div>

                  <div class="row"> <!--Nuevo row-->
                                <!--//////////////////////////////BRENHER////////////////////////////////////////////////-->
                                <div class="col-sm-6 b-r">
                                    @*<h3 class="m-t-none m-b">Information</h3>  *@
                                    <div class="form-group">                                        
                                         <label class="col-lg-3 control-label">Price per Hour<span style="color:red; font-size:15px;"> (*)</span></label>
                                         <div class="col-lg-9">
                                          <input type="text" class="form-control" id="txtPrice">    
                            </div>
                        </div>
                        <div class="form-group">
                                         <label class="col-lg-3 control-label">Date of Referral</label>
                                         <div class="col-lg-9 input-group">
                                               &nbsp;&nbsp;<span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                               <input type="text" class="form-control" id="txtFechaReferencia" value=""> 
                                        </div>
                        </div>

                        <div class="form-group">
                                       <label class="col-lg-3 control-label">Provider<span style="color:red; font-size:15px;"> (*)</span></label>
                                       <div class="col-lg-7">
                                           <input type="hidden" id="hdCodigoProveedor" value="0">
                                           @*<input type="text" class="form-control ui-autocomplete-input" id="txtProveedor" autocomplete="off">*@                                        
                                        <select class="form-control" id="cmbProveedor">
                                        </select>
                            </div>
                                <div class="col-lg-2">
                                <button type="button" data-target="#myModalProvider" data-toggle="modal" class="btn btn-primary" id="btnRegistrarProveedor" disabled="disabled" data-placement="top" title="Register a new provider">
                                    <i class="fa fa-plus"></i>
                                </button>
                                 <button type="button" class="btn btn-primary"  id="btnModalProviderHom" data-toggle="modal" data-target="#myModalProveedorHom" style="display:none;"></button>   
                            </div>
                        </div>


                                   <div class="form-group">
                                         <label class="col-lg-3 control-label">Case Supervisor<span style="color:red; font-size:15px;">(*)</span></label> 
                                         <div class="col-lg-9">
                                <input type="hidden" id="hdCodigoCaseSupervisor" value="0"/>
                                @*<input type="text" class="form-control" id="txtCaseSupervisor" />*@                                        
                                        <select class="form-control" id="cmbCaseSupervisor">
                                        </select>
                            </div>
                        </div>

                              
                            <div class="form-group" >
								    <label class="col-lg-3 control-label">Longshore</label>
								    <div class="col-lg-2">
                                    <input type="checkbox" class="LongshoreCompanyStatusOther" id="cbLongshore" style="cursor: pointer;" />                                        
                                </div>
								    <label class="col-lg-3 control-label" style="text-align: left;">State Company</label>
								    <div class="col-lg-4">
                                    <input type="checkbox" class="LongshoreCompanyStatusOther" id="cbEstadoEmpresa" style="cursor: pointer;" />
                                </div>
                            </div>
                            <div class="form-group">
								    <label class="col-lg-3 control-label">Other</label>
								    <div class="col-lg-2">
                                    <input type="checkbox" class="LongshoreCompanyStatusOther" id="cbOtro" style="cursor: pointer;" />                                        
                                </div>
								    <div class="col-lg-7">
                                    <input type="text" class="form-control" id="txtOtroTexto" placeholder="Other Text" />
                                </div>                                                                            
                            </div> 
                                <div class="form-group">
                                      <label class="col-lg-3 control-label">Presumption</label>
                                       <div class="col-lg-5">
                                       <input type="checkbox" id="cbPresuncion" style="cursor: pointer;">                                        
                            </div>
                        </div>                        
                        <div class="form-group" >
                                 <label class="col-lg-3 control-label">Acuity</label>
                                 <div class="col-lg-9">
                                <select class="form-control" id="cmbAcuity">
                                    <option value="0">-- SELECTED --</option>
                                    <option value="1">EASIEST</option>
                                    <option value="2">MEDIUM</option>
                                    <option value="3">HARDEST</option>
                                </select>
                            </div>
                                </div>
                               
                            </div>


                      <div class="col-sm-6">
                                
                               <div class="form-group">
                                <label class="col-lg-3 control-label">&nbsp;&nbsp;&nbsp;</label>
                                <div class="col-lg-1">Yes</div>
                                <div class="col-lg-1">No</div>
                                <div class="col-lg-6 text-center">Company</div>                                                                            
                            </div>                           
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Translation</label>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="Traslado" id="cbTrasladoSi" style="cursor: pointer;">                                                                              
                                </div>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="Traslado" id="cbTrasladoNo" style="cursor: pointer;">
                                </div>
                                <div class="col-lg-6">
                                    <input type="text" class="form-control" id="txtEmpresaTraslado" placeholder="Company">
                        </div>
                                </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Transportation</label>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="Transporte" id="cbTransporteSi" style="cursor: pointer;">                                                                                                                    
                                </div>                                                                            
                                <div class="col-lg-1">
                                <input type="checkbox" class="Transporte" id="cbTransporteNo" style="cursor: pointer;">
                            </div>
                                <div class="col-lg-6">
                                    <input type="text" class="form-control" id="txtEmpresaTransporte" placeholder="Company">
                                </div>
                                </div>                                                                            
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Physical therapy</label>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="TerapiaFisica" id="cbTerapiaFisicaSi" style="cursor: pointer;">                                                                                                                  
                            </div>
                                <div class="col-lg-1">
                                <input type="checkbox" class="TerapiaFisica" id="cbTerapiaFisicaNo" style="cursor: pointer;">  
                                </div>
                                <div class="col-lg-6">
                                    <input type="text" class="form-control" id="txtEmpresaTerapiaFisica" placeholder="Company">
                                </div>                                                                            
                            </div>
                            <div class="form-group">
                                <label class="col-lg-3 control-label">Permission to Contact</label>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="PermisoContacto" id="cbPermisoContactoSi" style="cursor: pointer;">                                        
                                </div>
                                <div class="col-lg-1">
                                    <input type="checkbox" class="PermisoContacto" id="cbPermisoContactoNo" style="cursor: pointer;">                                        
                                </div>                                                                            
                                <div class="col-lg-6">
                                    <input type="text" class="form-control" id="txtEmpresaPermisoContacto" placeholder="Company">
                            </div>
                        </div>
                        <div class="form-group" >
                            <label class="col-lg-3 control-label">Notes</label>
                            <div class="col-lg-9">
                                <textarea class="form-control" id="txtNotas" style="height: 122px;" ></textarea>
                            </div>
                            </div>

                        </div>

                <div class="ibox-content text-center" >     
                        <p><span style="color: red; font-weight: bold;">NOTE: ALL FILEDS WITH * ARE REQUIRED</span></p>
                        <div class="form-group" >
                            <button id="btnNuevo" class="btn btn-primary" type="button"  data-toggle="tooltipB" data-placement="top" title="Create a New case">
                                <i class="fa fa-file"> &nbsp;New Case</i>
                            </button>
                            <button id="btnRegistrar" class="btn btn-primary" type="submit"   data-toggle="tooltipB" data-placement="top" title="Save the information">
                                <i class="fa fa-floppy-o">&nbsp;Save Case</i>
                            </button>
                            <button id="btnActualizar" class="btn btn-primary" type="button" disabled  data-toggle="tooltipB" data-placement="top" title="Edit case">
                                <i class="fa fa-pencil">&nbsp;Edit Case</i>
                            </button>
                        </div>
                        <div class="form-group" >
                            <button id="generaPdf" class="btn btn-primary"  type="button" ><i class="fa fa-file"></i>&nbsp;Generate Pdf</button>
                            <a  href='#' id="linkPdf" data-url="@Url.Content("~/Case/DownloadPDF")" class="btn btn-primary" target="_blank" style="display:none;"><i class="fa fa-file"></i>&nbsp;Generate link</a>
                        </div>
                     
                           
                    
                </div>
                    
                </div>
                </form>
            </div>
        </div>
            </div>
    
    </div>    

    
    <div class="row">
                <div class="col-lg-12">
                    <div class="tabs-container">
                            <ul class="nav nav-tabs">
                                <li class="active"><a data-toggle="tab" href="#tab-1" id="tbDoctoresDeCaso"> DOCTORS</a></li>
                                <li class=""><a data-toggle="tab" href="#tab-2" id="tbAbogadosDeCaso"> ATTORNEYS</a></li>
                            </ul>
                            <div class="tab-content">
                                <div id="tab-1" class="tab-pane active">
                                    <div class="panel-body">
                                       <fieldset class="form-horizontal">
                                         <div class="form-group">
                                          <label class="col-lg-3 control-label">Doctor´s Name</label> 
                                          <input type="hidden" id="hdCodigoDoctorParaAsignar">
                                          <div class="col-lg-9">
                                          <input type="text" class="form-control ui-autocomplete-input" id="txtDoctor" autocomplete="off">     
                                          </div>                                           
                                         </div>
                                         <div class="form-group text-center">
                                             

                                             <button id="btnNuevoDoctor" class="btn btn-primary" data-toggle="modal" data-target="#myModal4" type="button"  data-placement="top" title="Register a new doctor"><i class="fa fa-plus"></i>&nbsp;New Doctor</button>
                                             <button style="display:none;" data-target="#myModalDoctorHom" data-toggle="modal" id="btnModalDoctorHom" class="btn btn-primary" type="button"></button>
                                             <button id="btnAsignaDoctor" class="btn btn-primary" type="submit" data-placement="top" title="Add doctor to table"><i class="fa fa-plus"></i>&nbsp;Doctor</button>
                                             <!-- <button type="button" class="btn btn-primary"  id="btnModalxx" data-toggle="modal" data-target="#myModal4" style="display:block;"></button> -->
                                          </div>
                                       </fieldset>
                                        <div class="table-responsive" id="TablaParaBusquedaDoctor">
    <table class="table table-striped table-bordered table-hover dataTables-example" id="tblDoctor" >
        <thead class="th_tabla">
            <tr>
                <th class="hidden"></th>
                <th >
                    Name
                </th>
                <th >         
                    Street      
                </th>
                <th >
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Zip
                </th>
                <th>
                    Ext
                </th>
                <th>
                    Phone
                </th>
                <th>
                    Ext
                </th>
                <th>
                    All phone
                </th>
                <th>
                    Fax
                </th>
                <th>
                    Speciality
                </th>
                <th>
                    Office
                </th>
                <th>
                    Delete
                </th>
            </tr>
        </thead>
        <tbody>
       
        </tbody>
        <tfoot>
           <tr>
                <th class="hidden"></th>
                <th>
                    Name
                </th>
                <th >         
                    Street      
                </th>
                <th >
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Zip
                </th>
                <th>
                    Ext
                </th>
                <th>
                    Phone
                </th>
                <th>
                    Ext
                </th>
                <th>
                    All phone
                </th>
                <th>
                    Fax
                </th>
                <th>
                    Speciality
                </th>
                <th>
                    Office
                </th>
                <th>
                    Delete
                </th>
            </tr>
        </tfoot>
    </table>
</div>
                                    </div>
                                </div>
                             
                                <div id="tab-2" class="tab-pane">
                                     
                                    <div class="panel-body">
                                       <fieldset class="form-horizontal">
                                         <div class="form-group">
                                          <label class="col-lg-3 control-label">Attorney´s Name</label> 
                                          <input type="hidden" id="hdCodigoAbogadoParaAsignar">
                                          <div class="col-lg-9">
                                          <input type="text" class="form-control ui-autocomplete-input" id="txtAbogado" autocomplete="off">     
                                          </div>                                           
                                         </div>
                                         <div class="form-group text-center">
                                             <button id="btnNuevoAbogado" class="btn btn-primary" id="btnModalTest" data-toggle="modal" data-target="#myModal55" type="button" data-placement="top" title="Register a new attorney"><i class="fa fa-plus"></i>&nbsp;New Attorney</button>
                                             <button id="btnAsignaAbogado" class="btn btn-primary" type="submit"><i class="fa fa-plus" data-placement="top" title="Add attorney to table"></i>&nbsp;Attorney</button>
                                             <!-- <button style="display:block;" data-target="#MyModal5" data-toggle="modal" id="btnModalaa" class="btn btn-primary" type="button"></button> -->
                                          </div>
                                       </fieldset>
                                        <div class="table-responsive" id="TablaParaBusquedaAttorney">
    <table class="table table-striped table-bordered table-hover dataTables-example" id="tblAbogado" >
        <thead class="th_tabla">
            <tr>
                <th class="hidden"></th>
                <th >
                    Name
                </th>
                <th >         
                    Street      
                </th>
                <th >
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Zip
                </th>
                <th>
                    Ext
                </th>
                <th>
                    Phone
                </th>
                <th>
                    Fax
                </th>
                <th>
                    Speciality
                </th>
                <th>
                    Assistant
                </th>
                <th>
                    Delete
                </th>
            </tr>
        </thead>
        <tbody>
       
        </tbody>
        <tfoot>
           <tr>
               <th class="hidden"></th>
                <th>
                    Name
                </th>
                <th >         
                    Street      
                </th>
                <th >
                    City
                </th>
                <th>
                    State
                </th>
                <th>
                    Zip
                </th>
                <th>
                    Ext
                </th>
                <th>
                    Phone
                </th>
                <th>
                    Fax
                </th>
                <th>
                    Speciality
                </th>
                <th>
                    Assistant
                </th>
                <th>
                    Delete
                </th>
            </tr>
        </tfoot>
    </table>
</div>
                                    </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>



</div>


<div class="modal inmodal" id="myModal4" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <!--<div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Add New Doctor</h4>
                                        </div>-->
                                        <div class="ibox-title header_formulario" >  <h5>Add New Doctor</h5> </div>

                                    <div class="modal-body">
                                        <form role="form" method="get" class="form-horizontal">
                                            
                                            <input type="hidden" id="hdCodigoModalDoctor" class="form-control" autofocus>
                                                                                    
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">First name *</label>           
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtNombreDoctor" class="form-control" autofocus tabindex="1">                                        
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Last name *</label>           
                                                <div class="col-lg-4">
                                                    <input type="text" id="txtApellidoDoctor" class="form-control" tabindex="2">                                        
                                                </div>
                                            </div>               
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Address</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtDireccionDoctor" class="form-control"  tabindex="3">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">State *</label>
                                                <input type="hidden" id="hdAbreviaturaEstadoPaisDoctor" />
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtEstadoPaisDoctor" class="form-control"  tabindex="4">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">City *</label>
                                                <input type="hidden" id="hdCiudadDoctor" /> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtCiudadDoctor" class="form-control" tabindex="5">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Zip code</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtCodigoPostalDoctor" class="form-control" maxlength="5" tabindex="6">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Ext</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtExtensionCodigoPostalDoctor" class="form-control" tabindex="7">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Phone</label>
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtTelefonoDoctor" class="form-control" tabindex="8">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Ext</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtExtensionTelefonoDoctor" class="form-control" tabindex="9">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Alt.Phone</label>
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtTelefonoAlternativoDoctor" class="form-control" tabindex="10">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Fax</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtFaxDoctor" class="form-control" tabindex="11">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Speciality *</label> 
                                                <div class="col-lg-6">
                                                    <select id="cmbEspecialidadesDoctor" class="form-control m-b" tabindex="12">
                                                        <option selected value=''>-- SELECTED --</option>
                                                    </select>
                                                </div>
                                                <div class="col-lg-2">
                                                 <button id="btnModalSpeciality"  data-target="#myModalEspecialidad" data-toggle="modal" class="btn btn-primary" type="button" tabindex="13">
                                                   <i class="fa fa-plus"></i>
                                                  </button>
                                               </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Office</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtOficinaDoctor" class="form-control" tabindex="14">
                                                </div>
                                            </div>
                                        </form>

                                        </div>
                                        <div class="modal-footer" style="text-align:center;">                                            
                                            <button type="button" id="btnAsignarNuevoDoctorCaso" class="btn btn-primary">ADD TO THE DATABASE</button>
                                            <button type="button" id="btnCancelarDoctorModal" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>

<!--//////////////////////////////MODAL ADJUSTER//////////////////////////////////-->
<div class="modal inmodal" id="myModalAdjuster" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <!--<div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Add New Doctor</h4>
                                        </div>-->
                                        <div class="ibox-title header_formulario" >  <h5>Add New Adjuster</h5> </div>

                                    <div class="modal-body">
                                        <form role="form" method="get" class="form-horizontal">                                            
                                            <input id="hdCodigoModalAjustador" type="hidden" value="0">
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">First name <span style="color:red; font-size:15px;"> (*)</span></label>    
                                                       
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtNombreAdjusterModal" class="form-control" tabindex="1" autofocus>                                        
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Last name <span style="color:red; font-size:15px;"> (*)</span></label>           
                                                <div class="col-lg-4">
                                                    <input type="text" id="txtApellidoAdjusterModal" class="form-control" tabindex="2">                                        
                                                </div>
                                            </div>  
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Phone </label>           
                                                <div class="col-lg-2">
                                                    <input type="text" id="txtPhoneAdjusterModal" class="form-control" tabindex="3">                                        
                                                </div>
                                                <label class="col-lg-3 control-label">Ext </label>           
                                                <div class="col-lg-2">
                                                    <input type="text" id="txtExtAdjusterModal" class="form-control" tabindex="4">                                        
                                                </div>
                                            </div>  

                                        </form>
                                        </div>
                                        <div class="modal-footer" style="text-align:center;">                                            
                                            <button type="button" id="btnAsignarNuevoAdjusterModal" class="btn btn-primary" tabindex="5">ADD TO THE DATABASE</button>
                                            <button type="button" id="btnCancelarAjustadorModal" class="btn btn-danger" data-dismiss="modal" tabindex="6">Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>

<!--///////////////////////////MODAL INSURER/////////////////////////////////////-->

<div class="modal inmodal" id="myModalInsurer" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <!--<div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Add New Doctor</h4>
                                        </div>-->
                                        <div class="ibox-title header_formulario" >  <h5>Add New Insurer</h5> </div>

                                    <div class="modal-body">
                              <form class="form-horizontal" method="get">
                                <input type="hidden" value="0" id="hdCodigoModalInsurer">
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Name</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="1" autofocus="" id="txtNombreInsurerModal" class="form-control letter">
                                                </div>
                                            </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Phone</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="2" placeholder="" data-mask="999-999-9999" id="txtTelefonoInsurerModal" class="form-control">
                                                </div>
                                            </div>  
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Ext</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="3" placeholder="" maxlength="5" id="txtExtInsurerModal" class="form-control">
                                                </div>
                                            </div>  
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Fax</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="4" data-mask="999-999-9999" id="FaxInsurerModal" class="form-control">
                                                </div>
                                            </div>

                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Address
                                    </label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="5" id="txtCalleAseguradoraModal" class="form-control letter"> 

                                                </div>
                                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">State<span style="color:red; font-size:15px;"> (*)</span></label>
                                   <div class="col-sm-6">
                                        <span style="font-size: 0.8em; font-style: normal;">type a word to find matches</span>
                                        <span style="color:red; font-size: 0.8em; font-style: italic;">(if you do not belong to any state, select the "NONE" option from the list)</span>
                                        <input type="hidden" value="" id="hdAbreviaturaEstadoPaisInsurerModal">
                                        <input type="text" tabindex="6" autocomplete="off" class="form-control ui-autocomplete-input" id="txtEstadoInsurerModal">                                        
                                            </div> 
                                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">City<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-sm-6">
                                        <span style="font-size: 0.8em; font-style: normal;">type a word to find matches</span>
                                        <input type="hidden" value="" id="hdCiudadInsurerModal">
                                        <input type="text" tabindex="7" autocomplete="off" class="form-control ui-autocomplete-input" id="txtCiudadInsurerModal">
                                                </div>
                                            </div>  
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Zip code</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="8" id="txtZipInsurerModal" class="form-control" maxlength="5">
                                                </div>
                                            </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Ext</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="9" id="txtExtCodeInsurerModal" class="form-control" maxlength="4">
                                                </div>
                                            </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Sc/Tpa</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="10" data-mask="999-999-9999" id="txtTpaInsurerModal" class="form-control"> 
                                                </div>
                                            </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Fein Sc</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="11" data-mask="99-9999999" id="txtFeinSCInsurerModal" class="form-control">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Carrier</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="12" data-mask="999-999-9999" id="txtCarrierInsurerModal" class="form-control">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-3 control-label">Fein CC</label>
                                    <div class="col-sm-6">
                                        <input type="text" tabindex="13" data-mask="99-9999999" id="txtFeinCCInsurerModal" class="form-control">
                                                </div>
                                            </div>

                                        </form>

                                        </div>
                                        <div class="modal-footer" style="text-align:center;">
                                            <button type="button" id="btnAsignarNuevoInsurerModal" class="btn btn-primary">ADD TO THE DATABASE</button>
                                            <button type="button" class="btn btn-danger" data-dismiss="modal" id="btnCancelarInsurerModal" >Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>

<!--////////////////////////////////////////////////////////////////-->

<!--///////////////////////////MODAL PROVIDER/////////////////////////////////////-->

<div class="modal inmodal" id="myModalProvider" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        
                                        <div class="ibox-title header_formulario" >  <h5>Add New Provider</h5> </div>
                                        <input type="hidden" id="hdCodigoModalProveedor" value="0">
                                    <div class="modal-body">
                                        <form role="form" method="get" class="form-horizontal">
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">First name <span style="color:red; font-size:15px;"> (*)</span></label>           
                                                <div class="col-lg-5">
                                                    <input type="text" id="txtNombreProviderModal" class="form-control" autofocus>                                        
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Last Name <span style="color:red; font-size:15px;"> (*)</span></label>           
                                                <div class="col-lg-5">
                                                    <input type="text" id="txtApellidoProviderModal" class="form-control" >                                        
                                                </div>
                                            </div>  
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Number </label>           
                                                <div class="col-lg-5">
                                                    <input type="text" id="txtNumberProviderModal" class="form-control" >                                        
                                                </div>
                                                
                                            </div>  
                                            
                                   

                                        </form>
                                        </div>
                                        <div class="modal-footer" style="text-align:center;">
                                            <button type="button" id="btnAsignarNuevoProviderModal" class="btn btn-primary">ADD TO THE DATABASE</button>
                                            <button type="button" class="btn btn-danger" id="btnCancelarProviderModal" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>

<!--////////////////////////////////////////////////////////////////-->

<!--///////////////////////////MODAL ATTORNEY/////////////////////////////////////-->

<div class="modal inmodal" id="myModal55" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <!--<div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Add New Doctor</h4>
                                        </div>-->
                                        <div class="ibox-title header_formulario" >  <h5>Add New Attorney</h5> </div>

                                    <div class="modal-body">
                                        <form role="form" method="get" class="form-horizontal">
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">First name *</label>           
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtNombreAbogado" class="form-control" tabindex="1" autofocus>                                        
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Last name *</label>           
                                                <div class="col-lg-4">
                                                    <input type="text" id="txtApellidoAbogado" class="form-control" tabindex="2">                                        
                                                </div>
                                            </div>               
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Address</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtDireccionAbogado" class="form-control" tabindex="3">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">State *</label>
                                                <input type="hidden" id="hdAbreviaturaEstadoPaisAbogado" />
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtEstadoPaisAbogado" class="form-control" tabindex="4">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">City *</label>
                                                <input type="hidden" id="hdCiudadAbogado" /> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtCiudadAbogado" class="form-control" tabindex="5">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Zip code</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtCodigoPostalAbogado" class="form-control" maxlength="5" tabindex="6">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Ext</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtExtensionCodigoPostalAbogado" class="form-control" tabindex="7">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Phone</label>
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtTelefonoAbogado" class="form-control" tabindex="8">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Fax</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtFaxAbogado" class="form-control" tabindex="9">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Assistant</label> 
                                                <div class="col-lg-8">
                                                    <input type="text" id="txtAsistenteAbogado" class="form-control" tabindex="10">
                                                </div>
                                            </div>
                                            <div class="form-group" style="margin-bottom: 8px;"> 
                                                <label class="col-lg-3 control-label">Speciality *</label> 
                                                <div class="col-lg-6">
                                                    <select id="cmbEspecialidadesAbogado" class="form-control m-b" tabindex="11">
                                                        <option selected value=''>-- SELECTED --</option>
                                                    </select>
                                                </div>
                                                <div class="col-lg-2">
                                                 <button id="btnModalSpecialityAbogado" data-target="#myModalEspecialidad" data-toggle="modal" class="btn btn-primary" type="button" tabindex="13">
                                                   <i class="fa fa-plus"></i>
                                                  </button>
                                               </div>
                                            </div>

                                        </form>
                                        </div>
                                        <div class="modal-footer" style="text-align:center;">
                                            <button type="button" id="btnAsignarNuevoAbogadoCaso" class="btn btn-primary" tabindex="14">ADD TO THE DATABASE</button>
                                            <button type="button" class="btn btn-white" data-dismiss="modal" tabindex="15">Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>


<!--///////////////////////////MODAL PATIENT/////////////////////////////////////-->

<div class="modal inmodal" id="myModalPatient" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <!--<div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Add New Doctor</h4>
                                        </div>-->
                                        <div class="ibox-title header_formulario" >  <h5>Add New Patient</h5> </div>

                                    <div class="modal-body">
                                        <form method="get" class="form-horizontal">
                                <input type="hidden" value="0" id="hdCodigoModalPaciente">
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">First Name<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control letter" id="NombrePacienteModal" autofocus="" tabindex="1">
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Last Name<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control letter" id="ApellidoPacienteModal" tabindex="2">
                                        
                                    </div>
                                </div>
                             


                            <div class="form-group" id="FechaBirthday">
                                <label class="col-sm-2 control-label">Birthday</label>
                                <div class="input-group date col-sm-6" style="padding-left: 16px;padding-right: 16px;">
                                    <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                    <input type="text" class="form-control" id="FechaNacimientoPacienteModal" value=""  tabindex="3">
                                </div>
                            </div>

                                
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Ssn</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="NumeroSeguroSocialDPacienteModal" data-mask="999-99-9999" tabindex="4">
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Address</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="DireccionPacienteModal" tabindex="5">
                                    </div>
                                </div>
                                
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">State<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-sm-6">
                                        <span style="font-size: 0.8em; font-style: normal;">type a word to find matches</span>
                                        <span style="color:red; font-size: 0.8em; font-style: italic;">(if you do not belong to any state, select the "NONE" option from the list)</span>
                                        <input type="hidden" id="hdAbreviaturaEstadoPaisPacienteModal" value="">
                                        <input type="text" class="form-control ui-autocomplete-input" id="EstadoPaisPacienteModal" tabindex="6" autocomplete="off">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">City<span style="color:red; font-size:15px;"> (*)</span></label>
                                    <div class="col-sm-6">
                                        <span style="font-size: 0.8em; font-style: normal;">type a word to find matches</span>
                                        <input type="hidden" id="hdCiudadPacienteModal" value="">
                                        <input type="text" class="form-control ui-autocomplete-input" id="CiudadPacienteModal" tabindex="7" autocomplete="off">
                                    </div>
                                </div>

                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Zip code</label>
                                    <div class="col-sm-6">
                                        <input type="text" maxlength="5" class="form-control" id="CodigoPostalPacienteModal" tabindex="8">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Ext</label>
                                    <div class="col-sm-6">
                                        <input type="text" maxlength="4" class="form-control" id="ExtensionCodigoPostalPacienteModal" tabindex="9">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Phone</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="TelefonoPacienteModal" data-mask="999-999-9999" placeholder="" tabindex="10">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Alt Phone</label>
                                    <div class="col-sm-6">
                                        <input type="text" class="form-control" id="TelefonoAlternativoPacienteModal" data-mask="999-999-9999" tabindex="11">
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="col-sm-2 control-label"> Sex</label>
                                    <div class="col-sm-6">
                                        <input type="radio" name="Sexo" class="OpcionSexo" id="rdbMasculinoPacienteModal" value="M" style="cursor: pointer;" tabindex="12" ckecked="true"> &nbsp; Male
                                        <input type="radio" name="Sexo" class="OpcionSexo" id="rdbFemeninoPacienteModal" value="F" style="cursor: pointer;" tabindex="13">&nbsp; Female
                                    </div>
                                </div>

                            </form>
                                    </div>
                                        <div class="modal-footer" style="text-align:center;">                                            
                                            <button type="button" id="btnAsignarNuevoPatientModal" class="btn btn-primary">ADD TO THE DATABASE</button>
                                            <button type="button" id="btnEditarPatientModal" class="btn btn-primary hidden">EDIT INFORMATION</button>
                                            <button type="button" class="btn btn-danger" id="btnCancelarPacienteModal" data-dismiss="modal">Cancel</button>
                                        </div>
                                    </div>
                            </div>
</div>

<div class="modal inmodal" id="myModalSex" tabindex="-1" role="dialog"  aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content animated fadeIn">
			<div class="ibox-title header_formulario" >  
				<h5>Update Sex</h5>  
			</div>
			<div class="modal-body">
				<form method="get" class="form-horizontal">
					<div class="form-group">
						<label class="col-sm-2 control-label">Sex</label>
						<div class="col-sm-6">
							<input type="radio" name="Sexo" class="OpcionSexo" id="rdbMasculinoPacienteModalActualizado" value="M" style="cursor: pointer;" tabindex="12" ckecked="true"> &nbsp; Male
							<input type="radio" name="Sexo" class="OpcionSexo" id="rdbFemeninoPacienteModalActualizado" value="F" style="cursor: pointer;" tabindex="13">&nbsp; Female
						</div>
					</div>
				</form>
			</div>
			<div class="modal-footer" style="text-align:center;">                                            
				<button type="button" id="btnActualizarSexoPacienteModal" class="btn btn-primary">ADD TO THE DATABASE</button>
				<button type="button" class="btn btn-danger" id ="btnCancelaActualizarSexoPacienteModal" data-dismiss="modal">Cancel</button>
			</div>
		</div>
	</div>
</div>

<div class="footer">
    <div class="pull-right">
        <strong>OMNIMED</strong>
    </div>
    <div>
        <strong>Copyright</strong> <a href="www.itusaservices.com">ITUSASERVICES</a>  © 2016
    </div>
</div>

<!-- ////////////////////////// MODALES HOMONIMOS//////////////////////////////////-->
<!--////////////////////////// MODAL HOMONIMOS iNSURER//////////////////-->

  <div class="modal inmodal" id="myModalInsurerHom" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Matches Found</h4>
                                            <!--<small>Patients were found with similiar names and surnames!.</small>-->
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Insurer were found with similiar names and surnames!.</strong> If the Insurer attemps to register this in the following list, click Cancel to not register duplicate data, if you are sure that there is no Insurer record, click to continue.</p>



                            <table class="table table-bordered" id="tblModalInsurer">
                                <thead >
                                <tr>
                                    <th >Codigo</th>
                                    <th class="th_tabla">Name</th>
                                    <th class="th_tabla">City</th>
                                    <th class="th_tabla">State</th>
                                    <th class="th_tabla">zip</th>
                                    <th class="th_tabla">Status</th> 
                                    <th class="th_tabla">Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>

                       
                                        </div>
                                        <div class="modal-footer">
                                            <button id="btnCancelarModalInsurerHom"  type="button" class="btn btn-white" data-dismiss="modal" >Cancel</button>
                                            <button  id="btnRegistrarModalInsurerHom" type="button" class="btn btn-primary" >Continue</button>
                                            <input  id="accion" type="hidden" value="registra" />
                                            <input  id="seleccionado" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccion" type="hidden" value="0" />          
                                        </div>
                                    </div>
                            </div>
</div>


<!--/////////////////////MODAL HOMONIMOS PROVIDER//////////////////-->

 <div class="modal inmodal" id="myModalProveedorHom" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Matches Found</h4>
                                            <!--<small>Patients were found with similiar names and surnames!.</small>-->
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Provider were found with similiar names and surnames!.</strong> If the Provider attemps to register this in the following list, click Cancel to not register duplicate data, if you are sure that there is no Provider record, click to continue.</p>



                            <table class="table table-bordered" id="tblModalProviderHom">
                                <thead >
                                <tr>
                                    <th class="th_tabla"></th>
                                    <th class="th_tabla">First Name</th>
                                    <th class="th_tabla">Last Name</th>
                                    <th class="th_tabla">Id Number</th>
                                    <th class="th_tabla">Status</th>
                                    <th class="th_tabla" style="text-align:center;">Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>

                       
                                        </div>
                                        <div class="modal-footer">
                                            <button id="btnCancelarModalProviderHom"  type="button" class="btn btn-white" data-dismiss="modal" >Cancel</button>
                                            <button  id="btnRegistrarModalProviderHom" type="button" class="btn btn-primary" >Continue</button>
                                            <input  id="accionProviderHom" type="hidden" value="registra" />
                                            <input  id="seleccionadoProviderHom" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccionProviderHom" type="hidden" value="0" />                                                    
                                             
                                        </div>
                                    </div>
                            </div>
</div>


<!--////////////////////////// MODAL HOMONIMOS ADJUSTER//////////////////-->

  <div class="modal inmodal" id="myModalAdjusterHom" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Matches Found</h4>
                                            <!--<small>Patients were found with similiar names and surnames!.</small>-->
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Insurer were found with similiar names and surnames!.</strong> If the Insurer attemps to register this in the following list, click Cancel to not register duplicate data, if you are sure that there is no Insurer record, click to continue.</p>



                            <table class="table table-bordered" id="tblModalAdjusterHom">
                                <thead >
                                <tr>
                                    <th >Codigo</th>
                                    <th class="th_tabla">Name</th>
                                    <th class="th_tabla">City</th>
                                    <th class="th_tabla">State</th>
                                    <th class="th_tabla">zip</th>
                                    <th class="th_tabla">Status</th> 
                                    <th class="th_tabla">Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>

                       
                                        </div>
                                        <div class="modal-footer">
                                            <button  id="btnRegistrarModalAdjusterHom" type="button" class="btn btn-primary" >Continue</button>
                                            <button id="btnCancelarModalAdjusterHom"  type="button" class="btn btn-danger" data-dismiss="modal" >Cancel</button>
                                            
                                            <input  id="accionAdjusterHom" type="hidden" value="registra" />
                                            <input  id="seleccionadoAdjusterHom" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccionAdjusterHom" type="hidden" value="0" />          
                                        </div>
                                    </div>
                            </div>
</div>
<!--/////////////////////MODAL HOMONIMOS PATIENT//////////////////-->
                      
  <div class="modal inmodal" id="myModalPatientHom" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Matches Found</h4>
                                            <!--<small>Patients were found with similiar names and surnames!.</small>-->
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Patient were found with similiar names and surnames!.</strong> If the patient attemps to register this in the following list, click Cancel to not register duplicate data, if you are sure that there is no patient record, click to continue.</p>



                            <table class="table table-bordered" id="tblModalPatientHom">
                                <thead >
                                <tr>
                                    <th>C&oacute;digo</th>
                                    <th class="th_tabla">First Name</th>
                                    <th class="th_tabla">Last Name</th>
                                    <th class="th_tabla">State</th>
                                    <th class="th_tabla" >City</th>
                                    <th class="th_tabla" >Zip code</th>
                                    <!--<th class="th_tabla">Address</th>-->
                                    <th class="th_tabla">Status</th>
                                    <th class="th_tabla">Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>

                       
                                        </div>
                                        <div class="modal-footer">
                                            
                                            <button  id="btnRegistrarModalPatientHom" type="button" class="btn btn-primary" >Continue</button>
                                            <button id="btnCancelarModalPatientHom"  type="button" class="btn btn-danger" data-dismiss="modal" >Cancel</button>
                                            <input  id="accionPatientHom" type="hidden" value="registra" />
                                            <input  id="seleccionadoPatientHom" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccionPatientHom" type="hidden" value="0" />   
                                        </div>
                                    </div>
                            </div>
</div>


<!--/////////////////////MODAL HOMONIMOS Doctor//////////////////-->
                      
  <div class="modal inmodal" id="myModalDoctorHom" tabindex="-1" role="dialog"  aria-hidden="true">
                            <div class="modal-dialog">
                                    <div class="modal-content animated fadeIn">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <i class="fa fa-fa fa-warning modal-icon"></i>
                                            <h4 class="modal-title">Matches Found</h4>
                                            <!--<small>Patients were found with similiar names and surnames!.</small>-->
                                        </div>
                                        <div class="modal-body">
                                            <p><strong>Patient were found with similiar names and surnames!.</strong> If the patient attemps to register this in the following list, click Cancel to not register duplicate data, if you are sure that there is no patient record, click to continue.</p>



                            <table class="table table-bordered" id="tblModalDoctorHom">
                                <thead >
                                <tr>
                                    <th ></th>
                                    <th class="th_tabla">First Name</th>
                                    <th class="th_tabla">Last Name</th>
                                    <th class="th_tabla">State</th>
                                    <th class="th_tabla" >City</th>
                                    <th class="th_tabla" >Status</th>
                                    <th class="th_tabla" >Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>

                       
                                        </div>
                                        <div class="modal-footer">
                                            <button id="btnCancelarModalDoctorHom"  type="button" class="btn btn-white" data-dismiss="modal" >Cancel</button>
                                            <button  id="btnRegistrarModalDoctorHom" type="button" class="btn btn-primary" >Continue</button>
                                            <input  id="accionDoctorHom" type="hidden" value="registra" />
                                            <input  id="seleccionadoDoctorHom" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccionDoctorHom" type="hidden" value="0" />   
                                        </div>
                                    </div>
                            </div>
</div>




<!--/////////////////////MODAL HOMONIMOS Doctor//////////////////-->
                      
  <div class="modal inmodal" id="myModalEspecialidad" tabindex="-1" role="dialog"  aria-hidden="true" >
                            <div class="modal-dialog" style="width: 30%">
                                    <div class="modal-content animated fadeIn">
                                        
                                        <div class="ibox-title header_formulario">  <h5>Speciality</h5> </div>
                                          <div class="modal-header">
                                           <label class="col-sm-2 control-label">New </label>
                                          <div class="col-sm-5">
                                             <input type="text"  id="txtEspecialidad" class="form-control">
                                             <input type="hidden"  id="txtEspecialidadCodigo" value="0" class="form-control">
                                          </div>  
                                          <div class="col-sm-2">
                                          <button class="btn btn-primary" id="btnRegistraAgregaEspecialidad" type="button">Add</button>              
                                          </div>
                                          <!--<div class="col-sm-2">
                                          <button class="btn btn-primary" id="btnSeleccionaEspecialidad" type="button">Selected</button>              
                                          </div>-->
                                          <div class="col-sm-2">
                                          <button class="btn btn-primary" id="btnCancelEspecialidad" type="button">Cancel</button>              
                                          </div>                                    

                                        </div>
                                        <div class="modal-body">

                            <table class="table table-bordered" id="tblModalEspecialidad">
                                <thead >
                                <tr>
                                    <th ></th>
                                    <th class="th_tabla">First Name</th>
                                    <th class="th_tabla" >Select</th>
                                </tr>
                                </thead>
                                <tbody>
                              
                                </tbody>
                            </table>
                                        </div>
                                        <div class="modal-footer">                                            
                                            <!--<button  id="btnRegistrarModalEspecialidadHom" type="button" class="btn btn-primary" >Continue</button>-->
                                            <button id="btnCancelarModalEspecialidadHom"  type="button" class="btn btn-danger" data-dismiss="modal" >Close</button>
                                            <input  id="accionEspecialidadHom" type="hidden" value="registra" />
                                            <input  id="seleccionadoEspecialidadHom" type="hidden" value="0" />                                                    
                                            <input  id="estadoSeleccionEspecialidadHom" type="hidden" value="0" />   
                                        </div>
                                    </div>
                            </div>
</div>

<!----------------------------------------------->
<!-- //////////////////////////////////////////////////////////////////-->

<script>

    var Pacientes;
    var Ajustadores;
    var Aseguradoras;
    var Proveedores;
    var Supervisores;
    var Doctores;
    var Abogados;
    var EstadosPais;
    var Ciudades;
    var ValorOriginalNombrePaciente; // Variable global donde se almacena el nombre del paciente seleccionado en su autocompletar.
    var ValorOriginalNombreAjustador; // Variable global donde se almacena el nombre del ajustador seleccionado en su autocompletar.
    var ValorOriginalNombreAseguradora; // Variable global donde se almacena el nombre de la aseguradora seleccionada en su autocompletar.
    var ValorOriginalNombreProveedor; // Variable global donde se almacena el nombre del proveedor seleccionado en su autocompletar.
    var ValorOriginalNombreSupervisor; // Variable global donde se almacena el nombre del supervisor seleccionado en su autocompletar.
    var ValorOriginalNombreDoctor; // Variable global donde se almacena el nombre del doctor seleccionado en su autocompletar.
    var ValorOriginalNombreAbogado; // Variable global donde se almacena el nombre del doctor seleccionado en su autocompletar.

    var ValorOriginalEstadoPaisPaciente;
    var ValorOriginalEstadoPaisAseguradora;
    var ValorOriginalEstadoPaisDoctor;
    var ValorOriginalEstadoPaisAbogado;

    var ValorOriginalCiudadPaciente;
    var ValorOriginalCiudadAseguradora;
    var ValorOriginalCiudadDoctor;
    var ValorOriginalCiudadAbogado;

    $(Inicio);

    function Inicio()
    {
        $("#cmbPaciente").select2();
        $("#cmbAjustador").select2();
        $("#cmbAseguradora").select2();
        $("#cmbProveedor").select2();
        $("#cmbCaseSupervisor").select2();
        $("#cmbAcuity").select2();

        // Obtiene el código del paciente seleccionado en su campo oculto correspondiente.
        $("#cmbPaciente").on("change", function () {
            $("#hdCodigoPaciente").val($(this).val());
        });

        // Obtiene el código del ajustador seleccionado en su campo oculto correspondiente.
        $("#cmbAjustador").on("change", function () {
            $("#hdCodigoAjustador").val($(this).val());
        });

        // Obtiene el código de la aseguradora seleccionado en su campo oculto correspondiente.
        $("#cmbAseguradora").on("change", function () {
            $("#hdCodigoAseguradora").val($(this).val());
        });

        // Obtiene el código del proveedor seleccionado en su campo oculto correspondiente.
        $("#cmbProveedor").on("change", function () {
            $("#hdCodigoProveedor").val($(this).val());
        });

        // Obtiene el código del supervisor seleccionado en su campo oculto correspondiente.
        $("#cmbCaseSupervisor").on("change", function () {
            $("#hdCodigoCaseSupervisor").val($(this).val());
        });

        // Obtiene el código del acuity seleccionado en su campo oculto correspondiente.
        // $("#cmbAcuity").on("change", function () {
        //     $("#").val($(this).val());
        // });



        // $(document).unload(function ()
        // {
        //     Hola(CodigoUsuarioGlobal);
        // });

        // libera todos los casos correspondiente al usuario actual.
        // Hola(CodigoUsuarioGlobal);
                      
        // $(window).on("beforeunload", function ()
        // {
        //     Hola(CodigoUsuarioGlobal);
        // });


        $('input:text').on('keypress', function (e)
        {

        if (e.which == 13 || e.which == 9) {
            currentTabIndex = parseInt($(this).attr("tabindex"));

            currentTabIndex = currentTabIndex + 1;
            $("input[tabindex=" + currentTabIndex + "]").select();
            e.preventDefault();
        }

    });

        $('[data-toggle="tooltipB"]').tooltip();

        $("#txtBuscaCaso").focus();
        
        // Cuando se presiona TAB el botón para seleccionar un caso obtiene el foco (Temporal)
        $("#txtBuscaCaso").on("keydown", function (e)
        {
            if (e.keyCode == 9)
            { 
                e.preventDefault();
                $(".SeleccionarCaso").focus();
            }
        });

        // Cuando se busca un caso, se van mostrando los resultados en la tabla de casos.
        $("#txtBuscaCaso").keyup(function (e)
        {

            $('#tblCasos').dataTable().fnFilter($("#txtBuscaCaso").val());

            if ($(this).val().trim() == "")
                $("#tblCasos > tbody").css({ "display": "none" });
            else
                $("#tblCasos > tbody").css({ "display": "table-row-group" });

            $("#tblCasos_paginate").css("display", "block");
            
        });

        CargarTablaCasos();
        $(".SeleccionarCaso").on("click", SeleccionarCaso);

        // -----------------------------------------------------------------------------
        ObtenerPacientes(); // Obtiene datos de los pacientes para autocompletado
        // AutocompletarPacientes();
        CargarPacientesEnCombo(Pacientes); // Carga los pacientes en el combo autocompletable de pacientes.

        ObtenerAjustadores(); // Obtiene datos de los ajustadores para autocompletado
        // AutocompletarAjustadores();
        CargarAjustadoresEnCombo(Ajustadores); // Carga los ajusta dores en el combo autocompletable de pacientes.

        ObtenerAseguradoras(); // Obtiene datos de las aseguradoras para autocompletado
        // AutocompletarAseguradoras();
        CargarAseguradorasEnCombo(Aseguradoras); // Carga las aseguradoras en el combo autocompletable de pacientes.

        ObtenerProveedores(); // Obtiene datos de las aseguradoras para autocompletado
        // AutocompletarProveedores();
        CargarProveedoresEnCombo(Proveedores); // Carga los proveedores en el combo autocompletable de pacientes.
        
        ObtenerSupervisores(); // Obtiene datos de los supervisores para autocompletado
        // AutocompletarSupervisores();
        CargarSupervisoresEnCombo(Supervisores); // Carga los supervisores en el combo autocompletable de pacientes.
        // -----------------------------------------------------------------------------

        ObtenerDoctores(); // Obtiene datos de los doctores para autocompletado
        AutocompletarDoctores();

        ObtenerAbogados(); // Obtiene datos de los abogados para autocompletado
        AutocompletarAbogados();

        $("#FechaNacimientoPacienteModal").datepicker("setDate", new Date());

        $("#txtFechaAccidente").datepicker("setDate", new Date());
        $("#tblCasos_filter > label > input[type='text']");

        //var otable = $("#tblPacientes").dataTable().fnDestroy();
        //otable = $('#tblPacientes').DataTable({        });


        $("#txtFechaReferencia").datepicker("setDate", new Date());

        ControlarCambioChecking($(".LongshoreCompanyStatusOther"), ".LongshoreCompanyStatusOther");
        ControlarCambioChecking($(".Traslado"), ".Traslado");
        ControlarCambioChecking($(".Transporte"), ".Transporte");
        ControlarCambioChecking($(".TerapiaFisica"), ".TerapiaFisica");
        ControlarCambioChecking($(".PermisoContacto"), ".PermisoContacto");

       // $("#txtPaciente").prop("readonly", true);

        $("#btnNuevo").on("click", NuevoCaso);
        $("#generaPdf").on("click", generaPdf); //edhercito22
        $("#btnRegistrar").on("click", RegistrarCaso);
        $("#btnActualizar").on("click", ActualizarCaso);

        $("#frmBusquedaCaso").on("submit", function (e) { 
            e.preventDefault();
        });

        $("#btnAsignaDoctor").on("click", AsignaDoctorACaso); // Asigna un doctor autocompletado a un caso
        $("#btnAsignaAbogado").on("click", AsignaAbogadoACaso); // Asigna un abogado autocompletado a un caso
                        
        OntenerEstadosPais();
        OntenerCiudades();

        AutocompletarEstadosPaisPaciente();
        AutocompletarEstadosPaisAseguradora();
        AutocompletarEstadosPaisDoctor();
        AutocompletarEstadosPaisAbogado();        

        AutocompletarCiudadesPaciente();
        AutocompletarCiudadesAseguradora();
        AutocompletarCiudadesDoctor();
        AutocompletarCiudadesAbogado();

        CargarEspecialidadesDoctor();
        CargarEspecialidadesAbogado();

        $("#btnAsignarNuevoDoctorCaso").on("click", AsignarNuevoDoctorCaso); // Esta llamada primero debe hacer que se agregue el doctor y luego asignarlo al caso
        $("#btnAsignarNuevoAbogadoCaso").on("click", AsignarNuevoAbogadoCaso); // Esta llamada primero debe hacer que se agregue el abogado y luego asignarlo al caso

        $("#tblDoctor > tbody").on("click", "tr > td > .EliminarDoctor", EliminaPacienteModal); // Para eliminar un doctor
        $("#tblAbogado > tbody").on("click", "tr > td > .EliminarAbogado", EliminarAbogadoModal); // Para eliminar un abogado
        
        

        // Cuando se abren los formularios modales de doctor y abogado los controles deben estar limpios
        $("#btnNuevoDoctor").on("click", LimpiarControlesRegistroNuevoDoctor);
        $("#btnNuevoAbogado").on("click", LimpiarControlesRegistroNuevoAbogado);

        $("#btnAsignarNuevoPatientModal").on("click", RegistraPaciente) // Registra datos para el modal de "Paciente".
        $("#btnEditarPatientModal").on("click", ActualizaPaciente) // Ediat datos para el modal de "Paciente".

        $("#btnAsignarNuevoAdjusterModal").on("click", RegistraAjustador) // Registra datos para el modal de "Adjuster".
        $("#btnAsignarNuevoInsurerModal").on("click", RegistraAseguradora) // Registra datos para el modal de "Insurer".
        $("#btnAsignarNuevoProviderModal").on("click", RegistraProveedor) // Registra datos para el modal de "Provider".

        ////////////// botones de Modales /////////////
        $("#btnRegistrarModalInsurerHom").on("click", registraActualizaModalAseguradora);
        $("#btnRegistrarModalProviderHom").on("click", registraActualizaModalProveedor);
        $("#btnRegistrarModalAdjusterHom").on("click", registraActualizaModalAjustador);
        $("#btnRegistrarModalPatientHom").on("click", registraActualizaModalPaciente);
        $("#btnRegistrarModalDoctorHom").on("click", registraActualizaModalDoctor);
        //$("#btnRegistrarModalAttorneyHom").on("click", registraActualizaModalAbogado);
        $("#btnRegistraEspecialidad").on("click", registraActualizaEspecialidad);        
        $("#btnRegistraAgregaEspecialidad").on("click", agregaEspecialidad);
        $("#btnCancelEspecialidad").on("click", LimpiarControlesEspecialidad);
        $("#btnRegistrarModalEspecialidadHom").on("click", LimpiarControlesEspecialidad);
        ///////////////////////////////////////////////

        //$("#btnActualizarSexo").on("click", CargaSexoParaActualizar); // Cuando se abre el modal de sexo se cargan los datos de sexo del paciente que se van a actualizar.
        $("#btnActualizarSexo").on("click", ActualizaSexoPaciente); // Cuando se abre el modal de sexo se cargan los datos de sexo del paciente que se van a actualizar.
        $("#btnActualizarSexoPacienteModal").on("click", ActualizaSexoPaciente); // Actualiza los datos de sexo del paciente en el modal.

        $("#btnRegistrarPaciente").on("click", LimpiarControlesRegistroNuevoPaciente); // Limpia los controles de su modal cada vez que este se abre
        $("#btnRegistrarAdjuster").on("click", LimpiarControlesRegistroNuevoAjustador); // Limpia los controles de su modal cada vez que este se abre
        $("#btnRegistrarInsurer").on("click", LimpiarControlesRegistroNuevaAseguradora); // Limpia los controles de su modal cada vez que este se abre
        $("#btnRegistrarProveedor").on("click", LimpiarControlesRegistroNuevoProveedor); // Limpia los controles de su modal cada vez que este se abre
    }

    function RegistraPaciente(e)//edherb
    {
        if ($("#NombrePacienteModal").val().trim() == "") // Valida la obligatoriedad del nombre.
        {
            e.stopPropagation();

            $("#NombrePacienteModal").focus();
            $("#NombrePacienteModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        if ($("#ApellidoPacienteModal").val().trim() == "") // Valida la obligatoriedad del apellido. 
        {
            e.stopPropagation();

            $("#ApellidoPacienteModal").focus();
            $("#ApellidoPacienteModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdAbreviaturaEstadoPaisPacienteModal").val() == "") // Valida la obligatoriedad del estado
        {
            e.stopPropagation();

            error = "Error!";
            mensaje = "Select a state from the list!!...";
            MensajeError(mensaje, error);

            $("#EstadoPaisPacienteModal").focus();
            return false;
        }
        else if ($("#hdCiudadPacienteModal").val() == "" && $("#CiudadPacienteModal").val() == "") // Valida la obligatoriedad de la ciudad (valida que se seleccione una ciudad del autocompletado o que se escriba una ciudad en la caja de texto)
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select or type a city from the list!!...";
            MensajeError(mensaje, error);
            $("#CiudadPacienteModal").focus();
            return false;
        }
        else
        {
            e.preventDefault();

            var NombreCiudad;
            var Sexo = null; // almacena el sexo del paciente que se va a registrar

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadPacienteModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#CiudadPacienteModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#CiudadPacienteModal").val()
            // ----------------------------------------------------------

            Sexo = ($("#rdbMasculinoPacienteModal").prop("checked") == true ? "M" : "F") // obtiene el sexo

            var Paciente = LlenarPaciente(null 
                                          , ($("#NombrePacienteModal").val().trim() == '' ? null : $("#NombrePacienteModal").val().trim())
                                          , ($("#ApellidoPacienteModal").val().trim() == '' ? null : $("#ApellidoPacienteModal").val().trim())
                                          , ($("#FechaNacimientoPacienteModal").val().trim() == '' ? null : $("#FechaNacimientoPacienteModal").val().trim())
                                          , ($("#NumeroSeguroSocialDPacienteModal").val().trim() == '' ? null : $("#NumeroSeguroSocialDPacienteModal").val().trim())
                                          , ($("#DireccionPacienteModal").val().trim() == '' ? null : $("#DireccionPacienteModal").val().trim())
                                          , ($("#hdAbreviaturaEstadoPaisPacienteModal").val().trim() == '' ? null : $("#hdAbreviaturaEstadoPaisPacienteModal").val().trim())
                                          , NombreCiudad
                                          , ($("#CodigoPostalPacienteModal").val().trim() == '' ? null : $("#CodigoPostalPacienteModal").val().trim())
                                          , ($("#ExtensionCodigoPostalPacienteModal").val().trim() == '' ? null : $("#ExtensionCodigoPostalPacienteModal").val().trim())
                                          , ($("#TelefonoPacienteModal").val().trim() == '' ? null : $("#TelefonoPacienteModal").val().trim())
                                          , ($("#TelefonoAlternativoPacienteModal").val().trim() == '' ? null : $("#TelefonoAlternativoPacienteModal").val().trim())
                                          , Sexo)

            // Primero verifica que no exista un paciente homónimo.x
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Paciente),
                url: '@Url.Action("BuscarHomonimos", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {


                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        if (metodoRegistraPaciente(Paciente)) // Si la llamada al registro del paciente es exitosa.
                        {
                            LimpiarControlesRegistroNuevoPaciente();
                            ValorOriginalNombrePaciente = $("#txtPaciente").val().trim(); // (Gabo) Actualiza el valor de la variable ValorOriginalNombrePaciente con el nombre y apellido del paciente seleccionado.


                            // Aquí se mostrará la aseguradora recién registrada en la caja de texto de autocompletar.
                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de homónimos.
                        if (Data.Resultado[0].Pat_code != 0) {

                            llenaModalPaciente(Data);
                        }
                        else
                        {
                            error = "Error!";
                            mensaje = Data.Resultado[0].Pat_firstName;
                            MensajeError(mensaje, error);
                        }

                        
                    }



                }
            });
        }
    }


    function ActualizaPaciente(e)//edherb
    {
        
        if ($("#NombrePacienteModal").val().trim() == "") // Valida la obligatoriedad del nombre.
        {
            
            e.stopPropagation();
            $("#NombrePacienteModal").focus();
            $("#NombrePacienteModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        if ($("#ApellidoPacienteModal").val().trim() == "") // Valida la obligatoriedad del apellido. 
        {
            
            e.stopPropagation();
            $("#ApellidoPacienteModal").focus();
            $("#ApellidoPacienteModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdAbreviaturaEstadoPaisPacienteModal").val() == "") // Valida la obligatoriedad del estado
        {
            
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select a state from the list!!...";
            MensajeError(mensaje, error);

            $("#EstadoPaisPacienteModal").focus();
            return false;
        }
        else if ($("#hdCiudadPacienteModal").val() == "" && $("#CiudadPacienteModal").val() == "") // Valida la obligatoriedad de la ciudad (valida que se seleccione una ciudad del autocompletado o que se escriba una ciudad en la caja de texto)
        {
            
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select or type a city from the list!!...";
            MensajeError(mensaje, error);
            $("#CiudadPacienteModal").focus();
            return false;
        }
        else {
            e.preventDefault();
            
            var NombreCiudad;
            var Sexo = null; // almacena el sexo del paciente que se va a registrar

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadPacienteModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#CiudadPacienteModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#CiudadPacienteModal").val()
            // ----------------------------------------------------------

            Sexo = ($("#rdbMasculinoPacienteModal").prop("checked") == true ? "M" : "F") // obtiene el sexo

            var Paciente = LlenarPaciente( $("#hdCodigoPaciente").val()
                                          , ($("#NombrePacienteModal").val().trim() == '' ? null : $("#NombrePacienteModal").val().trim())
                                          , ($("#ApellidoPacienteModal").val().trim() == '' ? null : $("#ApellidoPacienteModal").val().trim())
                                          , ($("#FechaNacimientoPacienteModal").val().trim() == '' ? null : $("#FechaNacimientoPacienteModal").val().trim())
                                          , ($("#NumeroSeguroSocialDPacienteModal").val().trim() == '' ? null : $("#NumeroSeguroSocialDPacienteModal").val().trim())
                                          , ($("#DireccionPacienteModal").val().trim() == '' ? null : $("#DireccionPacienteModal").val().trim())
                                          , ($("#hdAbreviaturaEstadoPaisPacienteModal").val().trim() == '' ? null : $("#hdAbreviaturaEstadoPaisPacienteModal").val().trim())
                                          , NombreCiudad
                                          , ($("#CodigoPostalPacienteModal").val().trim() == '' ? null : $("#CodigoPostalPacienteModal").val().trim())
                                          , ($("#ExtensionCodigoPostalPacienteModal").val().trim() == '' ? null : $("#ExtensionCodigoPostalPacienteModal").val().trim())
                                          , ($("#TelefonoPacienteModal").val().trim() == '' ? null : $("#TelefonoPacienteModal").val().trim())
                                          , ($("#TelefonoAlternativoPacienteModal").val().trim() == '' ? null : $("#TelefonoAlternativoPacienteModal").val().trim())
                                          , Sexo)

            // Primero verifica que no exista un paciente homónimo.x
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Paciente),
                url: '@Url.Action("BuscarHomonimos", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {


                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        //alert("act bd");
                        metodoActualizaPaciente(e, Paciente, "activo");
                        $("#btnCancelarModalPatientHom").trigger("click");
                        $("#btnCancelarPacienteModal").trigger("click");
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de homónimos.
                        if (Data.Resultado[0].Pat_code != 0)
                            llenaModalPaciente(Data);
                        else
                        {
                            error = "Error!";
                            mensaje = Data.Resultado[0].Pat_firstName;
                            MensajeError(mensaje, error);
                        }
                    }



                }
            });
        }
    }


    function RegistraAjustador(e)
    {
        if ($("#txtNombreAdjusterModal").val().trim() == "") // Valida la obligatoriedad del nombre.
        {
            e.stopPropagation();

            $("#txtNombreAdjusterModal").focus();
            $("#txtNombreAdjusterModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtApellidoAdjusterModal").val().trim() == "") // Valida la obligatoriedad del apellido. 
        {
            e.stopPropagation();

            $("#txtApellidoAdjusterModal").focus();
            $("#txtApellidoAdjusterModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else
        {
            e.preventDefault();

            var Ajustador = LlenarAjustador(null
                                          , ($("#txtNombreAdjusterModal").val().trim() == '' ? null : $("#txtNombreAdjusterModal").val().trim())
                                          , ($("#txtApellidoAdjusterModal").val().trim() == '' ? null : $("#txtApellidoAdjusterModal").val().trim())
                                          , ($("#txtPhoneAdjusterModal").val().trim() == '' ? null : $("#txtPhoneAdjusterModal").val().trim())
                                          , ($("#txtExtAdjusterModal").val().trim() == '' ? null : $("#txtExtAdjusterModal").val().trim()))

            // Primero verifica que no exista un ajustador homónimo.
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Ajustador),
                url: '@Url.Action("BuscarHomonimos", "Adjuster")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        if (metodoRegistraAjustador(Ajustador)) // Si la llamada al registro del ajustador es exitosa.
                        {
                            LimpiarControlesRegistroNuevoAjustador();
                            ValorOriginalNombreAjustador = $("#txtAjustador").val().trim(); // (Gabo) Actualiza el valor de la variable ValorOriginalNombreAjustador con el nombre y apellido del ajustador seleccionado.

                            // $("#myModalAdjuster").css({ "display": "none" });
                            // $(".modal-backdrop").css({ "display": "none" });

                            // Aquí se mostrará el ajustador recién registradaoen la caja de texto de autocompletar.
                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de homónimos.
                        llenaModalAjustador(Data, 'registra');
                    }
                }
            });
        }
    }

    function RegistraAseguradora(e)
    {
        if ($("#txtNombreInsurerModal").val().trim() == "") // Valida la obligatoriedad del nombre 
        {
            e.stopPropagation();

            $("#txtNombreInsurerModal").focus();
            $("#txtNombreInsurerModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdAbreviaturaEstadoPaisInsurerModal").val() == "") // Valida la obligatoriedad del estado
        {
            e.stopPropagation();

            error = "Error!";
            mensaje = "Select a State from the list!!...";
            MensajeError(mensaje, error);

            $("#txtEstadoInsurerModal").focus();
            return false;
        }
        else if ($("#hdCiudadInsurerModal").val() == "" && $("#txtCiudadInsurerModal").val() == "") // Valida la obligatoriedad de la ciudad (valida que se seleccione una ciudad del autocompletado o que se escriba una ciudad en la caja de texto)
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select or type a City from the list!!...";
            MensajeError(mensaje, error);
            $("#txtCiudadInsurerModal").focus();
            return false;
        }
        else {
            e.preventDefault();

            var NombreCiudad;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadInsurerModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadInsurerModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadInsurerModal").val()
            // ----------------------------------------------------------

            var Aseguradora = LlenarAseguradora(null
                                          , ($("#txtNombreInsurerModal").val().trim() == "" ? null : $("#txtNombreInsurerModal").val().trim())
                                          , ($("#txtTelefonoInsurerModal").val().trim() == "" ? null : $("#txtTelefonoInsurerModal").val().trim())
                                          , ($("#txtExtInsurerModal").val().trim() == "" ? null : $("#txtExtInsurerModal").val().trim())
                                          , ($("#FaxInsurerModal").val().trim() == "" ? null : $("#FaxInsurerModal").val().trim())
                                          , ($("#txtCalleAseguradoraModal").val().trim() == "" ? null : $("#txtCalleAseguradoraModal").val().trim())
                                          , NombreCiudad
                                          , $("#hdAbreviaturaEstadoPaisInsurerModal").val().trim()
                                          , ($("#txtZipInsurerModal").val().trim() == "" ? null : $("#txtZipInsurerModal").val().trim())
                                          , ($("#txtExtCodeInsurerModal").val().trim() == "" ? null : $("#txtExtCodeInsurerModal").val().trim())
                                          , ($("#txtTpaInsurerModal").val().trim() == "" ? null : $("#txtTpaInsurerModal").val().trim())
                                          , ($("#txtFeinSCInsurerModal").val().trim() == "" ? null : $("#txtFeinSCInsurerModal").val().trim())
                                          , ($("#txtCarrierInsurerModal").val().trim() == "" ? null : $("#txtCarrierInsurerModal").val().trim())
                                          , ($("#txtFeinCCInsurerModal").val().trim() == "" ? null : $("#txtFeinCCInsurerModal").val().trim()))

            // Primero verifica que no exista un paciente homónimo.x
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Aseguradora),
                url: '@Url.Action("BuscarHomonimos", "Insurer")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        if (metodoRegistraAseguradora(Aseguradora)) // Si la llamada al registro de la aseguradora es exitosa.
                        {
                            LimpiarControlesRegistroNuevaAseguradora();
                                ValorOriginalNombreAseguradora = $("#txtAseguradora").val().trim(); // (Gabo) Actualiza el valor de la variable ValorOriginalNombreAseguradora con el nombre de la aseguradora seleccionada.

                                // $("#myModalInsurer").css({ "display": "none" });
                                // $(".modal-backdrop").css({ "display": "none" });

                            // Aquí se mostrará la aseguradora recién registrada en la caja de texto de autocompletar.
                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de homónimos.
                        llenaModalAseguradora(Data, 'registra');
                    }
                }
            });
        }
    }

   

    function RegistraProveedor(e)
    {
        if ($("#txtNombreProviderModal").val().trim() == "") // Valida la obligatoriedad del nombre.
        {
            e.stopPropagation();

            $("#txtNombreProviderModal").focus();
            $("#txtNombreProviderModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtApellidoProviderModal").val().trim() == "") // Valida la obligatoriedad del apellido. 
        {
            e.stopPropagation();

            $("#txtApellidoProviderModal").focus();
            $("#txtApellidoProviderModal").addClass("has-error");

            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else
        {
            e.preventDefault();

            var Proveedor = LlenarProveedor(0
                                          , $("#txtNombreProviderModal").val().trim()
                                          , $("#txtApellidoProviderModal").val().trim()
                                          , $("#txtNumberProviderModal").val().trim());

            // Primero verifica que no exista un ajustador homónimo.
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Proveedor),
                url: '@Url.Action("BuscarHomonimos", "Provider")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) 
                {
                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        if (metodoRegistraProveedor(Proveedor)) // Si la llamada al registro del proveedor es exitosa.
                        {
                            LimpiarControlesRegistroNuevoProveedor();
                            ValorOriginalNombreProveedor = $("#txtProveedor").val().trim(); // (Gabo) Actualiza el valor de la variable ValorOriginalNombreProveedor con el nombre del proveedor seleccionada.


                            // Aquí se mostrará el ajustador recién registradaoen la caja de texto de autocompletar.
                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de homónimos.

                        llenaModalProveedor(Data, 'registra');
                    }
                }
            });
        }
    }


    function metodoActualizaProvider(e, Proveedor, activo) {
        e.preventDefault();
        //aPos = $("#apos").val();

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Proveedor),
            url: '@Url.Action("ActualizarDatos", "Provider")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                ProveedorX = Proveedor;
                Proveedor = (Data);
                console.log(Data);
                if (Data[0].ErrorMessage == "") {
                    var codNew = Data[0].ProviderErrorCode;//aqui envia  codigo del actualizado

                    $("#hdCodigoProveedor").val(codNew);
                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalProviderHom").trigger("click");
                    $("#btnCancelarProviderModal").trigger("click");
                    LLenaProveedorFormularioCase(ProveedorX);
                    ObtenerProveedores();
                    Exito = true;
                }
                else {

                    mensaje = "Error!";
                    error = Data[0].ErrorMessage + "...";
                    //$("#NumeroSeguroSocialD").focus();//el error solo se muestra en SSD
                }


                MensajeError(mensaje, error);

            }
        });

    }


    function metodoRegistraAjustador(Ajustador)
    {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Ajustador),
            url: '@Url.Action("Create", "Adjuster")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                if (Data[0].ErrorMessage == "")
                {
                    // Se rescata el código del ajustador registrado para mostrarlo como seleccionado.                     
                    $("#hdCodigoAjustador").val(Data[0].AdjusterErrorCode);
                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalAdjusterHom").trigger("click");
                    $("#btnCancelarAjustadorModal").trigger("click");
                    LLenaAjustadorFormularioCase(Ajustador);
                    ObtenerAjustadores();
                    Exito = true;
                }
                else {
                    error = "Error";
                    mensaje = Data[0].ErrorMessage;
                    MensajeError(mensaje, error);
                    $("#txtNombreAdjusterModal").focus();

                    Exito = false;
                }
            }
        });

        return Exito;
    }


    function metodoRegistraPaciente(Paciente)
    {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Paciente),
            url: '@Url.Action("Create", "Patient")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data)
            {
                if (Data[0].ErrorMessage == "")
                {
                    
                    // Se rescata el código del paciente registrado para mostrarlo como seleccionado.
                    $("#hdCodigoPaciente").val(Data[0].PatientErrorCode);

                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalPacienteHom").trigger("click");
                    $("#btnCancelarPacienteModal").trigger("click");
                    $("#txtPaciente").prop("readonly", false); // línea importante agregada por Gabo.                    
                    LLenaPacienteFormularioCase(Paciente);
                    ObtenerPacientes();//para llenar autocompletar
                    Exito = true;
                }
                else
                {
                    error = "Error!";
                    mensaje = Data[0].ErrorMessage;
                    MensajeError(mensaje, error);
                    Exito = false;
                }
            }
        });

        return Exito;
    }

    function metodoRegistraAseguradora(Aseguradora)
    {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Aseguradora),
            url: '@Url.Action("Create", "Insurer")',
             contentType: "application/json",
             dataType: 'json',
             success: function (Data)
             {
                 if (Data[0].ErrorMessage == "")
                 {
                     // Se rescata el código de la aseguradora registrada para mostrarla como seleccionada.
                     $("#hdCodigoAseguradora").val(Data[0].InsurerErrorCode);
                     error = "Successful!";
                     mensaje = "Data save correctly...";
                     MensajeError(mensaje, error);
                     $("#btnCancelarInsurerModal").trigger("click");
                     LLenaAseguradoraFormularioCase(Aseguradora);
                     ObtenerAseguradoras(); 
                     Exito = true;
                 }
                 else
                 {
                     error = "Error";
                     mensaje = Data[0].ErrorMessage;
                     MensajeError(mensaje, error);
                     
                     $("#txtNombreInsurerModal").focus();

                     Exito = false;
                 }
             }
        });

        return Exito;
    }

    function metodoRegistraProveedor(Proveedor)
    {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Proveedor),
            url: '@Url.Action("Create", "Provider")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                if (Data[0].ErrorMessage == "")
                {
                    // Se rescata el código del proveedor registrado para mostrarlo como seleccionado.                     
                    $("#hdCodigoProveedor").val(Data[0].ProviderErrorCode);
                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarProviderModal").trigger("click");
                    $("#btnCancelarModalProviderHom").trigger("click");                    
                    LLenaProveedorFormularioCase(Proveedor);
                    ObtenerProveedores();
                    Exito = true;
                }
                else {
                    error = "Error";
                    mensaje = Data[0].ErrorMessage;
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalProviderHom").trigger("click");
                    $("#txtNombreProviderModal").focus();
                    Exito = false;
                }
            }
        });

        return Exito;
    }



    function metodoRegistraMedico(Doctor) {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Doctor),
            url: '@Url.Action("create", "Medical")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                if (Data[0].ErrorMessage == "") {
                    
                    // Se rescata el código del doctor recién asignado para después asignarlo al detalle de los doctores
                    $("#hdCodigoDoctorParaAsignar").val(Data[0].MedicalErrorCode);
                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarDoctorModal").trigger("click");
                    $("#btnCancelarModalDoctorHom").trigger("click");
                    LLenaDoctorFormularioCase(Doctor);
                    ObtenerDoctores();
                    Exito = true;
                }
                else
                    {
                    error = "Error";
                    mensaje = Data[0].ErrorMessage;
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalDoctorHom").trigger("click");
                    $("#txtNombreDoctor").focus();
                    Exito = false;
                    }
            }
        });

        return Exito;
    }

    function metodoRegistraAbogado(Abogado) {
        var Exito;

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Abogado),
            url: '@Url.Action("create", "Attorney")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                if (Data[0].ErrorMessage == "") {
                    $("#hdCodigoAbogadoParaAsignar").val(Data[0].AttorneyErrorCode);

                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    LimpiarControlesRegistroNuevoAbogado();

                    Exito = true;
                }
                else {
                    error = "Error!";
                    error = Data[0].MensajeError + "...";
                    Exito = false;
                }
            }
        });

        return Exito;
    }  


    

    function metodoActualizaPaciente(e, Paciente, activo) {
        e.preventDefault();
        aPos = $("#apos").val();

        console.log(Paciente);
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Paciente),
            url: '@Url.Action("Actualizar", "Patient")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                PacienteX = Paciente;
                Paciente = (Data);

                if (Data[0].ErrorMessage == "") {

                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalPatientHom").trigger("click");
                    $("#btnCancelarPacienteModal").trigger("click");
                    LLenaPacienteFormularioCase(PacienteX);
                    ObtenerPacientes();
                }
                else {
                    error = "Error!";
                    mensaje = Data[0].ErrorMessage + "...";
                    //$("#NumeroSeguroSocialD").focus();//el error solo se muestra en SSD
                    MensajeError(mensaje, error);
                }

            }
        });

    }


    function metodoActualizaAjustador(e,Ajustador, activo) {
        e.preventDefault();
        aPos = $("#apos").val();


        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Ajustador),
            url: '@Url.Action("ActualizarDatos", "Adjuster")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                AjustadorX = Ajustador;
                Ajustador = (Data);

                if (Data[0].ErrorMessage == "") {

                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalAdjusterHom").trigger("click");
                    $("#btnCancelarAjustadorModal").trigger("click");
                    LLenaAjustadorFormularioCase(AjustadorX);
                    ObtenerAjustadores();                    
                 }
                else
                 {
                    error = "Error!";
                    mensaje = Data[0].ErrorMessage + "...";
                    //$("#NumeroSeguroSocialD").focus();//el error solo se muestra en SSD
                 }


                MensajeError(mensaje, error);

            }
        });

    }

    function metodoActualizaAseguradora(e, Aseguradora, activo) {
        e.preventDefault();
        aPos = $("#apos").val();




        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Aseguradora),
            url: '@Url.Action("ActualizarDatos", "Insurer")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {


                AseguradoraX = Aseguradora;
                //Insurer = (Data);

                if (Data[0].ErrorMessage == "") {

                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);
                    $("#btnCancelarInsurerModal").trigger("click");
                    LLenaAseguradoraFormularioCase(Aseguradora);
                    ObtenerAseguradoras();
                }
                else
                {
                }
                MensajeError(mensaje, error);
            }
        });
    }

    function metodoActualizaProveedor(e, Proveedor, activo) {
        e.preventDefault();
        aPos = $("#apos").val();

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Proveedor),
            url: '@Url.Action("ActualizarDatos", "Provider")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                ProveedorX = Proveedor;
                Proveedor = (Data);

                if (Data[0].ErrorMessage == "") {

                    error = "Successful!";
                    mensaje = "Data update correctly...";
                    $("#btnCancelarProviderModal").trigger("click");
                    $("#btnCancelarModalProviderHom").trigger("click");
                    LLenaProveedorFormularioCase(ProveedorX);
                    ObtenerProveedores();
                }
                else {

                    error = "Error!";
                    mensaje = Data[0].ErrorMessage + "...";
                    $("#NumeroSeguroSocialD").focus();//el error solo se muestra en SSD
                }


                MensajeError(mensaje, error);

            }
        });

    }








    function LlenarPaciente(Codigo
                            , Nombre
                            , Apellido
                            , FechaNacimiento
                            , NumeroSeguroSocial
                            , Direccion
                            , AbreviaturaEstadoPais
                            , NombreCiudad
                            , CodigoPostal
                            , ExtensionCodigoPostal
                            , Telefono
                            , TelefonoAlternativo
                            , Sexo)
    {
        var PacienteJson =
            {
                "Pat_code": Codigo
                , "Pat_firstName": Nombre
                , "Pat_lastName": Apellido
                , "Pat_birthday": FechaNacimiento
                , "Pat_socialSecurityNumberD": ((NumeroSeguroSocial == "") ? null : NumeroSeguroSocial)
                , "Pat_address": ((Direccion == "") ? null : Direccion)
                , "Pat_state": ((AbreviaturaEstadoPais == "") ? null : AbreviaturaEstadoPais)
                , "Pat_city": ((NombreCiudad == "") ? null : NombreCiudad)
                , "Pat_zipCode": ((CodigoPostal == "") ? null : CodigoPostal)
                , "Pat_zipCodeExt": ((ExtensionCodigoPostal == "") ? null : ExtensionCodigoPostal)
                , "Pat_phone": ((Telefono == "") ? null : Telefono)
                , "Pat_fax": ((TelefonoAlternativo == "") ? null : TelefonoAlternativo)
                , "Pat_sex": Sexo
            }

        return PacienteJson;
    }

    function LlenarAjustador(Codigo, Nombre, Apellido, Telefono, ExtensionTelefono)
    {
        var AjustadorJson =
            {
                "Adj_code": Codigo
                , "Adj_firstName": Nombre
                , "Adj_lastName": Apellido
                , "Adj_phone": Telefono
                , "Adj_phoneExt": ExtensionTelefono
            }

        return AjustadorJson;
    }
    
    function LlenarAseguradora(Codigo, Nombre, Telefono, ExtensionTelefono, Fax, Direccion, NombreCiudad, AbreviaturaEstadoPais, CodigoPostal, ExtensionCodigoPostal, SCTpa, FeinSC, Carrier, FeinCC)
    {
        var AseguradoraJson =
            {
                "Ins_code": Codigo,
                "Ins_name": Nombre,
                "Ins_phone": Telefono,
                "Ins_phoneExt": ExtensionTelefono,
                "Ins_fax": Fax,
                "Ins_address": Direccion,
                "Ins_city": NombreCiudad,
                "Ins_state": AbreviaturaEstadoPais,
                "Ins_zipCode": CodigoPostal,
                "Ins_zipExt": ExtensionCodigoPostal,
                "Ins_scTpaCode": SCTpa,
                "Ins_feinSc": FeinSC,
                "Ins_carrierCode": Carrier,
                "Ins_feinCc": FeinCC
            }

        return AseguradoraJson;
    }

    function LlenarProveedor(Codigo, Nombre, Apellido, idNumber) 
    {
        var ProveedorJson =
            {
                "Pro_code": Codigo,
                "Pro_firstName": Nombre,
                "Pro_lastName": Apellido,
                "Pro_number": idNumber
            }

        return ProveedorJson;
    }

    function LLenaPacienteFormularioCase(Paciente)
    {
        // brenher
        CargarPaciente(Paciente);
    }
    function LLenaAjustadorFormularioCase(Ajustador) {
        //brenher
        CargarAjustador(Ajustador);
    }
    function LLenaAseguradoraFormularioCase(Aseguradora)
    {
        //brenher
        CargarAseguradora(Aseguradora);
    }
    function LLenaProveedorFormularioCase(Proveedor)
    {
        CargarProveedor(Proveedor);
    }

    function LLenaDoctorFormularioCase(Doctor) {
        $("#txtDoctor").val(Doctor.Med_firstName + " " + Doctor.Med_lastName );
    }

    function EliminarAbogadoModal(e)
    {
        e.preventDefault();

        var CodigoAbogado = $(this).parent().parent().find("td:eq(0)").html();
        var nomAbog = $(this).parent().parent().find("td:eq(1)").html();


        dato = nomAbog.trim();

        var otable = $("#tblAbogado").dataTable();
        var target_row = $(this).closest("tr").get(0);
        var aPos = otable.fnGetPosition(target_row);

        console.log("EliminarAbogadoModal");

        swal({
            title: "Are you sure?",
            text: "You will not be able to recover the information from " + dato + "!",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, delete it!",
            closeOnConfirm: false,
            closeOnCancel: false
        },
        function (isConfirm) {
            if (isConfirm) {
                swal("Deleted!", "Your file information has been deleted.", "success");
                EliminarAbogadoDeCaso(e, CodigoAbogado, otable, aPos);
            }
            else {
                swal("Cancelled", "The information was not eliminated :)", "error");
                return 0;
            }
        });
    }


    function EliminaPacienteModal(e)
     {
            e.preventDefault();

            var CodigoDoctor = $(this).parent().parent().find("td:eq(0)").html();
            var nomPac = $(this).parent().parent().find("td:eq(1)").html();
     

            dato = nomPac.trim();

            var otable = $("#tblDoctor").dataTable();
            var target_row = $(this).closest("tr").get(0);
            var aPos = otable.fnGetPosition(target_row);

            

            swal({
                title: "Are you sure?",
                text: "You will not be able to recover the information from " + dato + "!",
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes, delete it!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function (isConfirm)
    {
                if (isConfirm) {
                    swal("Deleted!", "Your file information has been deleted.", "success");
                    EliminarDoctorDeCaso(e, CodigoDoctor, otable, aPos);
                }
                else {
                    swal("Cancelled", "The information was not eliminated :)", "error");
                    return 0;
                }
            });
    }
    
    function EliminarDoctorDeCaso(e, CodigoDoctor,otable,pos)
    {
        e.preventDefault();
        
        //var CodigoDoctor= $(this).parent().parent().find("td:eq(0)").html();
        var CodigoCaso = $("#hdCodigoCaso").val();
        
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify({ "CodigoCaso": CodigoCaso, "CodigoDoctor": CodigoDoctor }),
            url: '@Url.Action("EliminarDoctorDeCaso", "CaseMed")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data)
            {
                //mensaje = "Successful!";
                //error = Data.ErrorMessage;                
                //MensajeError(mensaje, error);
                otable.fnDeleteRow(pos);

                /*
                Data contiene => 
                            "Indicator": 0 (Indica que se eliminó el doctor del caso.)
                            "ErrorMessage": "Doctor assigned correctly."

                            "Indicator": 1 (Indica que no se puede eliminar por que está relacionado a un evento.)
                            "ErrorMessage": "You can´t remove the doctor because it is related to a event."
                */



            }
        });
    }

    function EliminarAbogadoDeCaso(e, CodigoDoctor, otable, pos)
    {
        e.preventDefault();
        console.log("EliminarAbogado");

        var CodigoAbogado = $(this).parent().parent().find("td:eq(0)").html();
        var CodigoCaso = $("#hdCodigoCaso").val();
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify({ "CodigoCaso": CodigoCaso, "CodigoAbogado": CodigoAbogado }),
            url: '@Url.Action("EliminarAbogadoDeCaso", "CaseAtt")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                //mensaje = "Successful!";
                //error = Data.ErrorMessage;
                //MensajeError(mensaje, error);
                otable.fnDeleteRow(pos);
                /*
                Data contiene => 
                            "Indicator": 0 (Indica que se eliminó el doctor del caso.)
                            "ErrorMessage": "Doctor assigned correctly."

                            "Indicator": 1 (Indica que no se puede eliminar por que está relacionado a un evento.)
                            "ErrorMessage": "You can´t remove the doctor because it is related to a event."
                */
            }
        });
    }

    function AsignaDoctorACaso(e)
    {
        if ($("#hdCodigoCaso").val().trim() == "")
        {
            //alert("Seleccione un caso");
            $("#txtBuscaCaso").focus();
            error = "Error!";
            mensaje = "Select a case!";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdCodigoDoctorParaAsignar").val().trim() == "")
        {
            //alert("Seleccione un doctor");
            $("#txtDoctor").focus();
            error = "Error!";
            mensaje = "Select a doctor!";
            MensajeError(mensaje, error);
            return false;
        }
        else {
            var CodigoCaso = $("#hdCodigoCaso").val();
            var CodigoDoctor = $("#hdCodigoDoctorParaAsignar").val();
            var ProcedenciaDoctor = (e.currentTarget.id == "btnAsignaDoctor" ? "Billing_AutocompleteDoctor" : "Billing_NewDoctor")
            var CodigoUsuario = ObtenerUsuarioLogueado();

            var DatosAsignacionDoctor =
            {
                "CodigoCaso": CodigoCaso
                , "CodigoDoctor": CodigoDoctor
                , "ProcedenciaDoctor": ProcedenciaDoctor
                , "CodigoUsuario": CodigoUsuario.Use_code
            };

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(DatosAsignacionDoctor),
                url: '@Url.Action("AsignarDoctorACaso", "CaseMed")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    error = "Successful!";
                    mensaje = Data.ErrorMessage;                    
                    MensajeError(mensaje, error);
                    $("#txtDoctor").val("");
                    //console.log("akiiiiiiiii");
                    //AgregaFilaDoctorCaso(DatosAsignacionDoctor); --> no se agrego a tabla solo se muestra en input 
                    CargarDoctores(CodigoCaso);
               
                }
            });

            // Una vez asignado el doctor elegido, se limpia el control oculto que alberga su código durante la asignación.
            $("#hdCodigoDoctorParaAsignar").val("");

        }
    }

    function AsignaAbogadoACaso(e)
    {
        if ($("#hdCodigoCaso").val().trim() == "")
        {
            //alert("Seleccione un caso");
            $("#txtBuscaCaso").focus();
            error = "Error!";
            mensaje = "Select a case!";
            MensajeError(mensaje, error);
            return false;
        }
        else if($("#hdCodigoAbogadoParaAsignar").val().trim() == "")
        {
            //alert("Seleccione un abogado");
            $("#txtAbogado").focus();
            error = "Error!";
            mensaje = "Select a attorney!";
            MensajeError(mensaje, error);
            return false;

        }
        else
        {
            var CodigoCaso = $("#hdCodigoCaso").val();
            var CodigoAbogado = $("#hdCodigoAbogadoParaAsignar").val();

            var DatosAsignacionAbogado =
            {
                "CodigoCaso": CodigoCaso
               ,"CodigoAbogado": CodigoAbogado
            };

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(DatosAsignacionAbogado),
                url: '@Url.Action("AsignarAbogadoACaso", "CaseAtt")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    mensaje = "Successful!";
                    error = Data.ErrorMessage;
                    $("#txtAbogado").val("");
                    MensajeError(mensaje, error);
                    CargarAbogados(CodigoCaso);
                }
            });

            // Una vez asignado el abogado elegido, se limpia el control oculto que alberga su código durante la asignación.
            $("#hdCodigoAbogadoParaAsignar").val("");
        }
    }

    function AsignarNuevoDoctorCaso(e)
    {
        if ($("#txtNombreDoctor").val().trim() == "") // Valida la obligatoriedad del nombre 
        {
            e.stopPropagation();

            $("#txtNombreDoctor").focus();
            $("#txtNombreDoctor").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtApellidoDoctor").val().trim() == "") // Valida la obligatoriedad del apellido
        {
            e.stopPropagation();
            $("#txtApellidoDoctor").focus();
            $("#txtApellidoDoctor").addClass("has-error");
            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdAbreviaturaEstadoPaisDoctor").val() == "") // Valida la obligatoriedad del estado
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select a state from the list!!...";
            MensajeError(mensaje, error);
            $("#txtEstadoPaisDoctor").focus();
            return false;
        }
        else if ($("#hdCiudadDoctor").val() == "" && $("#txtCiudadDoctor").val() == "") // Valida la obligatoriedad de la ciudad (valida que se seleccione una ciudad del autocompletado o que se escriba una ciudad en la caja de texto)
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select or type a city from the list!!...";
            MensajeError(mensaje, error);
            $("#txtCiudadDoctor").focus();
            return false;
        }
        else if ($("#cmbEspecialidadesDoctor").val() == "") {
            e.preventDefault();

            $("#cmbEspecialidadesDoctor").focus();
            $("#cmbEspecialidadesDoctor").addClass("has-error");

            error = "Error!";
            mensaje = "Select a Specialty!!...";
            MensajeError(mensaje, error);
        }
        else
        {
            e.preventDefault();

            var NombreCiudad;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadDoctor").val().trim() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadDoctor").val().trim();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadDoctor").val().trim()
            // ----------------------------------------------------------

            var Doctor = LlenarDoctor(
                                        null
                                      , $("#txtNombreDoctor").val().trim()
                                      , $("#txtApellidoDoctor").val().trim()
                                      , $("#txtDireccionDoctor").val().trim()
                                      , NombreCiudad
                                      , $("#hdAbreviaturaEstadoPaisDoctor").val()
                                      , $("#txtCodigoPostalDoctor").val().trim()
                                      , $("#txtExtensionCodigoPostalDoctor").val().trim()
                                      , $("#txtTelefonoDoctor").val().trim()
                                      , $("#txtExtensionTelefonoDoctor").val().trim()
                                      , $("#txtTelefonoAlternativoDoctor").val().trim()
                                      , $("#txtFaxDoctor").val().trim()
                                      , $("#cmbEspecialidadesDoctor").val()
                                      , $("#txtOficinaDoctor").val().trim())

            // Primero verifica que no exista un paciente homónimo.
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Doctor),
                url: '@Url.Action("BuscarHomonimos", "Medical")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {                    
                    if (!Data.Resultado) // Si no se encuentran homónimos
                    {
                        if (metodoRegistraMedico(Doctor)) // Si la llamada al registro del doctor es exitosa, lo asignará al caso.
                        { 
                            LimpiarControlesRegistroNuevoDoctor();

                            //$("#myModal4").css({ "display": "none" });
                            //$(".modal-backdrop").css({ "display": "none" });
                            
                            AsignaDoctorACaso(e) // Asigna el doctor al caso.                            

                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de hómónimos.
                        llenaModalDoctor(Data,'registra');
                        
                    }
                }
            });
        }        
    }

    function AsignarNuevoAbogadoCaso(e)
    {
        if ($("#txtNombreAbogado").val().trim() == "") // Valida la obligatoriedad del nombre 
        {
            e.stopPropagation();

            $("#txtNombreAbogado").focus();
            $("#txtNombreAbogado").addClass("has-error");

            error = "Error!";
            mensaje = "Required First name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtApellidoAbogado").val().trim() == "") // Valida la obligatoriedad del apellido
        {
            e.stopPropagation();
            $("#txtApellidoAbogado").focus();
            $("#txtApellidoAbogado").addClass("has-error");
            error = "Error!";
            mensaje = "Required Last name!!...";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#hdAbreviaturaEstadoPaisAbogado").val() == "") // Valida la obligatoriedad del estado
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select a state from the list!!...";
            MensajeError(mensaje, error);
            $("#txtEstadoPaisDoctor").focus();
            return false;
        }
        else if ($("#hdCiudadAbogado").val() == "" && $("#txtCiudadAbogado").val() == "") // Valida la obligatoriedad de la ciudad (valida que se seleccione una ciudad del autocompletado o que se escriba una ciudad en la caja de texto)
        {
            e.stopPropagation();
            error = "Error!";
            mensaje = "Select or type a city from the list!!...";
            MensajeError(mensaje, error);
            $("#txtCiudadAbogado").focus();
            return false;
        }
        else if ($("#cmbEspecialidadesAbogado").val() == "") {
            e.preventDefault();

            $("#cmbEspecialidadesAbogado").focus();
            $("#cmbEspecialidadesAbogado").addClass("has-error");

            error = "Error!";
            mensaje = "Select a Specialty!!...";
            MensajeError(mensaje, error);
        }
        else
        {
            e.preventDefault();

            var NombreCiudad;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadAbogado").val().trim() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadAbogado").val().trim();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadAbogado").val().trim()
            // ----------------------------------------------------------

            var Abogado = LlenarAbogado(
                                        null
                                        , $("#txtNombreAbogado").val().trim()
                                        , $("#txtApellidoAbogado").val().trim()
                                        , $("#txtDireccionAbogado").val().trim()
                                        , NombreCiudad
                                        , $("#hdAbreviaturaEstadoPaisAbogado").val().trim()
                                        , $("#txtCodigoPostalAbogado").val().trim()
                                        , $("#txtExtensionCodigoPostalAbogado").val().trim()
                                        , $("#txtTelefonoAbogado").val().trim()
                                        , $("#txtFaxAbogado").val().trim()
                                        , $("#txtAsistenteAbogado").val().trim()
                                        , $("#cmbEspecialidadesAbogado").val())


            // Primero verifica que no exista un abogado homónimo.
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(Abogado),
                url: '@Url.Action("BuscarHomonimos", "Attorney")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    if (!Data.Resultado) // Si no se encuentran homónimos
                    {

                        if (metodoRegistraAbogado(Abogado)) // Si la llamada al registro del abogado es exitosa, lo asignará al caso.
                        {
                            $("#myModal55").css({ "display": "none" });
                            $(".modal-backdrop").css({ "display": "none" });

                            AsignaAbogadoACaso(e) // Asigna el abogado al caso.                            
                        }
                    }
                    else // Si se encontraron homónimos.
                    {
                        // Muestra las coincidencias de hómónimos.
                    }
                }
            });
        }
    }



    function LimpiarControlesRegistroNuevoDoctor()
    {
        /************ Variables que se utilizan en el autocompletar ************/
        ValorOriginalEstadoPaisDoctor = "";
        ValorOriginalCiudadDoctor = "";
        /***********************************************************************/
        
        $("#txtNombreDoctor").val("");
        $("#txtApellidoDoctor").val("");
        $("#txtDireccionDoctor").val("");

        $("#hdAbreviaturaEstadoPaisDoctor").val("");
        $("#txtEstadoPaisDoctor").val("");

        $("#hdCiudadDoctor").val("");
        $("#txtCiudadDoctor").val("");

        $("#txtCodigoPostalDoctor").val("");
        $("#txtExtensionCodigoPostalDoctor").val("");
        $("#txtTelefonoDoctor").val("");
        $("#txtExtensionTelefonoDoctor").val("");
        $("#txtTelefonoAlternativoDoctor").val("");
        $("#txtFaxDoctor").val("");
        $("#cmbEspecialidadesDoctor").val("");
        $("#txtOficinaDoctor").val("");
    }    

    function LimpiarControlesRegistroNuevoAbogado()
    {
        /************ Variables que se utilizan en el autocompletar ************/
        ValorOriginalEstadoPaisAbogado = "";
        ValorOriginalCiudadAbogado = "";
        /***********************************************************************/

        $("#txtNombreAbogado").val("");
        $("#txtApellidoAbogado").val("");
        $("#txtDireccionAbogado").val("");

        $("#hdAbreviaturaEstadoPaisAbogado").val("");
        $("#txtEstadoPaisAbogado").val("");

        $("#hdCiudadAbogado").val("");
        $("#txtCiudadAbogado").val("");

        $("#txtCodigoPostalAbogado").val("");
        $("#txtExtensionCodigoPostalAbogado").val("");
        $("#txtTelefonoAbogado").val("");
        $("#txtExtensionTelefonoAbogado").val("");
        $("#txtTelefonoAlternativoAbogado").val("");
        $("#txtFaxAbogado").val("");
        $("#cmbEspecialidadesAbogado").val("");
        $("#txtOficinaAbogado").val("");
    }

    function LimpiarControlesRegistroNuevoAjustador()
    {
        $("#txtNombreAdjusterModal").val("");
        $("#txtApellidoAdjusterModal").val("");
        $("#txtPhoneAdjusterModal").val("");
        $("#txtExtAdjusterModal").val("");
    }

    function LimpiarControlesRegistroNuevoPaciente()
    {
        /************ Variables que se utilizan en el autocompletar ************/
        ValorOriginalEstadoPaisPaciente = "";
        ValorOriginalCiudadPaciente = "";
        /***********************************************************************/

        $("#NombrePacienteModal").val("");
        $("#ApellidoPacienteModal").val("");
        $("#NumeroSeguroSocialDPacienteModal").val("");
        $("#DireccionPacienteModal").val("");

        $("#hdAbreviaturaEstadoPaisPacienteModal").val("");
        $("#EstadoPaisPacienteModal").val("");
        $("#hdCiudadPacienteModal").val("");
        $("#CiudadPacienteModal").val("");

        $("#CodigoPostalPacienteModal").val("");
        $("#ExtensionCodigoPostalPacienteModal").val("");
        $("#TelefonoPacienteModal").val("");
        $("#TelefonoAlternativoPacienteModal").val("");
        $("#FechaNacimientoPacienteModal").datepicker("setDate", new Date());

        $("#rdbMasculinoPacienteModal").prop("checked", false);
        $("#rdbFemeninoPacienteModal").prop("checked", false);
        alert("muestra");
        $("btnEditarPatientModal").addClass("hidden");
        $("btnAsignarNuevoPatientModal").removeClass("hidden");
    }

    function LimpiarControlesRegistroNuevaAseguradora()
    {
        /************ Variables que se utilizan en el autocompletar ************/
        ValorOriginalEstadoPaisAseguradora = "";
        ValorOriginalCiudadAseguradora = "";
        /***********************************************************************/

        $("#txtNombreInsurerModal").val("");
        $("#txtCalleAseguradoraModal").val("");

        $("#hdCiudadInsurerModal").val("");
        $("#txtCiudadInsurerModal").val("");

        $("#hdAbreviaturaEstadoPaisInsurerModal").val("");
        $("#txtEstadoInsurerModal").val("");

        
        $("#FaxInsurerModal").val("");
        $("#txtTelefonoInsurerModal").val("");
        $("#txtExtInsurerModal").val("");
        $("#txtZipInsurerModal").val("");
        $("#txtExtCodeInsurerModal").val("");
        $("#txtTpaInsurerModal").val("");
        $("#txtFeinSCInsurerModal").val("");
        $("#txtCarrierInsurerModal").val("");
        $("#txtFeinCCInsurerModal").val("");
    }

    function LimpiarControlesRegistroNuevoProveedor()
    {
        $("#txtNombreProviderModal").val("");
        $("#txtApellidoProviderModal").val("");
        $("#txtNumberProviderModal").val("");
    }

    function LimpiarControlesEspecialidad()  //edher cancelaEspecialidad(e)
    {
        $("#txtEspecialidad").val("");
        $("#txtEspecialidadCodigo").val("0");
        $("#btnRegistraAgregaEspecialidad").html("Add");
    }
    
    function LlenarDoctor(Codigo, Nombre, Apellido, Direccion, NombreCiudad, AbreviaturaEstadoPais, CodigoPostal, ExtensionCodigoPostal, Telefono, ExtensionTelefono, TelefonoAlternativo, Fax, CodigoEspecialidad, Oficina) 
    {
        var DoctorJson =
            {
                "Med_code": Codigo
                , "Med_firstName": Nombre
                , "Med_lastName": Apellido
                , "Med_address": Direccion
                , "Med_city": NombreCiudad
                , "Med_state": AbreviaturaEstadoPais
                , "Med_zipCode": CodigoPostal
                , "Med_zipCodeExt": ExtensionCodigoPostal
                , "Med_phone": Telefono
                , "Med_phoneExt": ExtensionTelefono
                , "Med_alternatePhone": TelefonoAlternativo
                , "Med_fax": Fax
                , "Spe_code": CodigoEspecialidad
                , "Med_office": Oficina
            }

        return DoctorJson;
    }

    function LlenarAbogado(Codigo, Nombre, Apellido, Direccion, NombreCiudad, AbreviaturaEstadoPais, CodigoPostal, ExtensionCodigoPostal, Telefono, Fax, Asistente, CodigoEspecialidad)
    {
        var AbogadoJson = {
                  "Att_code": Codigo
                , "Att_firstName": Nombre
                , "Att_lastName": Apellido
                , "Att_address": Direccion
                , "Att_phone": Telefono
                , "Att_fax": Fax
                , "Att_assistant": Asistente
                , "Spe_code": CodigoEspecialidad
                , "Att_city": NombreCiudad
                , "Att_state": AbreviaturaEstadoPais
                , "Att_zipCode": CodigoPostal
                , "Att_zipCodeExt": ExtensionCodigoPostal
        }

        return AbogadoJson;
    }

    function OntenerEstadosPais()
    {
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("ListaEstados", "State")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data)
            {
                EstadosPais = Data;
            }
        });
    }

    function OntenerCiudades()
    {
        $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("ListaCiudades", "City")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data)
            {
                Ciudades = Data;
            }
        });
    }

    function AutocompletarEstadosPaisDoctor()
    {
        var CodigoEstadoPais;

        $("#txtEstadoPaisDoctor").autocomplete({
            source: function (request, response) {
                var results = $.map(EstadosPais, function (tag) {
                    if (tag.Sta_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Sta_name,
                            value: tag.Sta_name,
                            id: tag.Sta_abbreviation
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoEstadoPais = ui.item.id;
                $("#hdAbreviaturaEstadoPaisDoctor").val(CodigoEstadoPais);

                ValorOriginalEstadoPaisDoctor = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalEstadoPaisDoctor);
            }
        });
    }

    function AutocompletarEstadosPaisAbogado()
    {
        var CodigoEstadoPais;

        $("#txtEstadoPaisAbogado").autocomplete({
            source: function (request, response) {
                var results = $.map(EstadosPais, function (tag) {
                    if (tag.Sta_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Sta_name,
                            value: tag.Sta_name,
                            id: tag.Sta_abbreviation
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoEstadoPais = ui.item.id;
                $("#hdAbreviaturaEstadoPaisAbogado").val(CodigoEstadoPais);

                ValorOriginalEstadoPaisAbogado = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalEstadoPaisAbogado);
            }
        });
    }

    function AutocompletarEstadosPaisPaciente()
    {
        var CodigoEstadoPais;

        $("#EstadoPaisPacienteModal").autocomplete({
            source: function (request, response) {
                var results = $.map(EstadosPais, function (tag) {
                    if (tag.Sta_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Sta_name,
                            value: tag.Sta_name,
                            id: tag.Sta_abbreviation
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoEstadoPais = ui.item.id;
                $("#hdAbreviaturaEstadoPaisPacienteModal").val(CodigoEstadoPais);

                ValorOriginalEstadoPaisPaciente = $(this).val().trim();

                //$(this).blur();
                $("#CiudadPacienteModal").focus();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalEstadoPaisPaciente);
            }
        });
    }

    function AutocompletarEstadosPaisAseguradora()
    {
        var CodigoEstadoPais;

        $("#txtEstadoInsurerModal").autocomplete({
            source: function (request, response) {
                var results = $.map(EstadosPais, function (tag) {
                    if (tag.Sta_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Sta_name,
                            value: tag.Sta_name,
                            id: tag.Sta_abbreviation
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoEstadoPais = ui.item.id;
                $("#hdAbreviaturaEstadoPaisInsurerModal").val(CodigoEstadoPais);

                ValorOriginalEstadoPaisAseguradora = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalEstadoPaisAseguradora);
            }
        });
    }

    function AutocompletarCiudadesDoctor()
    {
        var CodigoCiudad;

        $("#txtCiudadDoctor").autocomplete({
            source: function (request, response) {
                var results = $.map(Ciudades, function (tag) {
                    if (tag.Cit_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Cit_name,
                            value: tag.Cit_name,
                            id: tag.Cit_name
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoCiudad = ui.item.id;
                $("#hdCiudadDoctor").val(CodigoCiudad);

                ValorOriginalCiudadDoctor = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalCiudadDoctor);
            }
        });
    }

    function AutocompletarCiudadesAbogado()
    {
        var CodigoCiudad;

        $("#txtCiudadAbogado").autocomplete({
            source: function (request, response) {
                var results = $.map(Ciudades, function (tag) {
                    if (tag.Cit_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Cit_name,
                            value: tag.Cit_name,
                            id: tag.Cit_name
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoCiudad = ui.item.id;
                $("#hdCiudadAbogado").val(CodigoCiudad);

                ValorOriginalCiudadAbogado = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalCiudadAbogado);
            }
        });
    }

    function AutocompletarCiudadesPaciente()
    {
        var CodigoCiudad;

        $("#CiudadPacienteModal").autocomplete({
            source: function (request, response) {
                var results = $.map(Ciudades, function (tag) {
                    if (tag.Cit_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Cit_name,
                            value: tag.Cit_name,
                            id: tag.Cit_name
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoCiudad = ui.item.id;
                $("#hdCiudadPacienteModal").val(CodigoCiudad);

                ValorOriginalCiudadPaciente = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalCiudadPaciente);
            }
        });
    }

    function AutocompletarCiudadesAseguradora()
    {
        var CodigoCiudad;

        $("#txtCiudadInsurerModal").autocomplete({
            source: function (request, response) {
                var results = $.map(Ciudades, function (tag) {
                    if (tag.Cit_name.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                        return {
                            label: tag.Cit_name,
                            value: tag.Cit_name,
                            id: tag.Cit_name
                        };
                    }
                });

                response(results.slice(0, 10));
            },
            select: function (event, ui) {
                CodigoCiudad = ui.item.id;
                $("#hdCiudadInsurerModal").val(CodigoCiudad);

                ValorOriginalCiudadAseguradora = $(this).val().trim();

                $(this).blur();
            },
            change: function (event, ui) {
                if (ui.item == null)
                    $(this).val(ValorOriginalCiudadAseguradora);
            }
        });
    }

    function CargarEspecialidadesDoctor()
    {
        var CodigoEspecialidad;
        var NombreEspecialidad;
        var Especialidades;

        $("#cmbEspecialidadesDoctor").addClass("form-control m-b");

        $.ajax({
            async: false,
            url: '@Url.Action("ListaEspecialidadesDoctor", "Specialty")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data) {
                Especialidades = Data;
            }
        });

        $("#tblModalEspecialidad").DataTable().clear(); // limpio LlenaTablaModalDoctor
        $("#cmbEspecialidadesDoctor").html("");//limpio Combo
        $.map(Especialidades, function (val, i)
        {
            CodigoEspecialidad = val.Spe_code;
            NombreEspecialidad = val.Spe_name;
            //LlenaCombo
            $("#cmbEspecialidadesDoctor").append("<option value='" + CodigoEspecialidad + "'>" + NombreEspecialidad + "</option>");

            //LlenaTablaModalDoctor 
            $('#tblModalEspecialidad').dataTable().fnAddData([CodigoEspecialidad, NombreEspecialidad, "<a class='btn editaSeleccionaEspecialidad btn-white btn-bitbucket'><i class='fa fa-check text-danger' /> </a>"]);
        });

        var otable = $("#tblModalEspecialidad").dataTable().fnDestroy();
        otable = $('#tblModalEspecialidad').DataTable({
            columnDefs: [{ className: "hidden", "targets": [0] }],
            lengthMenu: [[5, 10, 25, 50, -1], [5, 10, 25, 50, "All"]]
        });
    }
   
    function CargarPacientesEnCombo(Pacientes)
    {
        console.clear();
        console.log(Pacientes);

        var CodigoPaciente;
        var NombrePaciente;

        $.map(Pacientes, function (val, i)
        {
            CodigoPaciente = val.Codigo;
            NombrePaciente = val.NombreCompleto;

            $("#cmbPaciente").append("<option value='" + CodigoPaciente + "'>" + NombrePaciente + "</option>");
        });
    }

    function CargarAjustadoresEnCombo(Ajustadores)
    {
        console.clear();
        console.log(Ajustadores);

        var CodigoAjustador;
        var NombreAjustador;

        $.map(Ajustadores, function (val, i)
        {
            CodigoAjustador = val.Codigo;
            NombreAjustador = val.NombreCompleto;

            $("#cmbAjustador").append("<option value='" + CodigoAjustador + "'>" + NombreAjustador + "</option>");
        });
    }

    function CargarAseguradorasEnCombo(Aseguradoras)
    {
        console.clear();
        console.log(Aseguradoras);

        var CodigoAseguradora;
        var NombreAseguradora;

        $.map(Aseguradoras, function (val, i)
        {
            CodigoAseguradora = val.Codigo;
            NombreAseguradora = val.NombreCompleto;

            $("#cmbAseguradora").append("<option value='" + CodigoAseguradora + "'>" + NombreAseguradora + "</option>");
        });
    }

    function CargarProveedoresEnCombo(Proveedores)
    {
        console.clear();
        console.log(Proveedores);

        var CodigoProveedor;
        var NombreProveedor;

        $.map(Proveedores, function (val, i)
        {
            CodigoProveedor = val.Codigo;
            NombreProveedor = val.NombreCompleto;

            $("#cmbProveedor").append("<option value='" + CodigoProveedor + "'>" + NombreProveedor + "</option>");
        });
    }

    function CargarSupervisoresEnCombo(Supervisores)
    {
        console.clear();
        console.log(Supervisores);

        var CodigoSupervisor;
        var NombreSupervisor;

        $.map(Supervisores, function (val, i)
        {
            CodigoSupervisor = val.Codigo;
            NombreSupervisor = val.NombreCompleto;

            $("#cmbCaseSupervisor").append("<option value='" + CodigoSupervisor + "'>" + NombreSupervisor + "</option>");
        });
    }

    function CargarEspecialidadesAbogado()
    {
        var CodigoEspecialidad;
        var NombreEspecialidad;
        var Especialidades;

        $("#cmbEspecialidadesAbogado").addClass("form-control m-b");

        $.ajax({
            async: false,
            url: '@Url.Action("ListaEspecialidadesAbogado", "Specialty")',
            contentType: "application/json",
            dataType: 'json',
            success: function (Data)
            {
                Especialidades = Data;
            }
        });

        $.map(Especialidades, function (val, i) {
            CodigoEspecialidad = val.Spe_code;
            NombreEspecialidad = val.Spe_name;

            $("#cmbEspecialidadesAbogado").append("<option value='" + CodigoEspecialidad + "'>" + NombreEspecialidad + "</option>");
        });
    }

    function LimpiarControlesRegistro()
    {
        /************ Variables que se utilizan en el autocompletar ************/
        ValorOriginalNombrePaciente = "";       
        ValorOriginalNombreAjustador = "";
        ValorOriginalNombreAseguradora = "";
        ValorOriginalNombreProveedor = "";
        ValorOriginalNombreSupervisor = "";
        ValorOriginalNombreDoctor = "";
        ValorOriginalNombreAbogado = "";
        /***********************************************************************/

        LimpiarControlesPaciente();
        LimpiarControlesCaso();
        LimpiarTablas();
    }

    function NuevoCaso(e)
    {
        // brenher caso
        e.preventDefault();
        swal({
            title: "Do you want to start with a new case?",
            text: "",
            type: "warning",
            showCancelButton: true,
            confirmButtonColor: "#DD6B55",
            confirmButtonText: "Yes, start new!",
            closeOnConfirm: false,
            closeOnCancel: true
        },
               function (isConfirm) {
                   if (isConfirm) {
                       swal("Success!", "", "success");//edher
                     
                       console.log("hhhhhhh");
                       //habilita controles
                       $("#txtPaciente").prop("readonly", false);
                       $("#btnRegistrarAdjuster").prop("disabled", false);
                       $("#btnRegistrarInsurer").prop("disabled", false);
                       $("#btnRegistrarProveedor").prop("disabled", false);
                       
                       //$(this).hide;

                       LimpiarControlesRegistro();
                       $("#txtStatus").val("Open");
                       $("#txtPaciente").focus();

                       // Limpia la caja de texto de búsqueda 
                       $("#EnvolturatblCasos > #TablaParaBusquedaAvanzadaCasos > #tblCasos_wrapper > #tblCasos_filter > label > input[type='search']").val("");
                       
                       $("#tblCasos > tbody").css({ "display": "none" });

                       if (VerificarContraccionFormularioRegistro() == true) // "VerificarContraccionFormularioRegistro" es una función que retorna true si el formulario de registro está contraído.
                           ExpandirFormularioRegistro($("#frmFormularioCaso").parent().find("div:eq(0)").find("div:eq(0)").find("a:eq(0)"));

                       $("#btnRegistrar").prop("disabled", false);      // Desactiva el botón registrar.
                       $("#btnActualizar").prop("disabled", true);    // Activa e botón actualizar 
                   }
                   else
                   {
                       swal("Cancelled", "The information was not saved !!", "error");
                       return 0;
                   }
               });


    }

    function RegistrarCaso(e)
    {
       
        if ($("#hdCodigoPaciente").val().trim() == "" || $("#hdCodigoPaciente").val() == 0) // Valida la obligatoriedad del paciente
        {
            e.stopPropagation();

            $("#txtPaciente").focus();

            error = "Error";
            mensaje = "Put Patient";
            MensajeError(mensaje, error);
            return false;
        }

        else if ($("#hdCodigoAjustador").val().trim() == "" || $("#hdCodigoAjustador").val() == 0) // Valida la obligatoriedad del ajustador
        {
            e.stopPropagation();

            $("#txtAjustador").focus();

            error = "Error";
            mensaje = "Put Adjuster";
            MensajeError(mensaje, error);
             
            return false;
        }
        else if ($("#hdCodigoAseguradora").val().trim() == "" || $("#hdCodigoAseguradora").val() == 0) // Valida la obligatoriedad del Insurer
        {
            e.stopPropagation();

            $("#txtAseguradora").focus();

            error = "Error";
            mensaje = "Put Insurer";
            MensajeError(mensaje, error);

            return false;
        }
        else if ($("#txtFechaAccidente").val().trim() == "") // Valida la obligatoriedad del Insurer
        {
            e.stopPropagation();

            $("#txtFechaAccidente").focus();

            error = "Error";
            mensaje = "Put DOI";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtPrice").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtPrice").focus();

            error = "Error";
            mensaje = "Put Price";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtFechaReferencia").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtFechaReferencia").focus();

            error = "Error";
            mensaje = "Put Date of Referral";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtProveedor").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtProveedor").focus();

            error = "Error";
            mensaje = "Put Provider";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtCaseSupervisor").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtCaseSupervisor").focus();

            error = "Error";
            mensaje = "Put Case Supervisor";
            MensajeError(mensaje, error);
            return false;
        }
        else
        {
            e.preventDefault();

            var BanderaCoincidencias;

            var Daño = ($("#txtDaño").val().trim() == "" ? null : $("#txtDaño").val().trim());
            var Claim = ($("#txtClaim").val().trim() == "" ? null : $("#txtClaim").val().trim());
            var Contacto1 = ($("#txtContacto1").val().trim() == "" ? null : $("#txtContacto1").val().trim());
            var Contacto2 = ($("#txtContacto2").val().trim() == "" ? null : $("#txtContacto2").val().trim());
            var Longshore = ($("#cbLongshore").prop("checked")  ? true : false);
            var EstadoEmpresa = ($("#cbEstadoEmpresa").prop("checked") ? true : false);
            var Otro = ($("#cbOtro").prop("checked") ? true : false);
            var OtroTexto = ($("#txtOtroTexto").val().trim() == "" ? null : $("#txtOtroTexto").val().trim());
            var Presuncion = ($("#cbPresuncion").prop("checked")  ? true : false);
            var Agudeza = ($("#cmbAcuity").val() == "0" ? null : $("#cmbAcuity").val());
            //----------------------------------------------------
            var Traslado;
            if ($("#cbTrasladoSi").prop("checked"))
                Traslado = true;
            else if ($("#cbTrasladoNo").prop("checked"))
                Traslado = false;
            //----------------------------------------------------
            var Transporte;
            if ($("#cbTransporteSi").prop("checked"))
                Transporte = true;
            else if ($("#cbTransporteNo").prop("checked"))
                Transporte = false;
            //----------------------------------------------------
            var TerapiaFisica;
            if ($("#cbTerapiaFisicaSi").prop("checked"))
                TerapiaFisica = true;
            else if ($("#cbTerapiaFisicaNo").prop("checked"))
                TerapiaFisica = false;
            //----------------------------------------------------
            var PermisoContacto;
            if ($("#cbPermisoContactoSi").prop("checked"))
                PermisoContacto = true;
            else if ($("#cbPermisoContactoNo").prop("checked"))
                PermisoContacto = false;
            //----------------------------------------------------
            var EmpresaTraslado = ($("#txtEmpresaTraslado").val().trim() == "" ? null : $("#txtEmpresaTraslado").val().trim());
            var EmpresaTransporte = ($("#txtEmpresaTransporte").val().trim() == "" ? null : $("#txtEmpresaTransporte").val().trim());
            var EmpresaTerapiaFisica = ($("#txtEmpresaTerapiaFisica").val().trim() == "" ? null : $("#txtEmpresaTerapiaFisica").val().trim());
            var EmpresaPermisoContacto = ($("#txtEmpresaPermisoContacto").val().trim() == "" ? null : $("#txtEmpresaPermisoContacto").val().trim());
            var CodigoUsuario = ObtenerUsuarioLogueado();

            var CasoJson = LlenarCaso( 
                             null
                            ,parseInt($("#hdCodigoPaciente").val().trim())
                            ,$("#txtFechaAccidente").val().trim()
                            ,Daño
                            ,Claim
                            ,parseInt($("#hdCodigoAjustador").val().trim())
                            ,parseInt($("#hdCodigoAseguradora").val().trim())
                            ,Contacto1
                            ,Contacto2
                            ,parseFloat($("#txtPrice").val().trim())
                            ,$("#txtFechaReferencia").val().trim()
                            ,parseInt($("#hdCodigoProveedor").val().trim())
                            ,parseInt($("#hdCodigoCaseSupervisor").val().trim())
                            ,Longshore
                            ,EstadoEmpresa
                            ,Otro
                            ,OtroTexto                                              
                            ,Presuncion
                            ,Agudeza
                            ,Traslado 
                            ,Transporte
                            ,TerapiaFisica
                            ,PermisoContacto
                            ,EmpresaTraslado
                            ,EmpresaTransporte
                            ,EmpresaTerapiaFisica
                            ,EmpresaPermisoContacto
                            ,CodigoUsuario.Use_code
                            ,$("#txtNotas").val().trim());

            // Primero verifica que no exista un caso homónimo (en el campo "Claim").
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(CasoJson),
                url: '@Url.Action("BuscarHomonimos", "Case")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {

                    if (!Data.Resultado) // Si no se encontraron homónimos.
                    {
                        BanderaCoincidencias = false;
                        console.log("no encontro");
                    }
                    else // Si se encontraron homónimos.
                    {
                        BanderaCoincidencias = true;
                        console.log("encontro");
                    }
                }
            });
            
            if (!BanderaCoincidencias) // No hay coincidencias, entonces va a registrar.
            {
                $.ajax({
                    type: "POST",
                    async: false,
                    data: JSON.stringify(CasoJson),
                    url: '@Url.Action("Insertar", "Case")',
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (Data) 
                    {   
                        console.log(Data);
                        mensaje = "Your information has been saved";
                        error = "Success";
                        MensajeError(mensaje, error);
                        $("#btnNuevo").prop("disabled", false);
                        $("#btnActualizar").prop("disabled", false);

                        
                        nombrePaciente = $("#txtPaciente").val();
                        txtAseguradora = $("#txtAseguradora").val();
                        txtFechaAccidente =  $("#txtFechaAccidente").val().trim()

                        AgregaFilaTablaCaso(Claim, parseInt($("#hdCodigoPaciente").val().trim()), nombrePaciente, txtAseguradora, txtFechaAccidente, "Open", Data[0].CaseErrorCode);//edhercito
                    }
                });

                //LimpiarControlesRegistro();

                $("#txtPaciente").prop("readonly", true);

                if (VerificarContraccionFormularioRegistro() != true) // "VerificarContraccionFormularioRegistro" es una función que retorna true si el formulario de registro está contraído.
                    ExpandirFormularioRegistro($("#frmFormularioCaso").parent().find("div:eq(0)").find("div:eq(0)").find("a:eq(0)"));
            }
        }
    }

    function ActualizarCasoxx(e)
    {

        alert($("#txtPrice").val().trim());
        if ($("#hdCodigoPaciente").val().trim() == "" || $("#hdCodigoPaciente").val() == 0) // Valida la obligatoriedad del paciente
        {
            e.stopPropagation();

            $("#txtPaciente").focus();

            error = "Error";
            mensaje = "Put Patient";
            MensajeError(mensaje, error);
            return false;
        }

        else if ($("#hdCodigoAjustador").val().trim() == "" || $("#hdCodigoAjustador").val() == 0) // Valida la obligatoriedad del ajustador
        {
            e.stopPropagation();

            $("#txtAjustador").focus();

            error = "Error";
            mensaje = "Put Adjuster";
            MensajeError(mensaje, error);

            return false;
        }
        else if ($("#hdCodigoAseguradora").val().trim() == "" || $("#hdCodigoAseguradora").val() == 0) // Valida la obligatoriedad del Insurer
        {
            e.stopPropagation();

            $("#txtAseguradora").focus();

            error = "Error";
            mensaje = "Put Insurer";
            MensajeError(mensaje, error);

            return false;
        }
        else if ($("#txtFechaAccidente").val().trim() == "") // Valida la obligatoriedad del Insurer
        {
            e.stopPropagation();

            $("#txtFechaAccidente").focus();

            error = "Error";
            mensaje = "Put DOI";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtPrice").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();
            
            $("#txtPrice").focus();

            error = "Error";
            mensaje = "Put Price";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtFechaReferencia").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtFechaReferencia").focus();

            error = "Error";
            mensaje = "Put Date of Referral";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtProveedor").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtProveedor").focus();

            error = "Error";
            mensaje = "Put Provider";
            MensajeError(mensaje, error);
            return false;
        }
        else if ($("#txtCaseSupervisor").val().trim() == "") // Valida la obligatoriedad del Price
        {
            e.stopPropagation();

            $("#txtCaseSupervisor").focus();

            error = "Error";
            mensaje = "Put Case Supervisor";
            MensajeError(mensaje, error);
            return false;
        }        
        else {
            e.preventDefault();

            var BanderaCoincidencias;

            var Daño = ($("#txtDaño").val().trim() == "" ? null : $("#txtDaño").val().trim());
            var Claim = ($("#txtClaim").val().trim() == "" ? null : $("#txtClaim").val().trim());
            var Contacto1 = ($("#txtContacto1").val().trim() == "" ? null : $("#txtContacto1").val().trim());
            var Contacto2 = ($("#txtContacto2").val().trim() == "" ? null : $("#txtContacto2").val().trim());
            var Longshore = ($("#cbLongshore").prop("checked") ? true : false);
            var EstadoEmpresa = ($("#cbEstadoEmpresa").prop("checked") ? true : false);
            var Otro = ($("#cbOtro").prop("checked") ? true : false);
            var OtroTexto = ($("#txtOtroTexto").val().trim() == "" ? null : $("#txtOtroTexto").val().trim());
            var Presuncion = ($("#cbPresuncion").prop("checked") ? true : false);
            var Agudeza = ($("#cmbAcuity").val() == "0" ? null : $("#cmbAcuity").val());
            //----------------------------------------------------
            var Traslado;
            if ($("#cbTrasladoSi").prop("checked"))
                Traslado = true;
            else if ($("#cbTrasladoNo").prop("checked"))
                Traslado = false;
            //----------------------------------------------------
            var Transporte;
            if ($("#cbTransporteSi").prop("checked"))
                Transporte = true;
            else if ($("#cbTransporteNo").prop("checked"))
                Transporte = false;
            //----------------------------------------------------
            var TerapiaFisica;
            if ($("#cbTerapiaFisicaSi").prop("checked"))
                TerapiaFisica = true;
            else if ($("#cbTerapiaFisicaNo").prop("checked"))
                TerapiaFisica = false;
            //----------------------------------------------------
            var PermisoContacto;
            if ($("#cbPermisoContactoSi").prop("checked"))
                PermisoContacto = true;
            else if ($("#cbPermisoContactoNo").prop("checked"))
                PermisoContacto = false;
            //----------------------------------------------------
            var EmpresaTraslado = ($("#txtEmpresaTraslado").val().trim() == "" ? null : $("#txtEmpresaTraslado").val().trim());
            var EmpresaTransporte = ($("#txtEmpresaTransporte").val().trim() == "" ? null : $("#txtEmpresaTransporte").val().trim());
            var EmpresaTerapiaFisica = ($("#txtEmpresaTerapiaFisica").val().trim() == "" ? null : $("#txtEmpresaTerapiaFisica").val().trim());
            var EmpresaPermisoContacto = ($("#txtEmpresaPermisoContacto").val().trim() == "" ? null : $("#txtEmpresaPermisoContacto").val().trim());

            var CasoJson = LlenarCaso(
                                  parseInt($("#hdCodigoCaso").val().trim())
                                , parseInt($("#hdCodigoPaciente").val().trim())
                                , $("#txtFechaAccidente").val().trim()
                                , Daño
                                , Claim
                                , parseInt($("#hdCodigoAjustador").val().trim())
                                , parseInt($("#hdCodigoAseguradora").val().trim())
                                , Contacto1
                                , Contacto2
                                , parseFloat($("#txtPrice").val().trim())
                                , $("#txtFechaReferencia").val().trim()
                                , parseInt($("#hdCodigoProveedor").val().trim())
                                , parseInt($("#hdCodigoCaseSupervisor").val().trim())
                                , Longshore
                                , EstadoEmpresa
                                , Otro
                                , OtroTexto
                                , Presuncion
                                , Agudeza
                                , Traslado
                                , Transporte
                                , TerapiaFisica
                                , PermisoContacto
                                , EmpresaTraslado
                                , EmpresaTransporte
                                , EmpresaTerapiaFisica
                                , EmpresaPermisoContacto
                                , null
                                , $("#txtNotas").val().trim()); 
 
            // Primero verifica que no exista un caso homónimo (en el campo "Claim").
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify(CasoJson),
                url: '@Url.Action("BuscarHomonimos", "Case")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {

                    if (!Data.Resultado) // Si no se encontraron homónimos. maga
                    {

                        BanderaCoincidencias = false;
                    }
                    else // Si se encontraron homónimos.
                    {

                        BanderaCoincidencias = true;
                    }
                }
            }); 
           
            if(!BanderaCoincidencias) // No hay coincidencias, entonces va a actualizar.
            {
                
                $.ajax({
                    type: "POST",
                    async: false,
                    data: JSON.stringify(CasoJson),
                    url: '@Url.Action("Actualizar", "Case")',
                    contentType: "application/json",
                    dataType: 'json',
                    success: function (Data)
                    {
                       
                        mensaje = "Your information has been edited";
                        error = "Success";
                        MensajeError(mensaje, error);
                    }
                });
            }
        }
    }

    function LlenarCaso(
                     CodigoCaso
                    ,CodigoPaciente
                    ,FechaAccidente
                    ,Daño
                    ,Claim
                    ,CodigoAjustador
                    ,CodigoAseguradora
                    ,ContactoUno
                    ,ContactoDos
                    ,Price
                    ,FechaReferencial
                    ,CodigoProveedor
                    ,CodigoSupervisor
                    ,Longshore
                    ,EstadoEmpresa
                    ,Otro
                    ,OtroTexto
                    ,Presuncion
                    ,Agudeza
                    ,Traslado 
                    ,Transporte
                    ,TerapiaFisica
                    ,PermisoContacto
                    ,EmpresaTraslado
                    ,EmpresaTransporte
                    ,EmpresaTerapiaFisica
                    , EmpresaPermisoContacto
                    ,CodigoUsuario
                    , Notas)
    {
        var CasoJson = {
            "Cis_code": CodigoCaso
            ,"Pat_code": CodigoPaciente
            ,"Cis_accidentDate": FechaAccidente
            ,"Cis_Injury": Daño
            ,"Cis_caseCode": Claim
            ,"Adj_code": CodigoAjustador
            ,"Ins_code": CodigoAseguradora
            ,"Cis_contact1": ContactoUno
            ,"Cis_contact2": ContactoDos
            ,"Cis_price": Price
            ,"Cis_referralDate": FechaReferencial
            ,"Pro_code": CodigoProveedor
            ,"Cis_caseSupervisor": CodigoSupervisor
            ,"Cis_Longshore": Longshore
            ,"Cis_companyStatus": EstadoEmpresa
            ,"Cis_other": Otro
            ,"Cis_otherText": OtroTexto
            ,"Cis_presumption": Presuncion
            ,"Cis_acuity": Agudeza
            ,"Cis_translation": Traslado 
            ,"Cis_transportation": Transporte
            ,"Cis_physicalTherapy": TerapiaFisica
            ,"Cis_permisionContact": PermisoContacto
            ,"Cis_translationCompany": EmpresaTraslado
            ,"Cis_transportationCompany": EmpresaTransporte
            ,"Cis_physicalTherapyCompany": EmpresaTerapiaFisica
            , "Cis_permisionContactCompany": EmpresaPermisoContacto
            , "Use_code": CodigoUsuario
            , "Cis_comment": Notas};

        return CasoJson;
    }

    function ControlarCambioChecking(Objeto, NombreClase)
    {
        Objeto.click(function ()
        {
            checkedState = $(this).prop("checked");

            $(this).parent("div").parent("div").parent("div").find(NombreClase+":checked").each(function ()
            {
                $(this).prop("checked", false);
            });

            $(this).prop("checked", checkedState);
        });
    }

        function CargarTablaCasos()
    {
            console.log("carga Tabla Casos");
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListaCasosParaBusquedaAvanzada", "Case")',
                success: function (Data)
                {
                    $("#EnvolturatblCasos > .form-group").before(Data); // Coloca la tabla de búsqueda antes del botón "Nuevo".
                }
            });

        }

    function VerificarContraccionFormularioRegistro()
    {
        if ($("#frmFormularioCaso").css("display") == "none") // Verifica si el formulario de registro está contraído y si es así retorna true.
            return true;
        else
            return false;
    }

        function SeleccionarCaso(e)
        {
            e.preventDefault();

            var Paciente;
            var Cargo;
            var CodigoPaciente;
            var CodigoCasoSeleccionado;
            var CodigoUsuarioQueLee;
            var CodigoCasoALiberar = 0;
            var EstadoOcupacionCasoQueSeraLeido;

            // Limpia la caja de texto de búsqueda 
            $("#EnvolturatblCasos > #TablaParaBusquedaAvanzadaCasos > #tblCasos_wrapper > #tblCasos_filter > label > input[type='search']").val("");
            $("#txtBuscaCaso").val("");


            $("#tblCasos_filter").css({ "display": "none" });
            $("#tblCasos > tbody").css({ "display": "none" });
            $("#tblCasos_paginate").css("display", "none");

            if (VerificarContraccionFormularioRegistro() == true) // "VerificarContraccionFormularioRegistro" es una función que retorna true si el formulario de registro está contraído.
                ExpandirFormularioRegistro($("#frmFormularioCaso").parent().find("div:eq(0)").find("div:eq(0)").find("a:eq(0)"));


            CodigoPaciente = parseInt($(this).parent().parent().find("td:eq(2)").html());

            // ***************************************************************************

            // Obtiene código del caso a leer 
            CodigoCasoSeleccionado = parseInt($(this).parent().parent().find("td:eq(0)").html());

            // ***************************************************************************

            // Obtiene código del usuario logueado 
            UsuarioLogueado = ObtenerUsuarioLogueado();        
            CodigoUsuarioQueLee = UsuarioLogueado.Use_code;

            // ***************************************************************************
            

            // si hay un caso cargado actualmente obtiene su código para liberarlo y poder cargar el caso selccionado.
            if ($("#hdCodigoCaso").val() != "")
                CodigoCasoALiberar = $("#hdCodigoCaso").val();

            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            /* (1) */
            // Obtiene la disponibilidad del caso que será leído.
            EstadoOcupacionCasoQueSeraLeido = VerificarDisponibilidadCaso(CodigoCasoSeleccionado, CodigoUsuarioQueLee)

            if (EstadoOcupacionCasoQueSeraLeido.Busy == true) // Si el caso seleccionado está ocupado, se muestra un mensaje informandolo.
            {
                //alert("Caso ocupado por " + EstadoOcupacionCasoQueSeraLeido.User);

                error = "Error!";
                mensaje = "Case busy by " + EstadoOcupacionCasoQueSeraLeido.User;
                MensajeError(mensaje, error);

            }
            else // Si el caso seleccionado está desocupado, se obtienen los datos correspondientes para mostrarlos en la vista.
            {               
                /* (1) */
                LimpiarControlesRegistro();

                /* (2) */
                // Obtención y carga de datos de paciente.
                Paciente = ObtenerDatosPaciente(CodigoPaciente);
                
                CargarPaciente(Paciente);
                CargarFormularioPacienteModal(Paciente);
                // **************************************

                /* (3) */
                // Obtención y carga de datos de caso.
                Caso = ObtenerDatosCaso(CodigoCasoSeleccionado);
                
                CargarCaso(Caso);

                // **************************************
                //console.log("xxxx");
                /* (4) */
                // Ocupa el caso leído y libera el caso anterior
                OcupaLiberaCasos(CodigoCasoSeleccionado
                                 ,CodigoUsuarioQueLee
                                , CodigoCasoALiberar);



                $("#btnRegistrar").prop("disabled", true);      // Desactiva el botón registrar.
                $("#btnActualizar").prop("disabled", false);    // Activa e botón actualizar                 

                $("#btnRegistrarPaciente").addClass("hidden");     // Oculta el botón registrar de paciente.
                $("#btnEditarPaciente").removeClass("hidden");    // Muestra boton editar de paciente

                $("#btnAsignarNuevoPatientModal").addClass("hidden");     // Oculta el botón registrar de paciente Modal.
                $("#btnEditarPatientModal").removeClass("hidden");    // Muestra boton editar de paciente Modal
            }
            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            // */*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/*/
            console.log("baja pantalla");
            

            //$('#detalleCase').animate({ scrollTop: $('#detalleCase').height() }, 600); // baja pantalla
            //$('#txtPaciente').focus();            
            $('#detalleCase').scrollTop(150);
            $('#txtPaciente').prop("readonly", true);
        }

        function OcupaLiberaCasos(CodigoCasoSeleccionado
                                 ,CodigoUsuarioQueLee
                                 ,CodigoCasoALiberar)
        {
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({"CodigoCasoLeido": CodigoCasoSeleccionado
                                     , "CodigoUsuarioQueLee": CodigoUsuarioQueLee
                                     , "CodigoCasoALiberar": CodigoCasoALiberar}),
                url: '@Url.Action("OcupaLiberaCasos", "Case")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Usuario)
                {
                    UsuarioLogueado = Usuario;
                }
            });
        }

        function ObtenerUsuarioLogueado()
        {
            var UsuarioLogueado;

            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ObtenerUsuarioLogueado", "Account")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Usuario)
                {
                    UsuarioLogueado = Usuario;
                }
            });

            return UsuarioLogueado;
        }

        function VerificarDisponibilidadCaso(CodigoCasoSeleccionado, CodigoUsuarioQueLee)
        {
            var EstadoOcupacion;
             
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({"CodigoCasoSeleccionado": CodigoCasoSeleccionado
                                    ,"CodigoUsuarioQueLee": CodigoUsuarioQueLee}),
                url: '@Url.Action("VerificarDisponibilidadCaso", "Case")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Dato)
                {
                    EstadoOcupacion = Dato;
                }
            });

            return EstadoOcupacion;
        }

        function ObtenerDatosCaso(CodigoCasoALeer)
        {
            var Cargo;

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "CodigoCasoALeer": CodigoCasoALeer}),
                url: '@Url.Action("ObtenerDatosCaso", "Case")',
                contentType: "application/json",
                dataType: 'json',
                success: function (DatosCaso)
                {
                    Caso = DatosCaso;
                    console.log("ObtenerDatosCaso");
                }
            });

            return Caso;
        }

        function CargarCaso(Caso)
        {

            $("#hdCodigoCaso").val(Caso.CaseCode);
            
            // Cada vez que se carga un nuevo caso los valores originales de Paciente, Ajustador, Aseguradora, Provider.
            ValorOriginalNombrePaciente = Caso.Patient;
            ValorOriginalNombreAjustador = Caso.Adjuster;
            ValorOriginalNombreAseguradora = Caso.Insurer;
            ValorOriginalNombreProveedor = Caso.Provider;        
            ValorOriginalNombreSupervisor = Caso.CaseSupervisor

            /*********** PACIENTE ***********/
            $("#hdCodigoPaciente").val(Caso.PatientCode);        
            $("#txtPaciente").val(Caso.Patient);

            /*********** CASO ***********/
            $("#txtFechaAccidente").val(convierteFecha(Caso.CaseAccidentDate));
            $("#txtDaño").val(Caso.CaseInjury);
            $("#txtStatus").val(Caso.CaseStatus ? "Open" : "Closed");
            $("#txtClaim").val(Caso.CaseCaseCode);

            /******** AJUSTADOR ********/
            if (Caso.AdjusterCode == null || Caso.Adjuster.trim() == "" || Caso.Adjuster == null)
            {
                $("#hdCodigoAjustador").val("");
                $("#txtAjustador").val("");
            }
            else
            {
                $("#hdCodigoAjustador").val(Caso.AdjusterCode);
                $("#txtAjustador").val(Caso.Adjuster);
            }

            $("#txtAdjusterPhone").val(Caso.AdjusterPhone);
            $("#txtAdjusterPhoneExt").val(Caso.AdjusterPhoneExt);

            
            /******** ASEGURADORA ********/
            if (Caso.InsurerCode == null || Caso.Insurer.trim() == "" || Caso.Insurer == null)
            {
                $("#hdCodigoAseguradora").val("");
                $("#txtAseguradora").val("");
            }
            else
            {
                $("#hdCodigoAseguradora").val(Caso.InsurerCode);
                $("#txtAseguradora").val(Caso.Insurer);
            }

            $("#txtDireccionAseguradora").val(Caso.InsurerAddress);
            $("#txtCiudadAseguradora").val(Caso.InsurerCity);
            $("#txtEstadoAseguradora").val(Caso.InsurerState);
            $("#txtCodigoPostalAseguradora").val(Caso.InsurerZipCode);
            $("#txtExtensionCodigoPostalAseguradora").val(Caso.InsurerZipCodeExt);
            $("#txtTelefonoAseguradora").val(Caso.InsurerPhone);
            $("#txtExtensionTelefonoAseguradora").val(Caso.InsurerPhoneExt);
            $("#txtFaxAseguradora").val(Caso.InsurerFax);

            /*********** CASO ***********/
            $("#txtContacto1").val(Caso.CaseContact1);
            $("#txtContacto2").val(Caso.CaseContact2);
            $("#txtPrice").val(Caso.CasePrice.toFixed(2));
            $("#txtFechaReferencia").val(convierteFecha(Caso.CaseReferralDate));

            /******** PROVEEDOR ********/
            if (Caso.ProviderCode == null || Caso.Provider.trim() == "" || Caso.Provider == null)
            {
                $("#hdCodigoProveedor").val("");
                $("#txtProveedor").val("");
            }
            else
            {
                $("#hdCodigoProveedor").val(Caso.ProviderCode);
                $("#txtProveedor").val(Caso.Provider);
            }

            /******** SUPERVISOR ********/
            if (Caso.CaseSupervisorCode == null || Caso.CaseSupervisor.trim() == "" || Caso.CaseSupervisor == null)
            {
                $("#hdCodigoCaseSupervisor").val("");
                $("#txtCaseSupervisor").val("");
            }
            else
            {
                $("#hdCodigoCaseSupervisor").val(Caso.CaseSupervisorCode);
                $("#txtCaseSupervisor").val(Caso.CaseSupervisor);
            }



            /*********** CASO ***********/
            // Longshore
            if (Caso.CaseLongshore == null || Caso.CaseLongshore == 0)
                $("#cbLongshore").prop("checked", false);
            else
                $("#cbLongshore").prop("checked", true);

            // Company Status
            if (Caso.CaseCompanyStatus == null || Caso.CaseCompanyStatus == 0)
                $("#cbEstadoEmpresa").prop("checked", false);
            else
                $("#cbEstadoEmpresa").prop("checked", true);

            // Other
            if (Caso.CaseOther == null || Caso.CaseOther == 0)
                $("#cbOtro").prop("checked", false);
            else
                $("#cbOtro").prop("checked", true);

            $("#txtOtroTexto").val(Caso.CaseOtherText); 
                          
            // Presumption
            if (Caso.CasePresumption == null || Caso.CasePresumption == 0)
                $("#cbPresuncion").prop("checked", false);
            else 
                $("#cbPresuncion").prop("checked", true);        

            // Acuity 
            if (Caso.CaseAcuity == 0 || Caso.CaseAcuity == null )
                $("#cmbAcuity").val(0);
            else
                $("#cmbAcuity").val(Caso.CaseAcuity);

            // Translation
            if (Caso.CaseTranslation == null)
            {
                $("#cbTrasladoSi").prop("checked", false);
                $("#cbTrasladoNo").prop("checked", false);
            }
            else
            {
                if (Caso.CaseTranslation == true)
                {
                    $("#cbTrasladoSi").prop("checked", true);
                    $("#cbTrasladoNo").prop("checked", false);
                }
                else if (Caso.CaseTranslation == false)
                {                
                    $("#cbTrasladoSi").prop("checked", false);
                    $("#cbTrasladoNo").prop("checked", true);
                }
            }

            // Transportation
            if (Caso.CaseTransportation == null)
            {
                $("#cbTransporteSi").prop("checked", false);
                $("#cbTransporteNo").prop("checked", false);
            }
            else
            {
                if (Caso.CaseTransportation == true)
                {
                    $("#cbTransporteSi").prop("checked", true);
                    $("#cbTransporteNo").prop("checked", false);
                }
                else if (Caso.CaseTransportation == false)
                {
                    $("#cbTransporteSi").prop("checked", false);
                    $("#cbTransporteNo").prop("checked", true);
                }
            }

            // PhysicalTherapy
            if (Caso.CasePhysicalTherapy == null)
            {
                $("#cbTerapiaFisicaSi").prop("checked", false);
                $("#cbTerapiaFisicaNo").prop("checked", false);
            }
            else
            {
                if (Caso.CasePhysicalTherapy == true)
                {
                    $("#cbTerapiaFisicaSi").prop("checked", true);
                    $("#cbTerapiaFisicaNo").prop("checked", false);
                }
                else if (Caso.CasePhysicalTherapy == false)
                {
                    $("#cbTerapiaFisicaSi").prop("checked", false);
                    $("#cbTerapiaFisicaNo").prop("checked", true);
                }
            }


            // Permission to Contact
            if (Caso.CasePermisionContact == null)
            {
                $("#cbPermisoContactoSi").prop("checked", false);
                $("#cbPermisoContactoNo").prop("checked", false);
            }
            else
            {
                if (Caso.CasePermisionContact == true)
                {
                    $("#cbPermisoContactoSi").prop("checked", true);
                    $("#cbPermisoContactoNo").prop("checked", false);
                }
                else if (Caso.CasePermisionContact == false)
                {
                    $("#cbPermisoContactoSi").prop("checked", false);
                    $("#cbPermisoContactoNo").prop("checked", true);
                }
            }
          
            $("#txtEmpresaTraslado").val(Caso.CaseTranslationCompany);
            $("#txtEmpresaTransporte").val(Caso.CaseTransportationCompany);
            $("#txtEmpresaTerapiaFisica").val(Caso.CasePhysicalTherapyCompany);
            $("#txtEmpresaPermisoContacto").val(Caso.CasePermisionContactCompany);
          
            $("#txtNotas").val(Caso.CaseComment);

            CargarDoctores(Caso.CaseCode);
            CargarAbogados(Caso.CaseCode);
        }

        function CargarDoctores(CodigoCaso)
        {
            $("#tblDoctor").DataTable().clear();

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "CodigoCaso": CodigoCaso }),
                url: '@Url.Action("ObtenerDoctoresCaso", "CaseMed")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {         
                    $.each(Data, function (indice, Valor)
                    {

                        $('#tblDoctor').dataTable().fnAddData([Valor.Codigo, (Valor.NombreCompleto == null ? "" : Valor.NombreCompleto), (Valor.Direccion == null ? "" : Valor.Direccion), (Valor.Ciudad == null ? "" : Valor.Ciudad), (Valor.Estado == null ? "" : Valor.Estado), (Valor.CodigoPostal == null ? "" : Valor.CodigoPostal), (Valor.ExtensionCodigoPostal == null ? "" : Valor.ExtensionCodigoPostal), (Valor.Telefono == null ? "" : Valor.Telefono), (Valor.ExtensionTelefono == null ? "" : Valor.ExtensionTelefono), (Valor.TelefonoAlternativo == null ? "" : Valor.TelefonoAlternativo), (Valor.Fax == null ? "" : Valor.Fax), (Valor.Especialidad == null ? "" : Valor.Especialidad), (Valor.Oficina == null ? "" : Valor.Oficina), "<a class='btn EliminarDoctor btn-white btn-bitbucket'><i class='fa fa-trash-o text-danger' /> </a>"]);
                        
                    });

                    var otable = $("#tblDoctor").dataTable().fnDestroy();
                    otable = $('#tblDoctor').DataTable({
                        columnDefs: [{ className: "hidden", "targets": [0] }],
                        order: [[1, "asc"]]
                    });


                }
            });
        }

        function CargarAbogados(CodigoCaso)
        {
            $("#tblAbogado").DataTable().clear();


            $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify({ "CodigoCaso": CodigoCaso }),
            url: '@Url.Action("ObtenerAbogadosCaso", "CaseAtt")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    $.each(Data, function (indice, Valor)
                    {
   
                        $('#tblAbogado').dataTable().fnAddData([Valor.Codigo, (Valor.NombreCompleto == null ? "" : Valor.NombreCompleto), (Valor.Direccion == null ? "" : Valor.Direccion), (Valor.Ciudad == null ? "" : Valor.Ciudad), (Valor.Estado == null ? "" : Valor.Estado), (Valor.CodigoPostal == null ? "" : Valor.CodigoPostal), (Valor.ExtensionCodigoPostal == null ? "" : Valor.ExtensionCodigoPostal), (Valor.Telefono == null ? "" : Valor.Telefono), (Valor.Fax == null ? "" : Valor.Fax), (Valor.Especialidad == null ? "" : Valor.Especialidad), (Valor.Asistente == null ? "" : Valor.Asistente), "<a class='btn EliminarAbogado btn-white btn-bitbucket'><i class='fa fa-trash-o text-danger' /> </a>"]);


                    });
                    var otable = $("#tblAbogado").dataTable().fnDestroy();
                    otable = $('#tblAbogado').DataTable({
                        columnDefs: [{ className: "hidden", "targets": [0] }],
                        order: [[1, "asc"]]
                    });

                    
                }
            });
        }

        function ObtenerPacientes()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarParaAutocompletar", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    Pacientes = Data;
                }
            });
        }    

        function AutocompletarPacientes()
        {
            var CodigoPaciente;
            var Paciente;        

            $("#txtPaciente").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Pacientes, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto,
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui)
                {
                    CodigoPaciente = ui.item.id
                    $("#hdCodigoPaciente").val(CodigoPaciente);

                    ValorOriginalNombrePaciente = $(this).val().trim(); // Cuando se selecciona un valor lo almacena en la variable "ValorOriginalNombrePaciente"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginalNombrePaciente"                

                    $(this).blur(); // Quita el foco del control (necesario).

                    Paciente = ObtenerDatosPaciente(CodigoPaciente);
                    CargarPaciente(Paciente);
                    LimpiarControlesCaso();

                    $("#txtStatus").val("Open");
                },
                change: function (event, ui)
                {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombrePaciente);
                }
            });
        }

        function ObtenerAjustadores()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarParaAutocompletar", "Adjuster")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    Ajustadores = Data;
                }
            });
        }

        function ObtenerAseguradoras()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarParaAutocompletar", "Insurer")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    Aseguradoras = Data;
                }
            });
        }

        function ObtenerProveedores()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarParaAutocompletar", "Provider")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    Proveedores = Data;
                }
            });
        }

        function ObtenerSupervisores()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarSupervisoresParaAutocompletar", "User")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    Supervisores = Data;
                }
            });
        }

        function ObtenerDoctores()
        {
            $.ajax({
            type: "POST",
            async: false,
            url: '@Url.Action("ListarParaAutocompletar", "Medical")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    Doctores = Data;
                }
            });
        }

        function ObtenerAbogados()
        {
            $.ajax({
                type: "POST",
                async: false,
                url: '@Url.Action("ListarParaAutocompletar", "Attorney")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    Abogados = Data;
                }
            });
        }

        function AutocompletarAjustadores()
        {
            var CodigoAjustador;
            var Ajustador;

            $("#txtAjustador").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Ajustadores, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto, 
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui)
                {                
                    CodigoAjustador = ui.item.id
                    $("#hdCodigoAjustador").val(CodigoAjustador);

                    ValorOriginalNombreAjustador = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).

                    Ajustador = ObtenerDatosAjustador(CodigoAjustador);
                    CargarAjustador(Ajustador);
                },
                change: function (event, ui)
                {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreAjustador);
                }
            });
        }

        function AutocompletarAseguradoras()
        {
            var CodigoAseguradora;
            var Aseguradora;

            $("#txtAseguradora").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Aseguradoras, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto, 
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui)
                {
                    CodigoAseguradora = ui.item.id
                    $("#hdCodigoAseguradora").val(CodigoAseguradora);
                
                    ValorOriginalNombreAseguradora = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).

                    Aseguradora = ObtenerDatosAseguradora(CodigoAseguradora);
                    CargarAseguradora(Aseguradora);
                },
                change: function (event, ui)
                {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreAseguradora);
                }
            });
        }

        function AutocompletarProveedores()
        {
            var CodigoProveedor;
            var Proveedor;

            $("#txtProveedor").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Proveedores, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto, 
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui)
                {
                    CodigoProveedor = ui.item.id;
                    $("#hdCodigoProveedor").val(CodigoProveedor);

                    ValorOriginalNombreProveedor = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).
                },
                change: function (event, ui)
                {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreProveedor);
                }
            });
        }

        function AutocompletarSupervisores()
        {
            var CodigoSupervisor;
            var Supervisor;

            $("#txtCaseSupervisor").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Supervisores, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto, 
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui)
                {
                    CodigoSupervisor = ui.item.id
                    $("#hdCodigoCaseSupervisor").val(CodigoSupervisor);

                    ValorOriginalNombreSupervisor = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).
                },
                change: function (event, ui)
                {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreSupervisor);
                }
            });
        }    

        function AutocompletarDoctores()
        {
            var CodigoDoctor;
            var Doctor;

            $("#txtDoctor").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Doctores, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0)
                        {
                            return {
                                label: tag.NombreCompleto, 
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui) {
                    CodigoDoctor = ui.item.id
                    $("#hdCodigoDoctorParaAsignar").val(CodigoDoctor);

                    ValorOriginalNombreDoctor = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).

                    $("#btnAsignaDoctor").prop("disabled", false);
                },
                change: function (event, ui) {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreDoctor);
                }
            });
        }

        function AutocompletarAbogados()
        {
            var CodigoAbogado;
            var Abogado;

            $("#txtAbogado").autocomplete(
            {
                source: function (request, response) {
                    var results = $.map(Abogados, function (tag) {
                        if (tag.NombreCompleto.toUpperCase().indexOf(request.term.toUpperCase()) >= 0) {
                            return {
                                label: tag.NombreCompleto,
                                value: tag.NombreCompleto,
                                id: tag.Codigo
                            };
                        }
                    });

                    response(results.slice(0, 10));
                },
                select: function (event, ui) {
                    CodigoAbogado = ui.item.id
                    $("#hdCodigoAbogadoParaAsignar").val(CodigoAbogado);

                    ValorOriginalNombreAbogado = $(this).val().trim(); // Cuando se selecciona una valor lo almacena en la variable "ValorOriginal"  para que cuando se vuelva a escribir pero sin seleccionar ningún valor, quede en la caja de texto el valor de la variable "ValorOriginal"                

                    $(this).blur(); // Quita el foco del control (necesario).

                    $("#btnAsignaAbogado").prop("disabled", false);
                },
                change: function (event, ui) {
                    if (ui.item == null)
                        $(this).val(ValorOriginalNombreAbogado);
                }
            });
        }

        function LimpiarControlesPaciente()
        {
            $("#hdCodigoPaciente").val("");
            $("#txtPaciente").val("");            
            $("#txtNumeroSeguroSocial").val("");
            $("#txtFechaNacimiento").val("");
            $("#txtDireccion").val("");
            $("#txtCiudad").val("");
            $("#txtEstadoPais").val("");
            $("#txtCodigoPostal").val("");
            $("#txtExtensionCodigoPostal").val("");
            $("#txtTelefono").val("");
            $("#txtTelefonoAlternativo").val("");
            $("#rdbMasculino").prop("checked", false);
            $("#rdbFemenino").prop("checked", false);       

            $("#btnRegistrarPaciente").removeClass("hidden");
            $("#btnEditarPaciente").addClass("hidden");
        }

        function LimpiarControlesCaso()
        {
            /*********** CASO ***********/
            $("#txtFechaAccidente").datepicker("setDate", new Date());
            $("#txtDaño").val("");
            $("#txtStatus").val("");
            $("#txtClaim").val("");
            /******** AJUSTADOR ********/
            $("#hdCodigoAjustador").val("");
            $("#txtAjustador").val("");
            $("#txtAdjusterPhone").val("");
            $("#txtAdjusterPhoneExt").val("");
            /******** ASEGURADORA ********/
            $("#hdCodigoAseguradora").val("");
            $("#txtAseguradora").val("");
            $("#txtDireccionAseguradora").val("");
            $("#txtCiudadAseguradora").val("");
            $("#txtEstadoAseguradora").val("");
            $("#txtCodigoPostalAseguradora").val("");
            $("#txtExtensionCodigoPostalAseguradora").val("");
            $("#txtTelefonoAseguradora").val("");
            $("#txtExtensionTelefonoAseguradora").val("");
            $("#txtFaxAseguradora").val("");
            /*********** CASO ***********/
            $("#txtContacto1").val("");
            $("#txtContacto2").val("");
            $("#txtPrice").val("");
            $("#txtFechaReferencia").datepicker("setDate", new Date());
            /******** PROVEEDOR ********/
            $("#hdCodigoProveedor").val("");
            $("#txtProveedor").val("");
            /******** SUPERVISOR ********/
            $("#hdCodigoCaseSupervisor").val("");
            $("#txtCaseSupervisor").val("");
            /*********** CASO ***********/
            $(".LongshoreCompanyStatusOther").prop("checked", false); // deschekea los tres primeros checks
            $("#txtOtroTexto").val("");
            $("#cbPresuncion").prop("checked", false);
            $("#cmbAcuity").val("0");
            $(".Traslado").prop("checked", false);
            $(".Transporte").prop("checked", false);
            $(".TerapiaFisica").prop("checked", false);
            $(".PermisoContacto").prop("checked", false);
            $("#txtEmpresaTraslado").val("");
            $("#txtEmpresaTransporte").val("");
            $("#txtEmpresaTerapiaFisica").val("");
            $("#txtEmpresaPermisoContacto").val("");
            $("#txtNotas").val("");
        }

        function LimpiarTablas()
        {
            console.log("limpia tablasYX");
            
            $("#tblDoctor").DataTable().clear();
            var otable = $("#tblDoctor").dataTable().fnDestroy();
            otable = $('#tblDoctor').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });

            $("#tblAbogado").DataTable().clear();
            var otable = $("#tblAbogado").dataTable().fnDestroy();
            otable = $('#tblAbogado').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });
        }


        function ObtenerDatosPaciente(CodigoPaciente)
        {
            var Paciente;

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "Codigo": parseInt(CodigoPaciente) }),
                url: '@Url.Action("Buscar", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (DatosPaciente)
                {
                    Paciente = DatosPaciente;
                    console.log("ObtenerDatosPaciente - buscar");
                }
            });

            return Paciente;
        }

        function ObtenerDatosAjustador(CodigoAjustador)
        {
            var Ajustador;

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "Codigo": parseInt(CodigoAjustador) }),
                url: '@Url.Action("ObtenerDatosParaEditar", "Adjuster")',
                contentType: "application/json",
                dataType: 'json',
                success: function (DatosAjustador)
                {
                    Ajustador = DatosAjustador;
                }
            });

            return Ajustador;
        }

        function ObtenerDatosAseguradora(CodigoAseguradora)
        {
            var Aseguradora;

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "Codigo": parseInt(CodigoAseguradora) }),
                url: '@Url.Action("ObtenerDatosParaEditar", "Insurer")',
                contentType: "application/json",
                dataType: 'json',
                success: function (DatosAseguradora)
                {
                    Aseguradora = DatosAseguradora;
                }
            });

            return Aseguradora;
        }


        function CargarAjustador(Ajustador)
        {
            $("#txtAjustador").val(Ajustador.Adj_firstName + " " + Ajustador.Adj_lastName);
            $("#txtAdjusterPhone").val(Ajustador.Adj_phone);
            $("#txtAdjusterPhoneExt").val(Ajustador.Adj_phoneExt);
        }

        function CargarAseguradora(Aseguradora)
        {
            $("#txtAseguradora").val(Aseguradora.Ins_name);
            $("#txtDireccionAseguradora").val(Aseguradora.Ins_address);
            $("#txtCiudadAseguradora").val(Aseguradora.Ins_city);
            
            if (Aseguradora.Sta_abbreviation == 'undefined' || Aseguradora.Sta_abbreviation != "" || Aseguradora.Sta_abbreviation != null)
                $("#txtEstadoAseguradora").val(Aseguradora.Ins_state);
            else
                $("#txtEstadoAseguradora").val(Aseguradora.Sta_abbreviation);
        
                

            $("#txtCodigoPostalAseguradora").val(Aseguradora.Ins_zipCode);
            $("#txtExtensionCodigoPostalAseguradora").val(Aseguradora.Ins_zipExt);
            $("#txtTelefonoAseguradora").val(Aseguradora.Ins_phone);
            $("#txtExtensionTelefonoAseguradora").val(Aseguradora.Ins_phoneExt);
            $("#txtFaxAseguradora").val(Aseguradora.Ins_fax);
        }

        function CargarPaciente(Paciente)
        {
            console.log(Paciente);
            console.log(Paciente.Pat_firstName);
            $("#txtPaciente").val(Paciente.Pat_firstName + " " + Paciente.Pat_lastName);
            $("#txtNumeroSeguroSocial").val(Paciente.Pat_socialSecurityNumberD);
            console.log("lenth : " + Paciente.Pat_birthday.length);
            console.log(Paciente.Pat_birthday);

            if (Paciente.Pat_birthday.length <= 10) //formato : 08/05/2016
                $("#txtFechaNacimiento").val(Paciente.Pat_birthday);
            else 
                $("#txtFechaNacimiento").val(convierteFecha(Paciente.Pat_birthday));
            $("#txtDireccion").val(Paciente.Pat_address);
            $("#txtCiudad").val(Paciente.Pat_city);            
            //$("#txtFechaNacimiento").datepicker("setDate", Patient.Pat_birthday);

            if (Paciente.Sta_abbreviation != null && Paciente.Sta_abbreviation != "" && Paciente.Sta_abbreviation != 'undefined')
                $("#txtEstadoPais").val(Paciente.Sta_abbreviation);
            else 
                $("#txtEstadoPais").val(Paciente.Pat_state);
                
            $("#txtCodigoPostal").val(Paciente.Pat_zipCode);
            $("#txtExtensionCodigoPostal").val(Paciente.Pat_zipCodeExt);
            $("#txtTelefono").val(Paciente.Pat_phone);
            $("#txtTelefonoAlternativo").val(Paciente.Pat_fax);
            if (Paciente.Pat_sex == 'M') {
                $("#rdbMasculino").prop("checked", true);
                $("#rdbFemenino").prop("checked", false);
            } 
            else if (Paciente.Pat_sex == 'F') {
                $("#rdbMasculino").prop("checked", false);
                $("#rdbFemenino").prop("checked", true);
            }
            else {
                $("#rdbMasculino").prop("checked", false);
                $("#rdbFemenino").prop("checked", false);
            }
            // Habilita o deshabilita los controles del sexo (radios y botón "Actualizar")
            $("#rdbMasculino").attr("disabled", false);
            $("#rdbFemenino").attr("disabled", false);
            $("#btnActualizarSexo").attr("disabled", false);

        }

        function CargarProveedor(Proveedor)
        {
            $("#txtProveedor").val(Proveedor.Pro_firstName + " " + Proveedor.Pro_lastName);
        }

        function CargarFormularioPacienteModal(Paciente)
        {
            console.log(Paciente);
            console.log(Paciente.Pat_firstName);
            $("#NombrePacienteModal").val(Paciente.Pat_firstName);
            $("#ApellidoPacienteModal").val(Paciente.Pat_lastName);
            if (Paciente.Pat_birthday.length <= 10) //formato : 08/05/2016
                $("#FechaNacimientoPacienteModal").val(Paciente.Pat_birthday);
            else
                $("#FechaNacimientoPacienteModal").val(convierteFecha(Paciente.Pat_birthday));


            $("#NumeroSeguroSocialDPacienteModal").val(Paciente.Pat_socialSecurityNumberD);
            $("#DireccionPacienteModal").val(Paciente.Pat_address);


            //if (Paciente.Sta_abbreviation != null && Paciente.Sta_abbreviation != "" && Paciente.Sta_abbreviation != 'undefined')
            //    $("#EstadoPaisPacienteModal").val(Paciente.Sta_abbreviation);
            //else
            //    $("#EstadoPaisPacienteModal").val(Paciente.Pat_state);




            // Cargar el estado del país
            if (Paciente.Pat_state == "" || Paciente.Pat_state == null) {
                $("#hdAbreviaturaEstadoPaisPacienteModal").val("");
                $("#EstadoPaisPacienteModal").val("");
            }
            else {
                $("#hdAbreviaturaEstadoPaisPacienteModal").val(Paciente.Sta_abbreviation);
                $("#EstadoPaisPacienteModal").val(Paciente.Pat_state);
            }




            $("#CiudadPacienteModal").val(Paciente.Pat_city);
                        


            $("#CodigoPostalPacienteModal").val(Paciente.Pat_zipCode);
            $("#ExtensionCodigoPostalPacienteModal").val(Paciente.Pat_zipCodeExt);
            $("#TelefonoPacienteModal").val(Paciente.Pat_phone);
            $("#TelefonoAlternativoPacienteModal").val(Paciente.Pat_fax);
            
            if (Paciente.Pat_sex == 'M') {
                $("#rdbMasculinoPacienteModal").prop("checked", true);
                $("#rdbFemeninoPacienteModal").prop("checked", false);
            }
            else if (Paciente.Pat_sex == 'F') {
                $("#rdbMasculinoPacienteModal").prop("checked", false);
                $("#rdbFemeninoPacienteModal").prop("checked", true);
            }
            else {
                $("#rdbMasculinoPacienteModal").prop("checked", false);
                $("#rdbFemeninoPacienteModal").prop("checked", false);
            }
            // Habilita o deshabilita los controles del sexo (radios y botón "Actualizar")
            /*$("#rdbMasculino").attr("disabled", false);
            $("#rdbFemenino").attr("disabled", false);
            $("#btnActualizarSexo").attr("disabled", false);*/

        }




        function llenaModalPaciente(Data, accion)
        {
            $("#seleccionado").val(0);
            //////////////////////////////////////////////////////
            //$("#tblModalInsurer").find("tr:gt(0)").remove();
            $("#tblModalPaciente").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Pat_firstName != null || val.Pat_firstName != null) {

                    if (val.Pat_status == true)
                        status = "Active";
                    else
                        status = "Inactive";
                    //val.Pat_code = 20;
                    $('#tblModalPaciente').dataTable().fnAddData([
                        val.Pat_code, val.Pat_firstName, val.Pat_lastName, val.Pat_state, val.Pat_city, val.Pat_zipCode, status, "<input type='radio'  name='idRadio' value='" + val.Ins_code + "'>"]);
                }
            });


            var otable = $("#tblModalPaciente").dataTable().fnDestroy();
            otable = $('#tblModalPaciente').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });

            $("#accion").val(accion);
            $("#btnModal").trigger("click");

        }


       
        function llenaModalAseguradora(Data, accion) {

            $("#seleccionado").val(0);

            //$("#tblModalInsurer").find("tr:gt(0)").remove();
            $("#tblModalInsurer").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Ins_name != null) {

                    if (val.Ins_status == true)
                        status = "Active";
                    else
                        status = "Inactive";

                    $('#tblModalInsurer').dataTable().fnAddData([
                        val.Ins_code, val.Ins_name, val.Ins_city, val.Ins_state, val.Ins_zipCode, status, "<input type='radio' class='rdbSeleccionaCoincidencia' name='idRadio' value='" + val.Ins_code + "' style='cursor: pointer;' >"]);
                }
            });


            var otable = $("#tblModalInsurer").dataTable().fnDestroy();
            otable = $('#tblModalInsurer').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });

            $("#accion").val(accion);
            $("#btnModalInsurerHom").trigger("click");

        }


       

        function llenaModalAjustador(Data, accion) {

            $("#seleccionadoAdjusterHom").val(0);
            ///////////////////////////////////////////////////////////////        

            $("#tblModalAdjusterHom").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Adj_firstName != null || val.Adj_lastName != null)
                {
                    if (val.Adj_status == true)
                        status = "Active";
                    else
                        status = "Inactive";

                    $('#tblModalAdjusterHom').dataTable().fnAddData([
                        val.Adj_code, val.Adj_firstName, val.Adj_lastName, val.Adj_phone, val.Adj_phoneExt, status, "<input type='radio' class='rdbSeleccionaCoincidencia' name='idRadio' value='" + val.Adj_code + "' style='cursor: pointer;' >"]);
                }
            });


            var otable = $("#tblModalAdjusterHom").dataTable().fnDestroy();
            otable = $('#tblModalAdjusterHom').DataTable({
                //columnDefs: [{ className: "hidden", "targets": [0] }],
                columnDefs: [{ className: "text-center", "targets": "_all" }],
                columnDefs: [{ className: "hidden", "targets": [0] }]

            });

            $("#accionAdjusterHom").val(accion);
            $("#btnModalAdjusterHom").trigger("click");

        }


        function llenaModalAseguradora(Data, accion) {
         
            $("#seleccionado").val(0);

            //$("#tblModalInsurer").find("tr:gt(0)").remove();
            $("#tblModalInsurer").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Ins_name != null) {

                    if (val.Ins_status == true)
                        status = "Active";
                    else
                        status = "Inactive";

                    $('#tblModalInsurer').dataTable().fnAddData([
                        val.Ins_code, val.Ins_name, val.Ins_city, val.Ins_state, val.Ins_zipCode, status, "<input type='radio' class='rdbSeleccionaCoincidencia' name='idRadio' value='" + val.Ins_code + "' style='cursor: pointer;' >"]);
                }
            });


            var otable = $("#tblModalInsurer").dataTable().fnDestroy();
            otable = $('#tblModalInsurer').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });

            $("#accion").val(accion);
            $("#btnModalInsurerHom").trigger("click");

        }

        function llenaModalProveedor(Data, accion)
        {
          
            $("#seleccionadoProviderHom").val(0);
            ///////////////////////////////////////////////////////////////        

            $("#tblModalProviderHom").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Pro_firstName != null || val.Pro_lastName != null) {
                    if (val.Pro_status == true)
                        status = "Active";
                    else
                        status = "Inactive";

                    $('#tblModalProviderHom').dataTable().fnAddData([
                        val.Pro_code, val.Pro_firstName, val.Pro_lastName, val.Pro_number, status, "<input type='radio'  name='idRadio' value='" + val.Pro_code + "'>"]);
                }
            });


            var otable = $("#tblModalProviderHom").dataTable().fnDestroy();
            otable = $('#tblModalProviderHom').DataTable({
                //columnDefs: [{ className: "hidden", "targets": [0] }],
                columnDefs: [{ className: "text-center", "targets": "_all" }],
                columnDefs: [{ className: "hidden", "targets": [0] }]

            });

            $("#accionProviderHom").val(accion);
            $("#btnModalProviderHom").trigger("click"); 

        }


    function llenaModalPaciente(Data, accion)
        {

       // alert("MODAL HOM PAtient");

        $("#seleccionadoPatientHom").val(0);
        //////////////////////////////////////////////////////
        //$("#tblModalInsurer").find("tr:gt(0)").remove();
        $("#tblModalPatientHom").DataTable().clear();
            $.each(Data.Resultado, function (i, val) {
                if (val.Pat_firstName != null || val.Pat_firstName != null) {

                    if (val.Pat_status == true)
                        status = "Active";
                    else
                        status = "Inactive";
                    //val.Pat_code = 20;
                    $('#tblModalPatientHom').dataTable().fnAddData([
                        val.Pat_code, val.Pat_firstName, val.Pat_lastName, val.Pat_state, val.Pat_city, val.Pat_zipCode, status, "<input type='radio'  name='idRadio' value='" + val.Ins_code + "'>"]);
                }
            });


            var otable = $("#tblModalPatientHom").dataTable().fnDestroy();
            otable = $('#tblModalPatientHom').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }]
            });

            $("#accionPacienteHom").val(accion);
            $("#btnModalPacienteHom").trigger("click");

        }


    function llenaModalDoctor(Data, accion) {



        $("#seleccionadoDoctorHom").val(0);
        //////////////////////////////////////////////////////
        //$("#tblModalInsurer").find("tr:gt(0)").remove();
        $("#tblModalDoctorHom").DataTable().clear();
        $.each(Data.Resultado, function (i, val) {
            if (val.Med_firstName != null || val.Med_lastName != null) {

                if (val.Med_status == true)
                    status = "Active";
                else
                    status = "Inactive";


                //val.Pat_code = 20;
                //$('#tblModalDoctorHom').dataTable().fnAddData([
                    //val.Pat_code, val.Pat_firstName, val.Pat_lastName, val.Pat_state, val.Pat_city, val.Pat_zipCode, status, "<input type='radio'  name='idRadio' value='" + val.Ins_code + "'>"]);

                $('#tblModalDoctorHom').dataTable().fnAddData([
                          val.Med_code, val.Med_firstName, val.Med_lastName, val.Med_zipCode, val.Med_state, status, "<input type='radio'  name='idRadio' value='" + val.Med_code + "'>"]);
            }
        });
     

        var otable = $("#tblModalDoctorHom").dataTable().fnDestroy();
        otable = $('#tblModalDoctorHom').DataTable({
            columnDefs: [{ className: "hidden", "targets": [0] }]
        });

        $("#accionDoctorHom").val(accion);
        $("#btnModalDoctorHom").trigger("click");

    }




    function registraActualizaModalPaciente(e) {

        
        accion = $("#accionPatientHom").val();
        seleccionado = $("#seleccionadoPatientHom").val();
        estadoSeleccion = $("#estadoSeleccionPatientHom").val();

        if (seleccionado > 0)
            $("#hdCodigoModalPaciente").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar

        


        // Obtiene la el nombre de la ciudad seleccionada o ingresada
        if ($("#hdCiudadPacienteModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
            NombreCiudad = $("#CiudadPacienteModal").val();
        else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
            NombreCiudad = $("#CiudadPacienteModal").val()
        // ----------------------------------------------------------

        Sexo = ($("#rdbMasculinoPacienteModal").prop("checked") == true ? "M" : "F") // obtiene el sexo

        var Paciente = LlenarPaciente($("#hdCodigoModalPaciente").val()
                                      , ($("#NombrePacienteModal").val().trim() == '' ? null : $("#NombrePacienteModal").val().trim())
                                      , ($("#ApellidoPacienteModal").val().trim() == '' ? null : $("#ApellidoPacienteModal").val().trim())
                                      , ($("#FechaNacimientoPacienteModal").val().trim() == '' ? null : $("#FechaNacimientoPacienteModal").val().trim())
                                      , ($("#NumeroSeguroSocialDPacienteModal").val().trim() == '' ? null : $("#NumeroSeguroSocialDPacienteModal").val().trim())
                                      , ($("#DireccionPacienteModal").val().trim() == '' ? null : $("#DireccionPacienteModal").val().trim())
                                      , ($("#hdAbreviaturaEstadoPaisPacienteModal").val().trim() == '' ? null : $("#hdAbreviaturaEstadoPaisPacienteModal").val().trim())
                                      , NombreCiudad
                                      , ($("#CodigoPostalPacienteModal").val().trim() == '' ? null : $("#CodigoPostalPacienteModal").val().trim())
                                      , ($("#ExtensionCodigoPostalPacienteModal").val().trim() == '' ? null : $("#ExtensionCodigoPostalPacienteModal").val().trim())
                                      , ($("#TelefonoPacienteModal").val().trim() == '' ? null : $("#TelefonoPacienteModal").val().trim())
                                      , ($("#TelefonoAlternativoPacienteModal").val().trim() == '' ? null : $("#TelefonoAlternativoPacienteModal").val().trim())
                                      , Sexo)


        if (seleccionado > 0)//si selecciono alguna fila
        {
            if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
            {
                ////////////////// Pregunta cuando esta inactivo
                swal({
                    title: "Do you want to active patient?",
                    text: "You will not be able to recover the information !",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes, activate it!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
               function (isConfirm) {
                   if (isConfirm) {
                       //swal("Ok!", "Your information has been saved.", "success");

                       metodoActualizaPaciente(e, Paciente, "inactivo");
                       $("#btnCancelarModalPatientHom").trigger("click");
                       $("#btnCancelarPacienteModal").trigger("click");
                   }
                   else {
                       swal("Cancelled", "The information was not saved !!", "error");
                       return 0;
                   }
               });

            } // cuando el estado de la fila es activo
            else {


                metodoActualizaPaciente(e, Paciente, "activo");
                mensaje = "Your information has been saved";
                error = "Success";
                MensajeError(mensaje, error);
                $("#btnCancelarModal").trigger("click");
                $("#btnCancelar").trigger("click");
            }


        }
        else// cuando no selecciono nada
        {

            if (accion == 'registra')
                metodoRegistraPaciente(Paciente);
            //brenher
            //$("#btnCancelarModalAjustadorHom").trigger("click");


        }
    }




        function registraActualizaModalAseguradora(e) {

            accion = $("#accion").val();
            seleccionado = $("#seleccionado").val();
            estadoSeleccion = $("#estadoSeleccion").val();
            if (seleccionado > 0)
                $("#hdCodigo").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar


            var NombreCiudad;
            var CodigoAseguradoraParaActualizar = null;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadInsurerModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadInsurerModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadInsurerModal").val();
            // ----------------------------------------------------------

            $.each($(".rdbSeleccionaCoincidencia"), function (i, val) {
                if ($(val).prop("checked"))
                    CodigoAseguradoraParaActualizar = val.value;
            });


            ///////////////////////////////////////////////////////////
            var Insurer = LlenarAseguradora($("#hdCodigo").val()
                                  , ($("#txtNombreInsurerModal").val().trim() == "" ? null : $("#txtNombreInsurerModal").val().trim())
                                  , ($("#txtTelefonoInsurerModal").val().trim() == "" ? null : $("#txtTelefonoInsurerModal").val().trim())
                                  , ($("#txtExtInsurerModal").val().trim() == "" ? null : $("#txtExtInsurerModal").val().trim())
                                  , ($("#FaxInsurerModal").val().trim() == "" ? null : $("#FaxInsurerModal").val().trim())
                                  , ($("#txtCalleAseguradoraModal").val().trim() == "" ? null : $("#txtCalleAseguradoraModal").val().trim())
                                  , NombreCiudad
                                  , $("#hdAbreviaturaEstadoPaisInsurerModal").val().trim()
                                  , ($("#txtZipInsurerModal").val().trim() == "" ? null : $("#txtZipInsurerModal").val().trim())
                                  , ($("#txtExtCodeInsurerModal").val().trim() == "" ? null : $("#txtExtCodeInsurerModal").val().trim())
                                  , ($("#txtTpaInsurerModal").val().trim() == "" ? null : $("#txtTpaInsurerModal").val().trim())
                                  , ($("#txtFeinSCInsurerModal").val().trim() == "" ? null : $("#txtFeinSCInsurerModal").val().trim())
                                  , ($("#txtCarrierInsurerModal").val().trim() == "" ? null : $("#txtCarrierInsurerModal").val().trim())
                                  , ($("#txtFeinCCInsurerModal").val().trim() == "" ? null : $("#txtFeinCCInsurerModal").val().trim()))
            //////////////////////////////////////////////////////////////////////////
            if (seleccionado > 0)//si selecciono alguna fila
            {

                if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
                {
                    ////////////////// Pregunta cuando esta inactivo
                    swal({
                        title: "Do you want to active insurer?",
                        text: "You will not be able to recover the information !",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, activate it!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                   function (isConfirm) {
                       if (isConfirm) {
                           //swal("Ok!", "Your information has been saved.", "success");

                           metodoActualizaAseguradora(e, Insurer,"inactivo");                           
                           $("#btnCancelar").trigger("click");
                           $("#btnCancelarModalInsurerHom").trigger("click");
                       }
                       else {
                           swal("Cancelled", "The information was not saved !!", "error");
                           return 0;
                       }
                   });

                } // cuando el estado de la fila es activo
                else {

                    metodoActualizaAseguradora(e,Insurer, "activo");
                    mensaje = "Your information has been saved";
                    error = "Success";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                    
                }


            }
            else// cuando no selecciono nada
            {

                if (accion == 'registra') {
                    metodoRegistraAseguradora(Insurer);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                }
                //else {

                //    metodoActualizaInsurer(e, "activo");
                //}


            }
            ///////////////////////////////////////////////////////
        }


        function registraActualizaModalProveedor(e)
        {
            
            accion = $("#accionProviderHom").val();
            seleccionado = $("#seleccionadoProviderHom").val();
            estadoSeleccion = $("#estadoSeleccionProviderHom").val();

            if (seleccionado > 0)
                $("#hdCodigoModalProveedor").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar

            var Proveedor = LlenarProveedor($("#hdCodigoModalProveedor").val()
                                  , $("#txtNombreProviderModal").val().trim()
                                  , $("#txtApellidoProviderModal").val().trim()
                                  , $("#txtNumberProviderModal").val().trim())



            if (seleccionado > 0)//si selecciono alguna fila
            {
                if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
                {
                    ////////////////// Pregunta cuando esta inactivo
                    swal({
                        title: "Do you want to active provider?",
                        text: "You will not be able to recover the information !",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, activate it!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                   function (isConfirm) {
                       if (isConfirm) {
                           //swal("Ok!", "Your information has been saved.", "success");

                           metodoActualizaProveedor(e, Proveedor, "inactivo");
                           $("#btnCancelarModal").trigger("click");
                           $("#btnCancelar").trigger("click");
                       }
                       else {
                           swal("Cancelled", "The information was not saved !!", "error");
                           return 0;
                       }
                   });

                } // cuando el estado de la fila es activo, actualiza lo registrado con los nuevos dato del formulario modal.
                else {

                    metodoActualizaProvider(e, Proveedor, "activo");
                    mensaje = "Your information has been saved";
                    error = "Success";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModal").trigger("click");
                    $("#btnCancelar").trigger("click");
                }


            }
            else// cuando no selecciono nada
            {

                if (accion == 'registra')
                    metodoRegistraProveedor(Proveedor);

                $("#btnCancelarModalProveedorHom").trigger("click");


            }
        }


        function registraActualizaModalAjustador(e) {

            
            accion = $("#accionAdjusterHom").val();
            seleccionado = $("#seleccionadoAdjusterHom").val();
            estadoSeleccion = $("#estadoSeleccionAdjusterHom").val();
            
            if (seleccionado > 0)
                $("#hdCodigoModalAjustador").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar

            

            var Ajustador = LlenarAjustador($("#hdCodigoModalAjustador").val()
                              , ($("#txtNombreAdjusterModal").val().trim() == '' ? null : $("#txtNombreAdjusterModal").val().trim())
                              , ($("#txtApellidoAdjusterModal").val().trim() == '' ? null : $("#txtApellidoAdjusterModal").val().trim())
                              , ($("#txtPhoneAdjusterModal").val().trim() == '' ? null : $("#txtPhoneAdjusterModal").val().trim())
                              , ($("#txtExtAdjusterModal").val().trim() == '' ? null : $("#txtExtAdjusterModal").val().trim()))

            if (seleccionado > 0)//si selecciono alguna fila
            {
                if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
                {
                    ////////////////// Pregunta cuando esta inactivo
                    swal({
                        title: "Do you want to active provider?",
                        text: "You will not be able to recover the information !",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, activate it!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                   function (isConfirm) {
                       if (isConfirm) {
                           //swal("Ok!", "Your information has been saved.", "success");

                           metodoActualizaAjustador(e, Ajustador, "inactivo");
                           $("#btnCancelarModal").trigger("click");
                           $("#btnCancelar").trigger("click");
                       }
                       else {
                           swal("Cancelled", "The information was not saved !!", "error");
                           return 0;
                       }
                   });

                } // cuando el estado de la fila es activo
                else {


                    metodoActualizaAjustador(e, Ajustador, "activo");
                    mensaje = "Your information has been saved";
                    error = "Success";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModal").trigger("click");
                    $("#btnCancelar").trigger("click");
                }


            }
            else// cuando no selecciono nada
            {

                if (accion == 'registra')
                    metodoRegistraAjustador(Ajustador);

                $("#btnCancelarModalAjustadorHom").trigger("click");


            }
        }



        function registraActualizaModalDoctor(e) {

            accion = $("#accionDoctorHom").val();
            seleccionado = $("#seleccionadoDoctorHom").val();
            estadoSeleccion = $("#estadoSeleccionDoctorHom").val();

            if (seleccionado > 0)
                $("#hdCodigo").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar


            var NombreCiudad;
            var CodigoAseguradoraParaActualizar = null;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadInsurerModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadInsurerModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadInsurerModal").val();
            // ----------------------------------------------------------

            $.each($(".rdbSeleccionaCoincidencia"), function (i, val) {
                if ($(val).prop("checked"))
                    CodigoAseguradoraParaActualizar = val.value;
            });


            ///////////////////////////////////////////////////////////
            var Insurer = LlenarAseguradora($("#hdCodigo").val()
                                  , ($("#txtNombreInsurerModal").val().trim() == "" ? null : $("#txtNombreInsurerModal").val().trim())
                                  , ($("#txtTelefonoInsurerModal").val().trim() == "" ? null : $("#txtTelefonoInsurerModal").val().trim())
                                  , ($("#txtExtInsurerModal").val().trim() == "" ? null : $("#txtExtInsurerModal").val().trim())
                                  , ($("#FaxInsurerModal").val().trim() == "" ? null : $("#FaxInsurerModal").val().trim())
                                  , ($("#txtCalleAseguradoraModal").val().trim() == "" ? null : $("#txtCalleAseguradoraModal").val().trim())
                                  , NombreCiudad
                                  , $("#hdAbreviaturaEstadoPaisInsurerModal").val().trim()
                                  , ($("#txtZipInsurerModal").val().trim() == "" ? null : $("#txtZipInsurerModal").val().trim())
                                  , ($("#txtExtCodeInsurerModal").val().trim() == "" ? null : $("#txtExtCodeInsurerModal").val().trim())
                                  , ($("#txtTpaInsurerModal").val().trim() == "" ? null : $("#txtTpaInsurerModal").val().trim())
                                  , ($("#txtFeinSCInsurerModal").val().trim() == "" ? null : $("#txtFeinSCInsurerModal").val().trim())
                                  , ($("#txtCarrierInsurerModal").val().trim() == "" ? null : $("#txtCarrierInsurerModal").val().trim())
                                  , ($("#txtFeinCCInsurerModal").val().trim() == "" ? null : $("#txtFeinCCInsurerModal").val().trim()))
            //////////////////////////////////////////////////////////////////////////
            if (seleccionado > 0)//si selecciono alguna fila
            {

                if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
                {
                    ////////////////// Pregunta cuando esta inactivo
                    swal({
                        title: "Do you want to active insurer?",
                        text: "You will not be able to recover the information !",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, activate it!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                   function (isConfirm) {
                       if (isConfirm) {
                           //swal("Ok!", "Your information has been saved.", "success");

                           metodoActualizaAseguradora(e, Insurer, "inactivo");
                           $("#btnCancelar").trigger("click");
                           $("#btnCancelarModalInsurerHom").trigger("click");
                       }
                       else {
                           swal("Cancelled", "The information was not saved !!", "error");
                           return 0;
                       }
                   });

                } // cuando el estado de la fila es activo
                else {

                    metodoActualizaAseguradora(e, Insurer, "activo");
                    mensaje = "Your information has been saved";
                    error = "Success";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                    
                }


            }
            else// cuando no selecciono nada
            {

                if (accion == 'registra') {
                    metodoRegistraAseguradora(Insurer);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                }
                //else {

                //    metodoActualizaInsurer(e, "activo");
                //}


            }
            ///////////////////////////////////////////////////////
        }


        function registraActualizaEspecialidad(e) {

            accion = $("#accionDoctorHom").val();
            seleccionado = $("#seleccionadoDoctorHom").val();
            estadoSeleccion = $("#estadoSeleccionDoctorHom").val();

            if (seleccionado > 0)
                $("#hdCodigo").val(seleccionado);//doy valor al codigo de cliente, codigo tomado desde modal, para que asi se pueda modificar


            var NombreCiudad;
            var CodigoAseguradoraParaActualizar = null;

            // Obtiene la el nombre de la ciudad seleccionada o ingresada
            if ($("#hdCiudadInsurerModal").val() == "") // Si no se ha seleccionado una ciudad del autocompletado el valor que se registrará será el valor de la caja de texto
                NombreCiudad = $("#txtCiudadInsurerModal").val();
            else // Si se ha seleccionado una ciudad del autocompletado el valor que se registrará será el id seleccionado (nombre de la ciudad).
                NombreCiudad = $("#hdCiudadInsurerModal").val();
            // ----------------------------------------------------------

            $.each($(".rdbSeleccionaCoincidencia"), function (i, val) {
                if ($(val).prop("checked"))
                    CodigoAseguradoraParaActualizar = val.value;
            });

            
            ///////////////////////////////////////////////////////////
            var Insurer = LlenarAseguradora($("#hdCodigo").val()
                                  , ($("#txtNombreInsurerModal").val().trim() == "" ? null : $("#txtNombreInsurerModal").val().trim())
                                  , ($("#txtTelefonoInsurerModal").val().trim() == "" ? null : $("#txtTelefonoInsurerModal").val().trim())
                                  , ($("#txtExtInsurerModal").val().trim() == "" ? null : $("#txtExtInsurerModal").val().trim())
                                  , ($("#FaxInsurerModal").val().trim() == "" ? null : $("#FaxInsurerModal").val().trim())
                                  , ($("#txtCalleAseguradoraModal").val().trim() == "" ? null : $("#txtCalleAseguradoraModal").val().trim())
                                  , NombreCiudad
                                  , $("#hdAbreviaturaEstadoPaisInsurerModal").val().trim()
                                  , ($("#txtZipInsurerModal").val().trim() == "" ? null : $("#txtZipInsurerModal").val().trim())
                                  , ($("#txtExtCodeInsurerModal").val().trim() == "" ? null : $("#txtExtCodeInsurerModal").val().trim())
                                  , ($("#txtTpaInsurerModal").val().trim() == "" ? null : $("#txtTpaInsurerModal").val().trim())
                                  , ($("#txtFeinSCInsurerModal").val().trim() == "" ? null : $("#txtFeinSCInsurerModal").val().trim())
                                  , ($("#txtCarrierInsurerModal").val().trim() == "" ? null : $("#txtCarrierInsurerModal").val().trim())
                                  , ($("#txtFeinCCInsurerModal").val().trim() == "" ? null : $("#txtFeinCCInsurerModal").val().trim()))
            //////////////////////////////////////////////////////////////////////////
            if (seleccionado > 0)//si selecciono alguna fila
            {

                if (estadoSeleccion == "Inactive") // si el estado de la fila seleccionada es inactivo
                {
                    ////////////////// Pregunta cuando esta inactivo
                    swal({
                        title: "Do you want to active insurer?",
                        text: "You will not be able to recover the information !",
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "Yes, activate it!",
                        closeOnConfirm: false,
                        closeOnCancel: false
                    },
                   function (isConfirm) {
                       if (isConfirm)
                       {
                           //swal("Ok!", "Your information has been saved.", "success");
                           metodoActualizaAseguradora(e, Insurer, "inactivo");
                           $("#btnCancelar").trigger("click");
                           $("#btnCancelarModalInsurerHom").trigger("click");
                       }
                       else {
                           swal("Cancelled", "The information was not saved !!", "error");
                           return 0;
                       }
                   });

                } // cuando el estado de la fila es activo
                else {

                    metodoActualizaAseguradora(e, Insurer, "activo");
                    mensaje = "Your information has been saved";
                    error = "Success";
                    MensajeError(mensaje, error);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                    
                }


            }
            else// cuando no selecciono nada
            {

                if (accion == 'registra') {
                    metodoRegistraAseguradora(Insurer);
                    $("#btnCancelarModalInsurerHom").trigger("click");
                }
         

            }
            ///////////////////////////////////////////////////////
        }
    /////////// eventos click en tabla

        $("#tblModalPatientHom tbody").on('click', 'tr', function ()  //selecciona fila de tabla  
        {

            var name;  // Ins_name
            var ciudad;// Ins_city            
            var state; // Ins_state            
            var zip_code; // Ins_zipCode
            var status; // Ins_status
            var codigo; // Ins_code
            var seleccionado;
            

            var aPos = $("#tblModalPatientHom").dataTable().fnGetPosition(this);
            var aData = $("#tblModalPatientHom").dataTable().fnGetData(aPos);

            codigo = aData[0];
            status = aData[6];
            seleccionado = aData[7];

            

            var $radios = $("input:radio[name=idRadio]");
            $radios.filter('[value=' + codigo + ']').prop('checked', true);
            $("#seleccionadoPatientHom").val(codigo);
            $("#estadoSeleccionPatientHom").val(status);

        });


        $("#tblModalInsurer tbody").on('click', 'tr', function ()  //selecciona fila de tabla  
        {

            var name;  // Ins_name
            var ciudad;// Ins_city            
            var state; // Ins_state            
            var zip_code; // Ins_zipCode
            var status; // Ins_status
            var codigo; // Ins_code
            var seleccionado;


            var aPos = $("#tblModalInsurer").dataTable().fnGetPosition(this);
            var aData = $("#tblModalInsurer").dataTable().fnGetData(aPos);

            codigo = aData[0];
            name = aData[1];
            ciudad = aData[2];
            state = aData[3];
            zip_code = aData[4];
            status = aData[5];
            seleccionado = aData[6];



            var $radios = $("input:radio[name=idRadio]");
            $radios.filter('[value=' + codigo + ']').prop('checked', true);
            $("#seleccionado").val(codigo);
            $("#estadoSeleccion").val(status);

        });




    

        $("#tblModalAdjusterHom tbody").on('click', 'tr', function ()  //selecciona fila de tabla  
        {


            var name;  // pro_firstname
            var apellido;// pro_lastname
            var idnumber; // pro_number        
            var status; // Ins_status
            var codigo; // Ins_code
            var seleccionado;


            var aPos = $("#tblModalAdjusterHom").dataTable().fnGetPosition(this);
            var aData = $("#tblModalAdjusterHom").dataTable().fnGetData(aPos);


            codigo = aData[0];
            status = aData[5];


            var $radios = $("input:radio[name=idRadio]");
            $radios.filter('[value=' + codigo + ']').prop('checked', true);
            $("#seleccionadoAdjusterHom").val(codigo);
            $("#estadoSeleccionAdjusterHom").val(status);


        });

        $("#tblModalProviderHom tbody").on('click', 'tr', function ()  //selecciona fila de tabla  
        {

            var name;  // pro_firstname
            var apellido;// pro_lastname
            var idnumber; // pro_number        
            var status; // Ins_status
            var codigo; // Ins_code
            var seleccionado;


            var aPos = $("#tblModalProviderHom").dataTable().fnGetPosition(this);
            var aData = $("#tblModalProviderHom").dataTable().fnGetData(aPos);

            codigo = aData[0];
            status = aData[4];




            var $radios = $("input:radio[name=idRadio]");
            $radios.filter('[value=' + codigo + ']').prop('checked', true);
            $("#seleccionadoProviderHom").val(codigo);
            $("#estadoSeleccionProviderHom").val(status);


        });


        $("#tblModalDoctorHom tbody").on('click', 'tr', function ()  //selecciona fila de tabla  
        {

            var status; // Ins_status
            var codigo; // Ins_code
            var seleccionado;


            var aPos = $("#tblModalDoctorHom").dataTable().fnGetPosition(this);
            var aData = $("#tblModalDoctorHom").dataTable().fnGetData(aPos);

            codigo = aData[0];
            status = aData[5];
            seleccionado = aData[6];

            

            var $radios = $("input:radio[name=idRadio]");
            $radios.filter('[value=' + codigo + ']').prop('checked', true);
            $("#seleccionadoDoctorHom").val(codigo);
            $("#estadoSeleccionDoctorHom").val(status);

        });


         /////////// eventos cancelar

        $("#btnCancelarInsurerModal").on("click", function () {
            LimpiarControlesRegistroNuevaAseguradora();
        });

        $("#btnCancelarProviderModal").on("click", function () {
            LimpiarControlesRegistroNuevoProveedor();
        });


        $("#btnCancelarAjustadorModal").on("click", function () {
            LimpiarControlesRegistroNuevoAjustador();
        });

        $("#btnCancelarModalAdjusterHom").on("click", function () {
            $("#txtNombreAdjusterModal").focus();
        });
        $("#btnCancelarModalEspecialidadHom").on("click", function () {
            LimpiarControlesEspecialidad();
        });
        

    //Agregar fila a tabla




        function AgregaFilaDoctorCaso(Doctor) {
            //Paciente.Cit_code = "--";
            //Paciente.Sta_code = "--"; 
            console.log("agregafila");
            console.log(Doctor);
            //Doctor.Med_lastName,
            $('#tblDoctor').dataTable().fnAddData([Doctor.med_code, Doctor.Med_firstName,  Doctor.Med_address, Doctor.Med_city, Doctor.Med_state, Doctor.Med_zipCode, Doctor.Med_zipCodeExt, Doctor.Med_phone, Doctor.Med_phoneExt, Doctor.Med_alternatePhone, Doctor.Med_fax, comboSeleccionado, Doctor.Med_office, '<a class="btn EditarDoctor btn-white btn-bitbucket"><i class="fa fa-pencil text-danger"></i></a> &nbsp; <a class="btn EliminarDoctor  btn-white btn-bitbucket"><i class="fa fa-trash-o text-danger"></i> </a>']);

            var otable = $("#tblDoctor").dataTable().fnDestroy();
            otable = $('#tblDoctor').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }],
                dom: '<"html5buttons"B>lTfgitp'
            });
            dato = Doctor.Med_firstName + " " + Doctor.Med_lastName;
            otable = $('.dataTables-example').dataTable().fnFilter(dato);


            ///otable =  $("#tblPacientes").dataTable({ "columnDefs": [{className:"hidden","targets": [0,6,8]}]  });
        }

        function AgregaFilaAbogadoCaso(Abogado) {
            //Paciente.Cit_code = "--";
            //Paciente.Sta_code = "--"; 
            console.log("agregafila");
            console.log(Doctor);
            //Doctor.Med_lastName,
            $('#tblDoctor').dataTable().fnAddData([Doctor.med_code, Doctor.Med_firstName, Doctor.Med_address, Doctor.Med_city, Doctor.Med_state, Doctor.Med_zipCode, Doctor.Med_zipCodeExt, Doctor.Med_phone, Doctor.Med_phoneExt, Doctor.Med_alternatePhone, Doctor.Med_fax, comboSeleccionado, Doctor.Med_office, '<a class="btn EditarDoctor btn-white btn-bitbucket"><i class="fa fa-pencil text-danger"></i></a> &nbsp; <a class="btn EliminarDoctor  btn-white btn-bitbucket"><i class="fa fa-trash-o text-danger"></i> </a>']);

            var otable = $("#tblDoctor").dataTable().fnDestroy();
            otable = $('#tblDoctor').DataTable({
                columnDefs: [{ className: "hidden", "targets": [0] }],
                dom: '<"html5buttons"B>lTfgitp'
            });
            dato = Doctor.Med_firstName + " " + Doctor.Med_lastName;
            otable = $('.dataTables-example').dataTable().fnFilter(dato);


            ///otable =  $("#tblPacientes").dataTable({ "columnDefs": [{className:"hidden","targets": [0,6,8]}]  });
        }



   

        function AgregaFilaTablaCaso(Claim, codigoPaciente,nombrePaciente, Aseguradora, FechaAccidente, estadoCaso, CodCaseNew)
        {

            //$('#tblCasos').dataTable().fnSetColumnVis(0, false, false);
   
            console.log(CodCaseNew);

            $('#tblCasos').dataTable().fnAddData([
               CodCaseNew, Claim,codigoPaciente,  nombrePaciente, Aseguradora, FechaAccidente, estadoCaso, 'xxx']);//<a class="btn SeleccionarCaso btn-white btn-bitbucket" href="#detalleCase"><i class="fa fa-check text-danger"></i></a>

            var otable = $("#tblCasos").dataTable().fnDestroy();
            ////otable = $('.dataTables-example').DataTable({
            //otable = $("#tblCasos").DataTable({
            //    columnDefs: [{ className: "hidden", "targets": [0, 6, 8] }]
            //});
            //dato = Paciente.Pat_firstName + " " + Paciente.Pat_lastName;

            //otable = $('.dataTables-example').dataTable().fnFilter(dato);

            
            otable = $("#tblCasos").dataTable({ "columnDefs": [{ className: "hidden", "targets": [0, 2] }] });
            $("#tblCasos_filter").css("display", "none");
            console.log("oculto");
        }


       ///Otras Funciones
        function convierteFecha(dato)
        {
            console.log(dato);
            datoString = dato.toString();
            var dateString = datoString.substr(6);
            var currentime = new Date(parseInt(dateString));
            var month = currentime.getMonth() + 1;
            var day = currentime.getDate();
            var year = currentime.getFullYear();
            //var myDate = day + "/" + month + "/" + year;
            var myDate = month + "/" + day + "/" + year;

            return myDate;
        }

        function MensajeError(mensaje, error)
        {
            swal({
                title: error,
                text: mensaje   
            });
        }

        //function CargaSexoParaActualizar(e)
        //{
            
        //    e.preventDefault();
        //    ($("#rdbMasculino").prop("checked") == true ? $("#rdbMasculinoPacienteModalActualizado").prop("checked", true) : $("#rdbFemeninoPacienteModalActualizado").prop("checked", true));
        //}

    @*      function ActualizaSexoPaciente(e)
        {
            e.preventDefault();

            var CodigoPaciente = parseInt($("#hdCodigoPaciente").val());
            var Sexo = null; 

            Sexo = ($("#rdbMasculinoPacienteModalActualizado").prop("checked") == true ? "M" : "F") // obtiene el sexo            

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({"Codigo": CodigoPaciente , "Sexo": Sexo }),
                url: '@Url.Action("ActualizaSexo", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {


                    if (Sexo  == 'M') {
                        $("#rdbMasculino").prop("checked", true);
                        $("#rdbFemenino").prop("checked", false);
                    }
                    else if (Sexo == 'F') {
                        $("#rdbMasculino").prop("checked", false);
                        $("#rdbFemenino").prop("checked", true);
                    }
                    else {
                        $("#rdbMasculino").prop("checked", false);
                        $("#rdbFemenino").prop("checked", false);
                    }

                }
            });

            $("#btnCancelaActualizarSexoPacienteModal").trigger("click");

        }*@

     function ActualizaSexoPaciente(e)
      {
        e.preventDefault();

        var CodigoPaciente = parseInt($("#hdCodigoPaciente").val());
        var Sexo = null;

        Sexo = ($("#rdbMasculino").prop("checked") == true ? "M" : "F") // obtiene el sexo            

        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify({ "Codigo": CodigoPaciente, "Sexo": Sexo }),
            url: '@Url.Action("ActualizaSexo", "Patient")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    error = "Successful!";
                    mensaje = "Data save correctly...";
                    MensajeError(mensaje, error);

                    if (Sexo == 'F') {
                        $("#rdbMasculinoPacienteModal").prop("checked", false);
                        $("#rdbFemeninoPacienteModal").prop("checked", true);
                    }
                    else
                    {
                        $("#rdbMasculinoPacienteModal").prop("checked", true);
                        $("#rdbFemeninoPacienteModal").prop("checked", false);
                    }

                }
            });

            //$("#btnCancelaActualizarSexoPacienteModal").trigger("click");Edherb

        }
    
    $("#tblModalEspecialidad > tbody").on("click", "tr > td > a", EditaSeleccionaEspecialidad);  
    

    function EditaSeleccionaEspecialidad(e)
    {
        e.preventDefault();

        var CodigoEsp = parseInt($(this).parent().parent().find("td:eq(0)").html());
        var nombEsp = $(this).parent().parent().find("td:eq(1)").html();

        console.log(CodigoEsp);
        console.log(nombEsp);
        //alert("bien");
        dato = nombEsp.trim();
        var otable = $("#tblModalEspecialidad").dataTable();
        var target_row = $(this).closest("tr").get(0);
        var aPos = otable.fnGetPosition(target_row);

        $("#txtEspecialidad").val(dato);
        $("#txtEspecialidadCodigo").val(CodigoEsp);
        $("#btnRegistraAgregaEspecialidad").html("Update");

    };

   
    function agregaEspecialidad(e)
    {
        textEsp =  $("#txtEspecialidad").val();
        codEsp  =  $("#txtEspecialidadCodigo").val();
        

        if ($("#txtEspecialidad").val() != "")
        {
            var Especialidad = LlenarEspecialidad(codEsp, textEsp, 'M');
            if (codEsp > 0)
                actualizaEspecialidad(codEsp, textEsp, Especialidad);
            else
                registraEspecialidad(codEsp, textEsp, Especialidad);

                
        }
        else {
            //alert("Select a speciality");
            error = "Error!";
            mensaje = "Select a specialty!";
            MensajeError(mensaje, error);
        }
    }
    




    function LlenarEspecialidad(Codigo, Nombre, Tipo)
    {
        var especialidadJson =
            {
                "Spe_code": Codigo,
                "Spe_name": Nombre,
                "Spe_type": Tipo

            }
        return especialidadJson;
    }


    function registraEspecialidad(codigo, descripcion, Especialidad)
    {
 
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Especialidad),
            url: '@Url.Action("Create", "Specialty")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    if (Data[0].ErrorMessage == "")
                    {
                        console.log(Data[0].SpecialtyErrorCode);
                        console.log(Data);                        
                        //AgregaFilaEspecialidad(Especialidad,'M', Data[0].SpecialtyErrorCode);
                         error = "Successful!";
                         mensaje = "Data save correctly...";
                        MensajeError(mensaje, error);
                        LimpiarControlesEspecialidad(); 
                        CargarEspecialidadesDoctor();
                    }
                    else
                    {
                        if (Data[0].PatientErrorCode == 2601) {

                        }
                        else
                            error = "Error in register!!";

                        
                        mensaje = Data[0].ErrorMessage;                        
                        MensajeError(mensaje, error);
                    }
                }
                    });
    }


    function actualizaEspecialidad(codEsp, textEsp, Especialidad)
    {
       
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify(Especialidad),
            url: '@Url.Action("ActualizarDatos", "Specialty")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data) {
                    EspecialidadX = Especialidad;
                    seleccionado = $("#cmbTipoEspecialidad option:selected").html();
                    Especialidad = (Data);

                    if (Data[0].ErrorMessage == "")
                    {
                        aPos = $("#apos").val();
                        var otable = $("#tblEspecialidad").dataTable();

                        //seleccionado = $("#cmbTipoEspecialidad option:selected").html();
                        //EditaFila(EspecialidadX, seleccionado, aPos, otable);
                        error = "Successful!";
                        mensaje = "Data save correctly...";
                        MensajeError(mensaje, error);                        
                        LimpiarControlesEspecialidad();
                        CargarEspecialidadesDoctor();
                    }
                    else
                    {
                        error = "Error!";
                        mensaje = Data[0].ErrorMessage + "...";
                        $("#cmbTipoEspecialidad").focus();//el error solo se muestra en SSD                        
                    }
                    MensajeError(mensaje, error);
                }
            });

    }

    function generaPdf()
    {
        
        var urlx = $("#linkPdf").attr("data-url");
        codigoCase = $("#hdCodigoCaso").val();
        
        if (codigoCase > 0) {
            console.log(codigoCase);
            urlx = urlx + "?codigoCase=" + codigoCase;
            console.log(urlx);
            window.open(urlx);
        }
        else
        {
            error = "Error";
            mensaje = "Selected a case";
            MensajeError(mensaje, error);
        }

    }


   
</script>