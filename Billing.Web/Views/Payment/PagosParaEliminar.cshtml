@model IEnumerable<Billing.Web.Models.SP_LIST_PAYMENTS_TO_BE_REMOVED_Result>
@{
    var NumeroFactura = (string)null;
}

<br />
<div class="table-responsive">
  <div id="divPagosParaEliminar">
    <input type="hidden" id="hdCodigoPago" />
    <table class="table table-striped table-bordered table-hover dataTables-example" id="tblPagosParaEliminar">
        <thead class="th_tabla">
            <tr>
                <th class="hidden">Pay Code</th>        <!-- Código de pago -->
                <th class="TextoAlineado">Paid Date</th> <!-- Fecha de pago -->
                <th class="TextoAlineado">Amount</th>          <!-- Monto del pago -->
                <th class="TextoAlineado hidden">Type Pay</th> <!-- Tipo del pago -->                
                <th class="TextoAlineado">Check #</th>      <!-- Número de transacción -->
                <th class="TextoAlineado">Bill Number</th> <!-- Número de factura -->

                <th ></th>                <!-- Botón Eliminar -->
            </tr>
        </thead>
        <tbody>
            
        @foreach (var item in Model)
        { 
            NumeroFactura = @item.OldPayCode;
                           
            <tr>
                <td class="hidden">@item.PayCode</td>
                <td class="TextoAlineado">@item.PayDate</td>
                <td class="TextoAlineado">@item.PayAmount</td>
                <td class="TextoAlineado hidden">@item.PayType</td>                
                <td class="TextoAlineado">@item.CheckNumber</td>
                <td class="TextoAlineado">
                    @NumeroFactura
                </td>
                <td style="text-align: center;">
                    @if (NumeroFactura == "")
                    {
                        <a href="#" style="width: 80px;"  class="btn btn-danger  btn-bitbucket DetallePago">View</a>
                    }
                    else
                    {
                        <a href="#" style="width: 80px;" class ="btn btn-danger btn-bitbucket EliminarPago">Delete</a>
                    }
                </td>
            </tr>
        }
            
        </tbody>
    </table>
    </div>
    <br />
    <div id="EnvolturatblFacturasEliminar">

    </div>
</div>

<script>
    var FacturasParaRevertir = new Array();

    $(Inicio)
    
    function Inicio()
    {
        PaginarTabla();

        // Controla el evento click en los botones "Delete" de la última columna de la tabla "tblPagosParaEliminar".
        $("#tblPagosParaEliminar > tbody").on("click", "tr > td > .EliminarPago", EliminarPago_click);

        // Controla el evento click en los botones "Detail" de la última columna de la tabla "tblPagosParaEliminar".
        $("#tblPagosParaEliminar > tbody").on("click", "tr > td > .DetallePago", DetallePago_click);


        PintaBotonSegunFuncionalidad();
    }

    function PintaBotonSegunFuncionalidad()
    {
        
        $('#tblPagosParaEliminar > tbody > tr').each(function (e) {        
            console.clear();

            if ($(this)["0"].children.length > 1)
            { 
                console.log($(this)["0"].children[6].children["0"])
                var boton = $(this)["0"].children[6].children["0"];
            }

            /*   if ($(boton).html().trim() == 'View') COLOR
                $(boton).css({ 'background-color': '#a5878a' })
            else
                $(boton).css({ 'background-color': 'red' })*/

        })

    }

    // function btnEliminaPagoDetallado_click(e)
    // {
    //     e.preventDefault()
    // 
    //     var codigoPago
    // 
    //     codigoPago = parseInt($('#hdCodigoPago').val())
    // 
    //     MensajeConfirmacionMenu('Do you want to delete this payment?', 'Confirmation', RespuestaConfirmacionPago, codigoPago)
    // }

    function EliminarPago_click(e)
    {
        e.preventDefault()

        var botonEliminaPago
        var codigoPago
        
        botonEliminaPago = $(this)

        codigoPago = parseInt(botonEliminaPago["0"].parentElement.parentElement.children["0"].innerHTML);
        
        MensajeConfirmacionMenu('Do you want to delete this payment?', 'Confirmation', RespuestaConfirmacionPago, codigoPago)
    }

    function DetallePago_click(e)
    {
        e.preventDefault()

        var codigoPago

        codigoPago = parseInt($(this)["0"].parentNode.parentNode.children["0"].innerText.trim())
        paidDate = $(this)["0"].parentNode.parentNode.children["1"].innerText.trim();
        amount = $(this)["0"].parentNode.parentNode.children["2"].innerText.trim();
        check = $(this)["0"].parentNode.parentNode.children["3"].innerText.trim();
        bill = $(this)["0"].parentNode.parentNode.children["4"].innerText.trim();

        llenaFormularioEliminarModal(paidDate,amount,check,bill);
        
        cargarDetallePago(codigoPago);
        $('#hdCodigoPago').val(codigoPago);

        pintaFilaSeleccionada(e)
    }
    function llenaFormularioEliminarModal(paidDate,amount,check,bill)
    {
        $("#paidDateModal").val(paidDate);
        $("#amountModal").val(amount);
        $("#checkModal").val(check);
        $("#billNumberModal").val(bill);
        $("#FormularioPagosParaEliminar").css("display", "block");        
        $("#divPagosParaEliminar").css("display", "none");

    }
    function cargarDetallePago(codigoPago) {
        $.ajax({
            type: "POST",
            async: false,
            data: JSON.stringify({ "CodigoPago": codigoPago }),
            url: '@Url.Action("ListarFacturasParaEliminar", "Payment")',
                contentType: "application/json",
                success: function (VistaParcialFacturasEliminar) {
                    $("#EnvolturatblFacturasEliminar").html(VistaParcialFacturasEliminar);
                }
            });
        }


    // function EliminaPago(objetoArgumentos)
    function EliminaPago(codigoPago)
    {
        var Pago // Aquí se obtiene un pago, es decir el conjunto de facturas que conforman un pago
    
        // Obtiene un pago, es decir el conjunto de facturas que conforman un pago.
        Pago = ObtienePago(codigoPago);

        $.each(Pago, function (Indice, Valor)
        {
            var objFacturaParaRevertir = new FacturaParaRevertir();

            objFacturaParaRevertir.CodigoFactura = Valor.Bih_code;
            objFacturaParaRevertir.Monto = parseFloat(Valor.Pab_amount);

            FacturasParaRevertir.push(objFacturaParaRevertir);
        });

        // Este llamada actualiza los montos en las facturas (reversión de los montos) y actualiza el estado de las mismas.
        RevierteMontosEnFactura(FacturasParaRevertir);

        // Esta llamada elimina el pago de la tabla "PayHead" y "PayBody".
        EliminaPagoFisico(codigoPago);        
        
        CargarAseguradorasParaEliminacion();
        $("#EnvolturaPagosParaEliminar").html('');
        $("#btnCancelarModalElimina").trigger("click");
    }

        function FacturaParaRevertir()
        {
            var CodigoFactura;
            var Monto;
        }

        // Elimina el pago de la tabla "PayHead" y "PayBody".
        function EliminaPagoFisico(CodigoPago)
        {
            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "CodigoPago": CodigoPago }),
                url: '@Url.Action("EliminaPago", "Payment")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {

                }
            });
        }

        // Esta función actualiza los montos en las facturas (reversión de los montos) y actualiza el estado de las mismas.
        function RevierteMontosEnFactura(Pago)
        {
            console.log(Pago);
            // return false;         

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "FacturasParaRevertir": Pago }),
                url: '@Url.Action("RevierteMontosEnFactura", "Payment")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                
                }
            });
        }

        // Función que obtiene un pago, es decir el conjunto de facturas que conforman un pago
        function ObtienePago(CodigoPago)
        {
            var Pago;

            $.ajax({
                type: "POST",
                async: false,
                data: JSON.stringify({ "CodigoPago": CodigoPago }),
                url: '@Url.Action("ListaPago", "Payment")',
                contentType: "application/json",
                dataType: 'json',
                success: function (Data)
                {
                    Pago = Data;
                }
            });

            return Pago;
        }

        function PaginarTabla()
        {
            var otable = $("#tblPagosParaEliminar").dataTable().fnDestroy();

            otable = $("#tblPagosParaEliminar")
            .DataTable({
                "pageLength": 10
                , "bFilter": false
                , "bLengthChange": false
                , "bInfo": false
                , "dom": '<"toolbar">frtip'
                , "ordering": false
            });
        }


        function MensajeConfirmacionMenu(mensaje, titulo , miFuncion, objetoArgumentos)
        {
            swal({
                title: titulo,
                text: mensaje,
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: false,
                closeOnCancel: true
            },
            function (isConfirm) 
            {       
                miFuncion(isConfirm, objetoArgumentos);
            })
        }

        var RespuestaConfirmacionPago = function (Respuesta, codigoPago)
        {
            // si confirma la eliminación.
            if (Respuesta)
            {
                EliminaPago(codigoPago);
                MensajeError('Payment deleted Successfully!!!', '');
                // RespuestaConfirmacionPago
                ObtenerAseguradorasParaPago();
                CargarAseguradorasParaPago();
            }
            // si cancela la eliminación.
            else 
            {
                // $("#btnCancelarModalElimina").trigger("click");
            }
            
            // Hace que después de revertir el pago todo vuelva a la normalidad, es decir los valores 
            // de la página principal de pago vuelven a su estado original.
            $("#cmbFilter").val(CodigoAseguradoraSeleccionada).trigger("change");
        }



        function pintaFilaSeleccionada(e) {
            // Establece a todas la filas su formato original.
            $('#tblPagosParaEliminar > tbody > tr').css({'background': 'transparent'
                                                , 'color': 'black'
                                                , 'font-style': 'normal'
                                                , 'font-weight': 'normal'
            });

            // Coloreo la fila seleccionada
            e.currentTarget.parentElement.parentElement.style.backgroundColor = "#a1bccd";
            e.currentTarget.parentElement.parentElement.style.color = "#445463";
            e.currentTarget.parentElement.parentElement.style.fontStyle = "italic";
            e.currentTarget.parentElement.parentElement.style.fontWeight = "bold";
        }

</script>